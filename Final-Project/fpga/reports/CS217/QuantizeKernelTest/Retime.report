x273 = ArrayFromSeq(ArrayBuffer(Const(-1), Const(-0.75), Const(-0.5), Const(-0.25), Const(0.0), Const(0.25), Const(0.5), Const(0.75), Const(1)))
 - Name: input
 - Type: Array[Flt[_24,_8]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x274 = PrintIf(Set(),Const("First 10 input values:\n"))
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x276 = SeriesForeach(Const(0),Const(10),Const(1),Block((b3) => Const(()))) {
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
  block 0: Block((b3) => Const(())) {
    x275 = PrintIf(Set(),Const("input(b3) = x4\n"))
     - Type: Void
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
  } // End of x276 block #0
} // End of x276
x277 = DRAMHostNew(List(Const(9)),Const(0.0))
 - Name: inDRAM
 - Type: DRAM1[Flt[_24,_8]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x278 = DRAMHostNew(List(Const(9)),Const(0.0))
 - Name: outDRAM
 - Type: DRAM1[Flt[_24,_8]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x279 = SetMem(x277,x273)
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x244 = AccelScope(Block(Const(()))) {
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
  block 0: Block(Const(())) {
    x280 = SRAMNew(List(Const(9)),SRAM1[Flt[_24,_8]])
     - Name: inSRAM_0
     - Type: SRAM1[Flt[_24,_8]]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x281 = SRAMNew(List(Const(9)),SRAM1[Flt[_24,_8]])
     - Name: outSRAM_0
     - Type: SRAM1[Flt[_24,_8]]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x316 = UnitPipe(Set(),Block(Const(())),None) {
     - Name: DenseTransfer
     - Type: Void
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
      block 0: Block(Const(())) {
        x282 = StreamOutNew(BurstCmdBus)
         - Type: StreamOut[BurstCmd]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x283 = FIFONew(Const(16))
         - Type: FIFO[IssuedCmd]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x284 = StreamInNew(BurstDataBus())
         - Type: StreamIn[Flt[_24,_8]]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x291 = UnitPipe(Set(),Block(Const(())),None) {
         - Type: Void
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
          block 0: Block(Const(())) {
            x285 = DRAMAddress(x277)
             - Type: Fix[TRUE,_64,_0]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x286 = SimpleStruct(ArrayBuffer((offset,x285), (size,Const(64)), (isLoad,Const(true))))
             - Type: BurstCmd
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x287 = DRAMIsAlloc(x277)
             - Type: Bit
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x288 = StreamOutBankedWrite(x282,ArrayBuffer(x286),ArrayBuffer(Set(x287)))
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x289 = SimpleStruct(ArrayBuffer((size,Const(16)), (start,Const(0)), (end,Const(9))))
             - Type: IssuedCmd
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x290 = FIFOBankedEnq(x283,ArrayBuffer(x289),ArrayBuffer(Set(Const(true))))
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          1.0
             - Reduce Latency:   1.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
          } // End of x291 block #0
        } // End of x291
        x292 = FringeDenseLoad(x277,x282,x284)
         - Type: Void
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x315 = UnitPipe(Set(),Block(Const(())),None) {
         - Type: Void
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
          block 0: Block(Const(())) {
            x293 = RegNew(Const(0))
             - Type: Reg[Fix[TRUE,_32,_0]]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x294 = RegNew(Const(0))
             - Type: Reg[Fix[TRUE,_32,_0]]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x301 = UnitPipe(Set(),Block(Const(())),None) {
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
              block 0: Block(Const(())) {
                x295 = FIFOBankedDeq(x283,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
                 - Type: Vec[IssuedCmd]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    true
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x296 = VecApply(x295,0)
                 - Type: IssuedCmd
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x297 = FieldApply(x296,end)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x298 = RegWrite(x293,x297,Set())
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          1.0
                 - Reduce Latency:   1.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x299 = FieldApply(x296,size)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x300 = RegWrite(x294,x299,Set())
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          1.0
                 - Reduce Latency:   1.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
              } // End of x301 block #0
            } // End of x301
            x406 = RegRead(x294)
             - Type: Fix[TRUE,_32,_0]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x303 = CounterNew(Const(0),x406,Const(1),Const(1))
             - Type: Counter[Fix[TRUE,_32,_0]]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x304 = CounterChainNew(List(x303))
             - Type: CounterChain
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x314 = UnrolledForeach(Set(),x304,Block(Const(())),List(List(b305)),List(List(b306)),None) {
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
              block 0: Block(Const(())) {
                x307 = FixLeq(Const(0),b305)
                 - Type: Bit
                 - Cycle: <no cycle>
                 - Latency:          0.4
                 - Reduce Latency:   0.4
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x308 = RegRead(x293)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x309 = FixLst(b305,x308)
                 - Type: Bit
                 - Cycle: <no cycle>
                 - Latency:          0.4
                 - Reduce Latency:   0.4
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x310 = And(x307,x309)
                 - Type: Bit
                 - Cycle: <no cycle>
                 - Latency:          0.2
                 - Reduce Latency:   0.2
                 - Requires Regs:    true
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x311 = StreamInBankedRead(x284,ArrayBuffer(Set(b306)))
                 - Type: Vec[Flt[_24,_8]]
                 - Cycle: <no cycle>
                 - Latency:          1.0
                 - Reduce Latency:   1.0
                 - Requires Regs:    true
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x408 = DelayLine(1,x311)
                 - Type: Vec[Flt[_24,_8]]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x312 = VecApply(x408,0)
                 - Type: Flt[_24,_8]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x409 = DelayLine(1,b305)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x410 = DelayLine(1,x310)
                 - Type: Bit
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x411 = DelayLine(1,b306)
                 - Type: Bit
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x313 = SRAMBankedWrite(x280,Vector(x312),Vector(List(Const(0))),Vector(x409),Vector(Set(x410, x411)))
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          1.0
                 - Reduce Latency:   1.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
              } // End of x314 block #0
            } // End of x314
          } // End of x315 block #0
        } // End of x315
      } // End of x316 block #0
    } // End of x316
    x317 = CounterNew(Const(0),Const(9),Const(1),Const(1))
     - Type: Counter[Fix[TRUE,_32,_0]]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x318 = CounterChainNew(List(x317))
     - Type: CounterChain
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x350 = UnrolledForeach(Set(),x318,Block(Const(())),List(List(b319)),List(List(b320)),None) {
     - Type: Void
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
      block 0: Block(Const(())) {
        x321 = SRAMBankedRead(x280,Vector(List(Const(0))),Vector(b319),Vector(Set(b320)),Vec[Flt[_24,_8]])
         - Type: Vec[Flt[_24,_8]]
         - Cycle: <no cycle>
         - Latency:          2.0
         - Reduce Latency:   2.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x322 = VecApply(x321,0)
         - Type: Flt[_24,_8]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x323 = FltMul(x322,Const(32767.00000000000000))
         - Name: x
         - Type: Flt[_24,_8]
         - Cycle: <no cycle>
         - Latency:          8.0
         - Reduce Latency:   8.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x324 = FltLst(x323,Const(-32768))
         - Type: Bit
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x325 = FltLst(Const(32767.00000000000000),x323)
         - Type: Bit
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x326 = Mux(x325,Const(32767.00000000000000),x323)
         - Type: Flt[_24,_8]
         - Cycle: <no cycle>
         - Latency:          0.5
         - Reduce Latency:   0.5
         - Requires Regs:    true
         - Built-In Latency: 0.0
         - Delays: <none>
        x327 = Mux(x324,Const(-32768),x326)
         - Name: clipped
         - Type: Flt[_24,_8]
         - Cycle: <no cycle>
         - Latency:          0.5
         - Reduce Latency:   0.5
         - Requires Regs:    true
         - Built-In Latency: 0.0
         - Delays: <none>
        x412 = DelayLine(1,x327)
         - Name: clipped_d1
         - Type: Flt[_24,_8]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x328 = FltLst(x412,Const(0.0))
         - Type: Bit
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x329 = FltSub(x412,Const(0.5))
         - Type: Flt[_24,_8]
         - Cycle: <no cycle>
         - Latency:          12.0
         - Reduce Latency:   12.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x330 = FltToFix(x329,TRUE,_16,_0)
         - Type: Fix[TRUE,_16,_0]
         - Cycle: <no cycle>
         - Latency:          6.0
         - Reduce Latency:   6.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x331 = FltAdd(x412,Const(0.5))
         - Type: Flt[_24,_8]
         - Cycle: <no cycle>
         - Latency:          12.0
         - Reduce Latency:   12.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x332 = FltToFix(x331,TRUE,_16,_0)
         - Type: Fix[TRUE,_16,_0]
         - Cycle: <no cycle>
         - Latency:          6.0
         - Reduce Latency:   6.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x413 = DelayLine(18,x328)
         - Type: Bit
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x333 = Mux(x413,x330,x332)
         - Name: rounded
         - Type: Fix[TRUE,_16,_0]
         - Cycle: <no cycle>
         - Latency:          0.5
         - Reduce Latency:   0.5
         - Requires Regs:    true
         - Built-In Latency: 0.0
         - Delays: <none>
        x334 = FixToFlt(x333,_24,_8)
         - Type: Flt[_24,_8]
         - Cycle: <no cycle>
         - Latency:          5.0
         - Reduce Latency:   5.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x335 = FltDiv(x334,Const(32768))
         - Name: quantized
         - Type: Flt[_24,_8]
         - Cycle: <no cycle>
         - Latency:          28.0
         - Reduce Latency:   28.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x414 = DelayLine(62,b319)
         - Type: Fix[TRUE,_32,_0]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x415 = DelayLine(62,b320)
         - Type: Bit
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x336 = SRAMBankedWrite(x281,Vector(x335),Vector(List(Const(0))),Vector(x414),Vector(Set(x415)))
         - Type: Void
         - Cycle: <no cycle>
         - Latency:          1.0
         - Reduce Latency:   1.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x337 = FltToText(x322,None)
         - Type: Text
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x338 = TextConcat(List(Const("Original: "), x337))
         - Type: Text
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x339 = TextConcat(List(x338, Const(", Scaled: ")))
         - Type: Text
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x340 = FltToText(x323,None)
         - Type: Text
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x341 = TextConcat(List(x339, x340))
         - Type: Text
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x342 = TextConcat(List(x341, Const(", Clipped: ")))
         - Type: Text
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x343 = FltToText(x412,None)
         - Type: Text
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x344 = TextConcat(List(x342, x343))
         - Type: Text
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x345 = TextConcat(List(x344, Const(", Quantized: ")))
         - Type: Text
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x346 = FltToText(x335,None)
         - Type: Text
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x347 = TextConcat(List(x345, x346))
         - Type: Text
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x348 = TextConcat(List(x347, Const("\n")))
         - Type: Text
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x349 = PrintIf(Set(x415),x348)
         - Type: Void
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
      } // End of x350 block #0
    } // End of x350
    x383 = UnitPipe(Set(),Block(Const(())),None) {
     - Name: DenseTransfer
     - Type: Void
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
      block 0: Block(Const(())) {
        x351 = StreamOutNew(BurstCmdBus)
         - Type: StreamOut[BurstCmd]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x352 = StreamOutNew(BurstFullDataBus())
         - Type: StreamOut[Tup2[Flt[_24,_8],Bit]]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x353 = StreamInNew(BurstAckBus)
         - Type: StreamIn[Bit]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x382 = UnitPipe(Set(),Block(Const(())),None) {
         - Type: Void
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
          block 0: Block(Const(())) {
            x377 = UnitPipe(Set(),Block(Const(())),None) {
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
              block 0: Block(Const(())) {
                x354 = RegNew(Const(0))
                 - Type: Reg[Fix[TRUE,_32,_0]]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x355 = RegNew(Const(0))
                 - Type: Reg[Fix[TRUE,_32,_0]]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x362 = UnitPipe(Set(),Block(Const(())),None) {
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                  block 0: Block(Const(())) {
                    x356 = DRAMAddress(x278)
                     - Type: Fix[TRUE,_64,_0]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x357 = SimpleStruct(ArrayBuffer((offset,x356), (size,Const(64)), (isLoad,Const(false))))
                     - Type: BurstCmd
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x358 = DRAMIsAlloc(x278)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x359 = StreamOutBankedWrite(x351,ArrayBuffer(x357),ArrayBuffer(Set(x358)))
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x360 = RegWrite(x354,Const(9),Set())
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x361 = RegWrite(x355,Const(16),Set())
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                  } // End of x362 block #0
                } // End of x362
                x407 = RegRead(x355)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x364 = CounterNew(Const(0),x407,Const(1),Const(1))
                 - Type: Counter[Fix[TRUE,_32,_0]]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x365 = CounterChainNew(List(x364))
                 - Type: CounterChain
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x376 = UnrolledForeach(Set(),x365,Block(Const(())),List(List(b366)),List(List(b367)),None) {
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                  block 0: Block(Const(())) {
                    x368 = FixLeq(Const(0),b366)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.4
                     - Reduce Latency:   0.4
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x369 = RegRead(x354)
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x370 = FixLst(b366,x369)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.4
                     - Reduce Latency:   0.4
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x371 = And(x368,x370)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.2
                     - Reduce Latency:   0.2
                     - Requires Regs:    true
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x372 = SRAMBankedRead(x281,Vector(List(Const(0))),Vector(b366),Vector(Set(x371, b367)),Vec[Flt[_24,_8]])
                     - Type: Vec[Flt[_24,_8]]
                     - Cycle: <no cycle>
                     - Latency:          2.0
                     - Reduce Latency:   2.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x373 = VecApply(x372,0)
                     - Type: Flt[_24,_8]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x416 = DelayLine(2,x371)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x374 = SimpleStruct(ArrayBuffer((_1,x373), (_2,x416)))
                     - Type: Tup2[Flt[_24,_8],Bit]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x417 = DelayLine(2,b367)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x375 = StreamOutBankedWrite(x352,ArrayBuffer(x374),ArrayBuffer(Set(x417)))
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                  } // End of x376 block #0
                } // End of x376
              } // End of x377 block #0
            } // End of x377
            x378 = FringeDenseStore(x278,x351,x352,x353)
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x381 = UnitPipe(Set(),Block(Const(())),None) {
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
              block 0: Block(Const(())) {
                x379 = StreamInBankedRead(x353,ArrayBuffer(Set()))
                 - Type: Vec[Bit]
                 - Cycle: <no cycle>
                 - Latency:          1.0
                 - Reduce Latency:   1.0
                 - Requires Regs:    true
                 - Built-In Latency: 0.0
                 - Delays: <none>
              } // End of x381 block #0
            } // End of x381
          } // End of x382 block #0
        } // End of x382
      } // End of x383 block #0
    } // End of x383
  } // End of x244 block #0
} // End of x244
x384 = ArrayNew(Const(9))
 - Name: result
 - Type: Array[Flt[_24,_8]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x385 = GetMem(x278,x384)
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x393 = ArrayMap(x273,Block((x273,b49) => x386),Block((x386) => x392)) {
 - Name: gold
 - Type: Array[Flt[_24,_8]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
  block 0: Block((x273,b49) => x386) {
    x386 = ArrayApply(x273,b49)
     - Name: x
     - Type: Flt[_24,_8]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
  } // End of x393 block #0
  block 1: Block((x386) => x392) {
    x387 = FltMul(x386,Const(32767.00000000000000))
     - Name: scaled
     - Type: Flt[_24,_8]
     - Cycle: <no cycle>
     - Latency:          8.0
     - Reduce Latency:   8.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x388 = FltLst(x387,Const(-32768))
     - Type: Bit
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x391 = IfThenElse(x388,Block(Const(-32768)),Block(x390)) {
     - Name: clipped
     - Type: Flt[_24,_8]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
      block 0: Block(Const(-32768)) {
      } // End of x391 block #0
      block 1: Block(x390) {
        x389 = FltLst(Const(32767.00000000000000),x387)
         - Type: Bit
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x390 = IfThenElse(x389,Block(Const(32767.00000000000000)),Block(x387)) {
         - Type: Flt[_24,_8]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
          block 0: Block(Const(32767.00000000000000)) {
          } // End of x390 block #0
          block 1: Block(x387) {
          } // End of x390 block #1
        } // End of x390
      } // End of x391 block #1
    } // End of x391
    x392 = FltDiv(x391,Const(32768))
     - Type: Flt[_24,_8]
     - Cycle: <no cycle>
     - Latency:          28.0
     - Reduce Latency:   28.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
  } // End of x393 block #1
} // End of x393
x397 = ArrayZip(x384,x393,Block((x384,b58) => x394),Block((x393,b58) => x395),Block((x394,x395) => x396)) {
 - Type: Array[Bit]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
  block 0: Block((x384,b58) => x394) {
    x394 = ArrayApply(x384,b58)
     - Name: x$1
     - Type: Flt[_24,_8]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
  } // End of x397 block #0
  block 1: Block((x393,b58) => x395) {
    x395 = ArrayApply(x393,b58)
     - Name: x$2
     - Type: Flt[_24,_8]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
  } // End of x397 block #1
  block 2: Block((x394,x395) => x396) {
    x396 = FltEql(x395,x394)
     - Type: Bit
     - Cycle: <no cycle>
     - Latency:          2.0
     - Reduce Latency:   2.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
  } // End of x397 block #2
} // End of x397
x400 = ArrayReduce(x397,Block((x397,b63) => x398),Block((b64,b65) => x399)) {
 - Name: cksum
 - Type: Bit
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
  block 0: Block((x397,b63) => x398) {
    x398 = ArrayApply(x397,b63)
     - Type: Bit
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
  } // End of x400 block #0
  block 1: Block((b64,b65) => x399) {
    x399 = And(b64,b65)
     - Type: Bit
     - Cycle: <no cycle>
     - Latency:          0.2
     - Reduce Latency:   0.2
     - Requires Regs:    true
     - Built-In Latency: 0.0
     - Delays: <none>
  } // End of x400 block #1
} // End of x400
x401 = BitToText(x400)
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x402 = TextConcat(List(Const("PASS: "), x401))
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x403 = TextConcat(List(x402, Const("\n")))
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x404 = PrintIf(Set(),x403)
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x405 = AssertIf(Set(),x400,Some(Const("QuantizeKernelTest.scala:66:11: Assertion failure")))
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
