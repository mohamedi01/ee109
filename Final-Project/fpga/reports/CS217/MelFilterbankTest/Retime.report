x401 = MapIndices(Const(6),Block((b1) => x400)) {
 - Type: Array[Fix[TRUE,_16,_8]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
  block 0: Block((b1) => x400) {
    x393 = FixDiv(b1,Const(3))
     - Name: i
     - Type: Fix[TRUE,_32,_0]
     - Cycle: <no cycle>
     - Latency:          20.0
     - Reduce Latency:   20.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x394 = FixMod(b1,Const(3))
     - Name: j
     - Type: Fix[TRUE,_32,_0]
     - Cycle: <no cycle>
     - Latency:          16.0
     - Reduce Latency:   16.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x395 = FixEql(x393,Const(0))
     - Type: Bit
     - Cycle: <no cycle>
     - Latency:          0.2
     - Reduce Latency:   0.2
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x400 = IfThenElse(x395,Block(x397),Block(x399)) {
     - Type: Fix[TRUE,_16,_8]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
      block 0: Block(x397) {
        x396 = FixAdd(x394,Const(1))
         - Type: Fix[TRUE,_32,_0]
         - Cycle: <no cycle>
         - Latency:          1.0
         - Reduce Latency:   1.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x397 = FixToFix(x396,TRUE,_16,_8)
         - Type: Fix[TRUE,_16,_8]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
      } // End of x400 block #0
      block 1: Block(x399) {
        x398 = FixAdd(x394,Const(4))
         - Type: Fix[TRUE,_32,_0]
         - Cycle: <no cycle>
         - Latency:          1.0
         - Reduce Latency:   1.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x399 = FixToFix(x398,TRUE,_16,_8)
         - Type: Fix[TRUE,_16,_8]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
      } // End of x400 block #1
    } // End of x400
  } // End of x401 block #0
} // End of x401
x402 = MapIndices(Const(3),Block((b12) => Const(1))) {
 - Name: vec
 - Type: Array[Fix[TRUE,_16,_8]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
  block 0: Block((b12) => Const(1)) {
  } // End of x402 block #0
} // End of x402
x405 = MapIndices(Const(2),Block((b14) => x404)) {
 - Name: gold
 - Type: Array[Fix[TRUE,_16,_8]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
  block 0: Block((b14) => x404) {
    x403 = FixEql(b14,Const(0))
     - Type: Bit
     - Cycle: <no cycle>
     - Latency:          0.2
     - Reduce Latency:   0.2
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x404 = IfThenElse(x403,Block(Const(6)),Block(Const(15))) {
     - Type: Fix[TRUE,_16,_8]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
      block 0: Block(Const(6)) {
      } // End of x404 block #0
      block 1: Block(Const(15)) {
      } // End of x404 block #1
    } // End of x404
  } // End of x405 block #0
} // End of x405
x406 = DRAMHostNew(List(Const(2), Const(3)),Const(0))
 - Name: matDRAM
 - Type: DRAM2[Fix[TRUE,_16,_8]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x407 = DRAMHostNew(List(Const(3)),Const(0))
 - Name: vecDRAM
 - Type: DRAM1[Fix[TRUE,_16,_8]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x408 = DRAMHostNew(List(Const(2)),Const(0))
 - Name: outDRAM
 - Type: DRAM1[Fix[TRUE,_16,_8]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x409 = SetMem(x406,x401)
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x410 = SetMem(x407,x402)
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x614 = AccelScope(Block(Const(()))) {
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
  block 0: Block(Const(())) {
    x411 = SRAMNew(List(Const(2), Const(3)),SRAM2[Fix[TRUE,_16,_8]])
     - Name: matSRAM_0
     - Type: SRAM2[Fix[TRUE,_16,_8]]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x412 = SRAMNew(List(Const(3)),SRAM1[Fix[TRUE,_16,_8]])
     - Name: vecSRAM_0
     - Type: SRAM1[Fix[TRUE,_16,_8]]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x413 = SRAMNew(List(Const(2)),SRAM1[Fix[TRUE,_16,_8]])
     - Name: outSRAM_0
     - Type: SRAM1[Fix[TRUE,_16,_8]]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x613 = ParallelPipe(Set(),Block(Const(()))) {
     - Type: Void
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
      block 0: Block(Const(())) {
        x476 = UnitPipe(Set(),Block(Const(())),None) {
         - Name: DenseTransfer
         - Type: Void
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
          block 0: Block(Const(())) {
            x414 = StreamOutNew(BurstCmdBus)
             - Type: StreamOut[BurstCmd]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x415 = FIFONew(Const(16))
             - Type: FIFO[IssuedCmd]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x416 = StreamInNew(BurstDataBus())
             - Type: StreamIn[Fix[TRUE,_16,_8]]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x417 = CounterNew(Const(0),Const(2),Const(1),Const(1))
             - Type: Counter[Fix[TRUE,_32,_0]]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x418 = CounterChainNew(List(x417))
             - Type: CounterChain
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x439 = UnrolledForeach(Set(),x418,Block(Const(())),List(List(b419)),List(List(b420)),None) {
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
              block 0: Block(Const(())) {
                x602 = FixSLA(b419,Const(1))
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.2
                 - Reduce Latency:   0.2
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x603 = FixAdd(x602,b419)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          1.0
                 - Reduce Latency:   1.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x422 = FixDiv(x603,Const(21))
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          20.0
                 - Reduce Latency:   20.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x423 = FixMul(x422,Const(21))
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          6.0
                 - Reduce Latency:   6.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x604 = FixSLA(x422,Const(6))
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.2
                 - Reduce Latency:   0.2
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x605 = FixSub(x604,x422)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          1.0
                 - Reduce Latency:   1.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x616 = DelayLine(26,x603)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x425 = FixSub(x616,x423)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          1.0
                 - Reduce Latency:   1.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x426 = FixAdd(x425,Const(3))
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          1.0
                 - Reduce Latency:   1.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x427 = FixAdd(x425,Const(23))
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          1.0
                 - Reduce Latency:   1.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x428 = FixDiv(x427,Const(21))
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          20.0
                 - Reduce Latency:   20.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x429 = FixMul(x428,Const(21))
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          6.0
                 - Reduce Latency:   6.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x606 = FixSLA(x428,Const(6))
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.2
                 - Reduce Latency:   0.2
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x607 = FixSub(x606,x428)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          1.0
                 - Reduce Latency:   1.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x431 = FixToFix(x605,TRUE,_64,_0)
                 - Type: Fix[TRUE,_64,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x432 = DRAMAddress(x406)
                 - Type: Fix[TRUE,_64,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x617 = DelayLine(22,x432)
                 - Type: Fix[TRUE,_64,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x433 = FixAdd(x431,x617)
                 - Type: Fix[TRUE,_64,_0]
                 - Cycle: <no cycle>
                 - Latency:          2.0
                 - Reduce Latency:   2.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x618 = DelayLine(26,x433)
                 - Type: Fix[TRUE,_64,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x434 = SimpleStruct(ArrayBuffer((offset,x618), (size,x607), (isLoad,Const(true))))
                 - Type: BurstCmd
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x435 = DRAMIsAlloc(x406)
                 - Type: Bit
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x619 = DelayLine(50,b420)
                 - Type: Bit
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x620 = DelayLine(50,x435)
                 - Type: Bit
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x436 = StreamOutBankedWrite(x414,ArrayBuffer(x434),ArrayBuffer(Set(x620, x619)))
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x621 = DelayLine(26,x426)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x622 = DelayLine(27,x425)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x437 = SimpleStruct(ArrayBuffer((size,x429), (start,x622), (end,x621)))
                 - Type: IssuedCmd
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x623 = DelayLine(55,b420)
                 - Type: Bit
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x438 = FIFOBankedEnq(x415,ArrayBuffer(x437),ArrayBuffer(Set(Const(true), x623)))
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          1.0
                 - Reduce Latency:   1.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
              } // End of x439 block #0
            } // End of x439
            x440 = FringeDenseLoad(x406,x414,x416)
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x441 = CounterNew(Const(0),Const(2),Const(1),Const(1))
             - Type: Counter[Fix[TRUE,_32,_0]]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x442 = CounterChainNew(List(x441))
             - Type: CounterChain
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x475 = UnrolledForeach(Set(),x442,Block(Const(())),List(List(b443)),List(List(b444)),None) {
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
              block 0: Block(Const(())) {
                x445 = RegNew(Const(0))
                 - Type: Reg[Fix[TRUE,_32,_0]]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x446 = RegNew(Const(0))
                 - Type: Reg[Fix[TRUE,_32,_0]]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x447 = RegNew(Const(0))
                 - Type: Reg[Fix[TRUE,_32,_0]]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x456 = UnitPipe(Set(b444),Block(Const(())),None) {
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                  block 0: Block(Const(())) {
                    x448 = FIFOBankedDeq(x415,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
                     - Type: Vec[IssuedCmd]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    true
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x449 = VecApply(x448,0)
                     - Type: IssuedCmd
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x450 = FieldApply(x449,start)
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x451 = RegWrite(x445,x450,Set())
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x452 = FieldApply(x449,end)
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x453 = RegWrite(x446,x452,Set())
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x454 = FieldApply(x449,size)
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x455 = RegWrite(x447,x454,Set())
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                  } // End of x456 block #0
                } // End of x456
                x599 = RegRead(x447)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x458 = CounterNew(Const(0),x599,Const(1),Const(1))
                 - Type: Counter[Fix[TRUE,_32,_0]]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x459 = CounterChainNew(List(x458))
                 - Type: CounterChain
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x474 = UnrolledForeach(Set(b444),x459,Block(Const(())),List(List(b460)),List(List(b461)),None) {
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                  block 0: Block(Const(())) {
                    x462 = RegRead(x445)
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x463 = FixLeq(x462,b460)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.4
                     - Reduce Latency:   0.4
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x464 = RegRead(x446)
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x465 = FixLst(b460,x464)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.4
                     - Reduce Latency:   0.4
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x466 = And(x463,x465)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.2
                     - Reduce Latency:   0.2
                     - Requires Regs:    true
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x467 = FixSub(b460,x462)
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x468 = StreamInBankedRead(x416,ArrayBuffer(Set(b461, b444)))
                     - Type: Vec[Fix[TRUE,_16,_8]]
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    true
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x624 = DelayLine(1,x468)
                     - Type: Vec[Fix[TRUE,_16,_8]]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x469 = VecApply(x624,0)
                     - Type: Fix[TRUE,_16,_8]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x608 = FixSLA(b443,Const(1))
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          0.2
                     - Reduce Latency:   0.2
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x609 = FixAdd(x608,b443)
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x472 = FixAdd(x609,x467)
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x625 = DelayLine(2,b461)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x626 = DelayLine(2,b444)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x627 = DelayLine(2,x466)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x628 = DelayLine(1,x469)
                     - Type: Fix[TRUE,_16,_8]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x473 = SRAMBankedWrite(x411,Vector(x628),Vector(List(Const(0))),Vector(x472),Vector(Set(x627, x625, x626)))
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                  } // End of x474 block #0
                } // End of x474
              } // End of x475 block #0
            } // End of x475
          } // End of x476 block #0
        } // End of x476
        x511 = UnitPipe(Set(),Block(Const(())),None) {
         - Name: DenseTransfer
         - Type: Void
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
          block 0: Block(Const(())) {
            x477 = StreamOutNew(BurstCmdBus)
             - Type: StreamOut[BurstCmd]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x478 = FIFONew(Const(16))
             - Type: FIFO[IssuedCmd]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x479 = StreamInNew(BurstDataBus())
             - Type: StreamIn[Fix[TRUE,_16,_8]]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x486 = UnitPipe(Set(),Block(Const(())),None) {
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
              block 0: Block(Const(())) {
                x480 = DRAMAddress(x407)
                 - Type: Fix[TRUE,_64,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x481 = SimpleStruct(ArrayBuffer((offset,x480), (size,Const(63)), (isLoad,Const(true))))
                 - Type: BurstCmd
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x482 = DRAMIsAlloc(x407)
                 - Type: Bit
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x483 = StreamOutBankedWrite(x477,ArrayBuffer(x481),ArrayBuffer(Set(x482)))
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x484 = SimpleStruct(ArrayBuffer((size,Const(21)), (start,Const(0)), (end,Const(3))))
                 - Type: IssuedCmd
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x485 = FIFOBankedEnq(x478,ArrayBuffer(x484),ArrayBuffer(Set(Const(true))))
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          1.0
                 - Reduce Latency:   1.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
              } // End of x486 block #0
            } // End of x486
            x487 = FringeDenseLoad(x407,x477,x479)
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x510 = UnitPipe(Set(),Block(Const(())),None) {
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
              block 0: Block(Const(())) {
                x488 = RegNew(Const(0))
                 - Type: Reg[Fix[TRUE,_32,_0]]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x489 = RegNew(Const(0))
                 - Type: Reg[Fix[TRUE,_32,_0]]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x496 = UnitPipe(Set(),Block(Const(())),None) {
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                  block 0: Block(Const(())) {
                    x490 = FIFOBankedDeq(x478,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
                     - Type: Vec[IssuedCmd]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    true
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x491 = VecApply(x490,0)
                     - Type: IssuedCmd
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x492 = FieldApply(x491,end)
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x493 = RegWrite(x488,x492,Set())
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x494 = FieldApply(x491,size)
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x495 = RegWrite(x489,x494,Set())
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                  } // End of x496 block #0
                } // End of x496
                x600 = RegRead(x489)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x498 = CounterNew(Const(0),x600,Const(1),Const(1))
                 - Type: Counter[Fix[TRUE,_32,_0]]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x499 = CounterChainNew(List(x498))
                 - Type: CounterChain
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x509 = UnrolledForeach(Set(),x499,Block(Const(())),List(List(b500)),List(List(b501)),None) {
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                  block 0: Block(Const(())) {
                    x502 = FixLeq(Const(0),b500)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.4
                     - Reduce Latency:   0.4
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x503 = RegRead(x488)
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x504 = FixLst(b500,x503)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.4
                     - Reduce Latency:   0.4
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x505 = And(x502,x504)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.2
                     - Reduce Latency:   0.2
                     - Requires Regs:    true
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x506 = StreamInBankedRead(x479,ArrayBuffer(Set(b501)))
                     - Type: Vec[Fix[TRUE,_16,_8]]
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    true
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x629 = DelayLine(1,x506)
                     - Type: Vec[Fix[TRUE,_16,_8]]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x507 = VecApply(x629,0)
                     - Type: Fix[TRUE,_16,_8]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x630 = DelayLine(1,b501)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x631 = DelayLine(1,x505)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x632 = DelayLine(1,b500)
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x508 = SRAMBankedWrite(x412,Vector(x507),Vector(List(Const(0))),Vector(x632),Vector(Set(x631, x630)))
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                  } // End of x509 block #0
                } // End of x509
              } // End of x510 block #0
            } // End of x510
          } // End of x511 block #0
        } // End of x511
      } // End of x613 block #0
    } // End of x613
    x512 = CounterNew(Const(0),Const(2),Const(1),Const(1))
     - Type: Counter[Fix[TRUE,_32,_0]]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x513 = CounterChainNew(List(x512))
     - Type: CounterChain
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x541 = UnrolledForeach(Set(),x513,Block(Const(())),List(List(b514)),List(List(b515)),None) {
     - Type: Void
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
      block 0: Block(Const(())) {
        x516 = RegNew(Const(0))
         - Name: sum_0
         - Type: Reg[Fix[TRUE,_16,_8]]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x517 = RegNew(Const(0))
         - Name: sum_1
         - Type: Reg[Fix[TRUE,_16,_8]]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x518 = CounterNew(Const(0),Const(3),Const(1),Const(1))
         - Type: Counter[Fix[TRUE,_32,_0]]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x519 = CounterChainNew(List(x518))
         - Type: CounterChain
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x537 = UnrolledReduce(Set(b515),x519,Block((x516) => Const(())),List(List(b520)),List(List(b521)),None) {
         - Type: Void
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
          block 0: Block((x516) => Const(())) {
            x610 = FixSLA(b514,Const(1))
             - Type: Fix[TRUE,_32,_0]
             - Cycle: <no cycle>
             - Latency:          0.2
             - Reduce Latency:   0.2
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x611 = FixAdd(x610,b514)
             - Type: Fix[TRUE,_32,_0]
             - Cycle: <no cycle>
             - Latency:          1.0
             - Reduce Latency:   1.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x633 = DelayLine(1,b520)
             - Type: Fix[TRUE,_32,_0]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x524 = FixAdd(x611,x633)
             - Type: Fix[TRUE,_32,_0]
             - Cycle: <no cycle>
             - Latency:          1.0
             - Reduce Latency:   1.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x634 = DelayLine(2,b521)
             - Type: Bit
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x635 = DelayLine(2,b515)
             - Type: Bit
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x525 = SRAMBankedRead(x411,Vector(List(Const(0))),Vector(x524),Vector(Set(x634, x635)),Vec[Fix[TRUE,_16,_8]])
             - Type: Vec[Fix[TRUE,_16,_8]]
             - Cycle: <no cycle>
             - Latency:          2.0
             - Reduce Latency:   2.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x526 = VecApply(x525,0)
             - Type: Fix[TRUE,_16,_8]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x527 = SRAMBankedRead(x412,Vector(List(Const(0))),Vector(b520),Vector(Set(b521, b515)),Vec[Fix[TRUE,_16,_8]])
             - Type: Vec[Fix[TRUE,_16,_8]]
             - Cycle: <no cycle>
             - Latency:          2.0
             - Reduce Latency:   2.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x528 = VecApply(x527,0)
             - Type: Fix[TRUE,_16,_8]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x532 = FixEql(b520,Const(0))
             - Type: Bit
             - Cycle: <no cycle>
             - Latency:          0.2
             - Reduce Latency:   0.2
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x636 = DelayLine(2,x528)
             - Type: Fix[TRUE,_16,_8]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x637 = DelayLine(4,x532)
             - Type: Bit
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x615 = RegAccumFMA(x516,x526,x636,Set(),x637)
             - Type: Fix[TRUE,_16,_8]
             - Cycle: <no cycle>
             - Latency:          7.959431618637297
             - Reduce Latency:   7.959431618637297
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x535 = RegWrite(x517,x615,Set())
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          1.0
             - Reduce Latency:   1.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
          } // End of x537 block #0
        } // End of x537
        x540 = UnitPipe(Set(b515),Block(Const(())),None) {
         - Type: Void
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
          block 0: Block(Const(())) {
            x538 = RegRead(x517)
             - Type: Fix[TRUE,_16,_8]
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x539 = SRAMBankedWrite(x413,Vector(x538),Vector(List(Const(0))),Vector(b514),Vector(Set()))
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          1.0
             - Reduce Latency:   1.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
          } // End of x540 block #0
        } // End of x540
      } // End of x541 block #0
    } // End of x541
    x574 = UnitPipe(Set(),Block(Const(())),None) {
     - Name: DenseTransfer
     - Type: Void
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
      block 0: Block(Const(())) {
        x542 = StreamOutNew(BurstCmdBus)
         - Type: StreamOut[BurstCmd]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x543 = StreamOutNew(BurstFullDataBus())
         - Type: StreamOut[Tup2[Fix[TRUE,_16,_8],Bit]]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x544 = StreamInNew(BurstAckBus)
         - Type: StreamIn[Bit]
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
        x573 = UnitPipe(Set(),Block(Const(())),None) {
         - Type: Void
         - Cycle: <no cycle>
         - Latency:          0.0
         - Reduce Latency:   0.0
         - Requires Regs:    false
         - Built-In Latency: 0.0
         - Delays: <none>
          block 0: Block(Const(())) {
            x568 = UnitPipe(Set(),Block(Const(())),None) {
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
              block 0: Block(Const(())) {
                x545 = RegNew(Const(0))
                 - Type: Reg[Fix[TRUE,_32,_0]]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x546 = RegNew(Const(0))
                 - Type: Reg[Fix[TRUE,_32,_0]]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x553 = UnitPipe(Set(),Block(Const(())),None) {
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                  block 0: Block(Const(())) {
                    x547 = DRAMAddress(x408)
                     - Type: Fix[TRUE,_64,_0]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x548 = SimpleStruct(ArrayBuffer((offset,x547), (size,Const(63)), (isLoad,Const(false))))
                     - Type: BurstCmd
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x549 = DRAMIsAlloc(x408)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x550 = StreamOutBankedWrite(x542,ArrayBuffer(x548),ArrayBuffer(Set(x549)))
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x551 = RegWrite(x545,Const(2),Set())
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x552 = RegWrite(x546,Const(21),Set())
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          1.0
                     - Reduce Latency:   1.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                  } // End of x553 block #0
                } // End of x553
                x601 = RegRead(x546)
                 - Type: Fix[TRUE,_32,_0]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x555 = CounterNew(Const(0),x601,Const(1),Const(1))
                 - Type: Counter[Fix[TRUE,_32,_0]]
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x556 = CounterChainNew(List(x555))
                 - Type: CounterChain
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                x567 = UnrolledForeach(Set(),x556,Block(Const(())),List(List(b557)),List(List(b558)),None) {
                 - Type: Void
                 - Cycle: <no cycle>
                 - Latency:          0.0
                 - Reduce Latency:   0.0
                 - Requires Regs:    false
                 - Built-In Latency: 0.0
                 - Delays: <none>
                  block 0: Block(Const(())) {
                    x559 = FixLeq(Const(0),b557)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.4
                     - Reduce Latency:   0.4
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x560 = RegRead(x545)
                     - Type: Fix[TRUE,_32,_0]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x561 = FixLst(b557,x560)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.4
                     - Reduce Latency:   0.4
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x562 = And(x559,x561)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.2
                     - Reduce Latency:   0.2
                     - Requires Regs:    true
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x563 = SRAMBankedRead(x413,Vector(List(Const(0))),Vector(b557),Vector(Set(x562, b558)),Vec[Fix[TRUE,_16,_8]])
                     - Type: Vec[Fix[TRUE,_16,_8]]
                     - Cycle: <no cycle>
                     - Latency:          2.0
                     - Reduce Latency:   2.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x564 = VecApply(x563,0)
                     - Type: Fix[TRUE,_16,_8]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x638 = DelayLine(2,x562)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x565 = SimpleStruct(ArrayBuffer((_1,x564), (_2,x638)))
                     - Type: Tup2[Fix[TRUE,_16,_8],Bit]
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x639 = DelayLine(2,b558)
                     - Type: Bit
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                    x566 = StreamOutBankedWrite(x543,ArrayBuffer(x565),ArrayBuffer(Set(x639)))
                     - Type: Void
                     - Cycle: <no cycle>
                     - Latency:          0.0
                     - Reduce Latency:   0.0
                     - Requires Regs:    false
                     - Built-In Latency: 0.0
                     - Delays: <none>
                  } // End of x567 block #0
                } // End of x567
              } // End of x568 block #0
            } // End of x568
            x569 = FringeDenseStore(x408,x542,x543,x544)
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
            x572 = UnitPipe(Set(),Block(Const(())),None) {
             - Type: Void
             - Cycle: <no cycle>
             - Latency:          0.0
             - Reduce Latency:   0.0
             - Requires Regs:    false
             - Built-In Latency: 0.0
             - Delays: <none>
              block 0: Block(Const(())) {
                x570 = StreamInBankedRead(x544,ArrayBuffer(Set()))
                 - Type: Vec[Bit]
                 - Cycle: <no cycle>
                 - Latency:          1.0
                 - Reduce Latency:   1.0
                 - Requires Regs:    true
                 - Built-In Latency: 0.0
                 - Delays: <none>
              } // End of x572 block #0
            } // End of x572
          } // End of x573 block #0
        } // End of x573
      } // End of x574 block #0
    } // End of x574
  } // End of x614 block #0
} // End of x614
x575 = ArrayNew(Const(2))
 - Name: result
 - Type: Array[Fix[TRUE,_16,_8]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x576 = GetMem(x408,x575)
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x577 = ArrayApply(x575,Const(0))
 - Type: Fix[TRUE,_16,_8]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x578 = ArrayApply(x405,Const(0))
 - Type: Fix[TRUE,_16,_8]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x579 = FixSub(x577,x578)
 - Name: d0
 - Type: Fix[TRUE,_16,_8]
 - Cycle: <no cycle>
 - Latency:          0.75
 - Reduce Latency:   0.75
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x580 = FixLst(x579,Const(0))
 - Type: Bit
 - Cycle: <no cycle>
 - Latency:          0.4
 - Reduce Latency:   0.4
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x582 = IfThenElse(x580,Block(x581),Block(x579)) {
 - Name: e0
 - Type: Fix[TRUE,_16,_8]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
  block 0: Block(x581) {
    x581 = FixNeg(x579)
     - Type: Fix[TRUE,_16,_8]
     - Cycle: <no cycle>
     - Latency:          0.1
     - Reduce Latency:   0.1
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
  } // End of x582 block #0
  block 1: Block(x579) {
  } // End of x582 block #1
} // End of x582
x583 = ArrayApply(x575,Const(1))
 - Type: Fix[TRUE,_16,_8]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x584 = ArrayApply(x405,Const(1))
 - Type: Fix[TRUE,_16,_8]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x585 = FixSub(x583,x584)
 - Name: d1
 - Type: Fix[TRUE,_16,_8]
 - Cycle: <no cycle>
 - Latency:          0.75
 - Reduce Latency:   0.75
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x586 = FixLst(x585,Const(0))
 - Type: Bit
 - Cycle: <no cycle>
 - Latency:          0.4
 - Reduce Latency:   0.4
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x588 = IfThenElse(x586,Block(x587),Block(x585)) {
 - Name: e1
 - Type: Fix[TRUE,_16,_8]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
  block 0: Block(x587) {
    x587 = FixNeg(x585)
     - Type: Fix[TRUE,_16,_8]
     - Cycle: <no cycle>
     - Latency:          0.1
     - Reduce Latency:   0.1
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
  } // End of x588 block #0
  block 1: Block(x585) {
  } // End of x588 block #1
} // End of x588
x589 = FixLst(x582,Const(0.0078125))
 - Type: Bit
 - Cycle: <no cycle>
 - Latency:          0.4
 - Reduce Latency:   0.4
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x590 = FixLst(x588,Const(0.0078125))
 - Type: Bit
 - Cycle: <no cycle>
 - Latency:          0.4
 - Reduce Latency:   0.4
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x591 = And(x589,x590)
 - Type: Bit
 - Cycle: <no cycle>
 - Latency:          0.2
 - Reduce Latency:   0.2
 - Requires Regs:    true
 - Built-In Latency: 0.0
 - Delays: <none>
x592 = IfThenElse(x591,Block(Const(1)),Block(Const(0))) {
 - Name: pass
 - Type: Fix[TRUE,_32,_0]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
  block 0: Block(Const(1)) {
  } // End of x592 block #0
  block 1: Block(Const(0)) {
  } // End of x592 block #1
} // End of x592
x593 = FixToText(x592,None)
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x594 = TextConcat(List(Const("PASS: "), x593))
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x595 = TextConcat(List(x594, Const("\n")))
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x596 = PrintIf(Set(),x595)
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x597 = FixEql(x592,Const(1))
 - Type: Bit
 - Cycle: <no cycle>
 - Latency:          0.2
 - Reduce Latency:   0.2
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x598 = AssertIf(Set(),x597,Some(Const("MelFilterbankTest.scala:57:11: Assertion failure")))
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
