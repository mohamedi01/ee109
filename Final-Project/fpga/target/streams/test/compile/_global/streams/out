[0m[[0m[31merror[0m] [0m[0m/Users/mohamedismail/Desktop/EE109/ee109/Final-Project/fpga/src/test/scala/spatial/tests/QuantizeKernelTestObject.scala:7:28: could not find implicit value for evidence parameter of type argon.Type[Float][0m
[0m[[0m[31merror[0m] [0m[0m      val testInput = Array(-1.0f, -0.5f, 0.0f, 0.5f, 1.0f)[0m
[0m[[0m[31merror[0m] [0m[0m                           ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/mohamedismail/Desktop/EE109/ee109/Final-Project/fpga/src/test/scala/spatial/tests/QuantizeKernelTestObject.scala:35:26: missing argument list for method zip in class Array[0m
[0m[[0m[31merror[0m] [0m[0mUnapplied methods are only converted to functions when a function type is expected.[0m
[0m[[0m[31merror[0m] [0m[0mYou can make this conversion explicit by writing `zip _` or `zip(_)(_)(_,_,_,_)` instead of `zip`.[0m
[0m[[0m[31merror[0m] [0m[0m    val pass = result.zip(gold).forall { case (a, b) => Math.abs(a - b) < 1e-4 }[0m
[0m[[0m[31merror[0m] [0m[0m                         ^[0m
[0m[[0m[31merror[0m] [0m[0m/Users/mohamedismail/Desktop/EE109/ee109/Final-Project/fpga/src/test/scala/spatial/tests/QuantizeKernelTestObject.scala:35:70: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : Any[0m
[0m[[0m[31merror[0m] [0m[0m required: forge.VarLike[?][0m
[0m[[0m[31merror[0m] [0m[0m    val pass = result.zip(gold).forall { case (a, b) => Math.abs(a - b) < 1e-4 }[0m
[0m[[0m[31merror[0m] [0m[0m                                                                     ^[0m
[0m[[0m[31merror[0m] [0m[0mthree errors found[0m
