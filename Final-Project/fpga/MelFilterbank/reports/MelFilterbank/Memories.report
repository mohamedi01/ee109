---------------------------
Estimated Total Memories: 
---------------------------
  Regs: 12.0
  Slices: 12.0
  RAM36: 3.0
---------------------------



---------------------------------------------------------------------
Name: x427
Type: FIFO[IssuedCmd]
Src:  MelFilterbank.scala:35:15
Src:        vecSram load vecDram
---------------------------------------------------------------------
Symbol:     x427 = FIFONew(Const(16))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x434 = FIFOBankedEnq(x427,ArrayBuffer(x433),ArrayBuffer(Set(Const(true)))) {}
             vecSram load vecDram (MelFilterbank.scala:35:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x439 = FIFOBankedDeq(x427,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) {}
             vecSram load vecDram (MelFilterbank.scala:35:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x460: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Streaming]
  x435: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
    x434: FIFOBankedEnq
  x459: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
    x445: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
      x439: FIFOBankedDeq
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x488
Type: StreamIn[Bit]
Src:  MelFilterbank.scala:44:15
Src:        outDram store outSram
---------------------------------------------------------------------
Symbol:     x488 = StreamInNew(BurstAckBus)
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
         0 [Type:RD]:
           - Mux Port #0: 
             x504 = StreamInBankedRead(x488,ArrayBuffer(Set())) {}
             outDram store outSram (MelFilterbank.scala:44:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x506: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
  x504: StreamInBankedRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x426
Type: StreamOut[BurstCmd]
Src:  MelFilterbank.scala:35:15
Src:        vecSram load vecDram
---------------------------------------------------------------------
Symbol:     x426 = StreamOutNew(BurstCmdBus)
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x432 = StreamOutBankedWrite(x426,ArrayBuffer(x430),ArrayBuffer(Set(x431))) {}
             vecSram load vecDram (MelFilterbank.scala:35:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:



Control Tree: 
x435: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
  x432: StreamOutBankedWrite
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x437
Type: Reg[Fix[TRUE,_32,_0]]
Src:  MelFilterbank.scala:35:15
Src:        vecSram load vecDram
---------------------------------------------------------------------
Symbol:     x437 = RegNew(Const(0))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List()
     Accum:    None
     Banks:    1 <Flat>
       Dims {}: Cyclic: N=1, B=1, alpha=<>, P=<> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x442 = RegWrite(x437,x441,Set()) {}
             vecSram load vecDram (MelFilterbank.scala:35:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x452 = RegRead(x437) {}
             vecSram load vecDram (MelFilterbank.scala:35:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x459: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
  x445: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
    x442: RegWrite
  x458: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
    x452: RegRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x395
Type: Reg[Fix[TRUE,_32,_0]]
Src:  MelFilterbank.scala:34:15
Src:        matSram load matDram
---------------------------------------------------------------------
Symbol:     x395 = RegNew(Const(0))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List()
     Accum:    None
     Banks:    1 <Flat>
       Dims {}: Cyclic: N=1, B=1, alpha=<>, P=<> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x402 = RegWrite(x395,x401,Set()) {}
             matSram load matDram (MelFilterbank.scala:34:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x413 = RegRead(x395) {}
             matSram load matDram (MelFilterbank.scala:34:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x424: UnrolledForeach (-1) [Level: OuterControl, Loop: Looped, Schedule: Sequenced]
  x405: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
    x402: RegWrite
  x423: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
    x413: RegRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x396
Type: Reg[Fix[TRUE,_32,_0]]
Src:  MelFilterbank.scala:34:15
Src:        matSram load matDram
---------------------------------------------------------------------
Symbol:     x396 = RegNew(Const(0))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List()
     Accum:    None
     Banks:    1 <Flat>
       Dims {}: Cyclic: N=1, B=1, alpha=<>, P=<> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x404 = RegWrite(x396,x403,Set()) {}
             matSram load matDram (MelFilterbank.scala:34:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x517 = RegRead(x396) {}
             matSram load matDram (MelFilterbank.scala:34:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x424: UnrolledForeach (-1) [Level: OuterControl, Loop: Looped, Schedule: Sequenced]
  x405: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
    x404: RegWrite
  x423: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
    x517: RegRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x365
Type: StreamIn[Flt[_24,_8]]
Src:  MelFilterbank.scala:34:15
Src:        matSram load matDram
---------------------------------------------------------------------
Symbol:     x365 = StreamInNew(BurstDataBus())
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
         0 [Type:RD]:
           - Mux Port #0: 
             x417 = StreamInBankedRead(x365,ArrayBuffer(Set(b410, b393))) {}
             matSram load matDram (MelFilterbank.scala:34:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x423: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
  x417: StreamInBankedRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x428
Type: StreamIn[Flt[_24,_8]]
Src:  MelFilterbank.scala:35:15
Src:        vecSram load vecDram
---------------------------------------------------------------------
Symbol:     x428 = StreamInNew(BurstDataBus())
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
         0 [Type:RD]:
           - Mux Port #0: 
             x455 = StreamInBankedRead(x428,ArrayBuffer(Set(b450))) {}
             vecSram load vecDram (MelFilterbank.scala:35:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x458: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
  x455: StreamInBankedRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: matSram_0 (x360)
Type: SRAM2[Flt[_24,_8]]
Src:  MelFilterbank.scala:30:32
Src:        val matSram = SRAM[Float](bands, bins)
---------------------------------------------------------------------
Symbol:     x360 = SRAMNew(List(Const(80), Const(201)),SRAM2[Flt[_24,_8]])
Instances: 1
  RAM36: 1.0
  Regs: 12.0
  Slices: 12.0


Instance Summary: 
  #0: Banked
     Resource: BRAM
     Depth:    1
     Padding:  List(0, 0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0,1}: Cyclic: N=1, B=1, alpha=<1,1>, P=<1,1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x422 = SRAMBankedWrite(x360,Vector(x418),Vector(List(Const(0))),Vector(x521),Vector(Set(x415, b410, b393))) {}
             matSram load matDram (MelFilterbank.scala:34:15)
               Directly Banked: true
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x474 = SRAMBankedRead(x360,Vector(List(Const(0))),Vector(x522),Vector(Set(b469, b464)),Vec[Flt[_24,_8]]) {}
             acc = acc + matSram(i,j) * vecSram(j) (MelFilterbank.scala:40:30)
               Directly Banked: true
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x527: AccelScope (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
  x524: ParallelPipe (-1) [Level: OuterControl, Loop: Single, Schedule: ForkJoin]
    x425: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Streaming]
      x424: UnrolledForeach (-1) [Level: OuterControl, Loop: Looped, Schedule: Sequenced]
        x423: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
          x422: SRAMBankedWrite
  x526: UnrolledForeach (-1) [Level: OuterControl, Loop: Looped, Schedule: Sequenced]
    x525: ParallelPipe (-1) [Level: OuterControl, Loop: Single, Schedule: ForkJoin]
      x481: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
        x474: SRAMBankedRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: outSram_0 (x362)
Type: SRAM1[Flt[_24,_8]]
Src:  MelFilterbank.scala:32:32
Src:        val outSram = SRAM[Float](bands)
---------------------------------------------------------------------
Symbol:     x362 = SRAMNew(List(Const(80)),SRAM1[Flt[_24,_8]])
Instances: 1
  RAM36: 1.0


Instance Summary: 
  #0: Banked
     Resource: BRAM
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x483 = SRAMBankedWrite(x362,Vector(x482),Vector(List(Const(0))),Vector(b463),Vector(Set())) {}
             outSram(i) = acc (MelFilterbank.scala:42:20)
               Directly Banked: true
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x498 = SRAMBankedRead(x362,Vector(List(Const(0))),Vector(b496),Vector(Set(b497)),Vec[Flt[_24,_8]]) {}
             outDram store outSram (MelFilterbank.scala:44:15)
               Directly Banked: true
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x527: AccelScope (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
  x526: UnrolledForeach (-1) [Level: OuterControl, Loop: Looped, Schedule: Sequenced]
    x525: ParallelPipe (-1) [Level: OuterControl, Loop: Single, Schedule: ForkJoin]
      x484: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
        x483: SRAMBankedWrite
  x507: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Streaming]
    x502: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
      x498: SRAMBankedRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x363
Type: StreamOut[BurstCmd]
Src:  MelFilterbank.scala:34:15
Src:        matSram load matDram
---------------------------------------------------------------------
Symbol:     x363 = StreamOutNew(BurstCmdBus)
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x385 = StreamOutBankedWrite(x363,ArrayBuffer(x383),ArrayBuffer(Set(x384, b369))) {}
             matSram load matDram (MelFilterbank.scala:34:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:



Control Tree: 
x388: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Sequenced]
  x385: StreamOutBankedWrite
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x487
Type: StreamOut[Tup2[Flt[_24,_8],Bit]]
Src:  MelFilterbank.scala:44:15
Src:        outDram store outSram
---------------------------------------------------------------------
Symbol:     x487 = StreamOutNew(BurstFullDataBus())
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x501 = StreamOutBankedWrite(x487,ArrayBuffer(x500),ArrayBuffer(Set(b497))) {}
             outDram store outSram (MelFilterbank.scala:44:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:



Control Tree: 
x502: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
  x501: StreamOutBankedWrite
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: vecSram_0 (x361)
Type: SRAM1[Flt[_24,_8]]
Src:  MelFilterbank.scala:31:32
Src:        val vecSram = SRAM[Float](bins)
---------------------------------------------------------------------
Symbol:     x361 = SRAMNew(List(Const(201)),SRAM1[Flt[_24,_8]])
Instances: 1
  RAM36: 1.0


Instance Summary: 
  #0: Banked
     Resource: BRAM
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x457 = SRAMBankedWrite(x361,Vector(x456),Vector(List(Const(0))),Vector(b449),Vector(Set(x454, b450))) {}
             vecSram load vecDram (MelFilterbank.scala:35:15)
               Directly Banked: true
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x476 = SRAMBankedRead(x361,Vector(List(Const(0))),Vector(b468),Vector(Set(b469, b464)),Vec[Flt[_24,_8]]) {}
             acc = acc + matSram(i,j) * vecSram(j) (MelFilterbank.scala:40:45)
               Directly Banked: true
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x527: AccelScope (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
  x524: ParallelPipe (-1) [Level: OuterControl, Loop: Single, Schedule: ForkJoin]
    x460: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Streaming]
      x459: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
        x458: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
          x457: SRAMBankedWrite
  x526: UnrolledForeach (-1) [Level: OuterControl, Loop: Looped, Schedule: Sequenced]
    x525: ParallelPipe (-1) [Level: OuterControl, Loop: Single, Schedule: ForkJoin]
      x481: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
        x476: SRAMBankedRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x486
Type: StreamOut[BurstCmd]
Src:  MelFilterbank.scala:44:15
Src:        outDram store outSram
---------------------------------------------------------------------
Symbol:     x486 = StreamOutNew(BurstCmdBus)
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x492 = StreamOutBankedWrite(x486,ArrayBuffer(x490),ArrayBuffer(Set(x491))) {}
             outDram store outSram (MelFilterbank.scala:44:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:



Control Tree: 
x493: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
  x492: StreamOutBankedWrite
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x394
Type: Reg[Fix[TRUE,_32,_0]]
Src:  MelFilterbank.scala:34:15
Src:        matSram load matDram
---------------------------------------------------------------------
Symbol:     x394 = RegNew(Const(0))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List()
     Accum:    None
     Banks:    1 <Flat>
       Dims {}: Cyclic: N=1, B=1, alpha=<>, P=<> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x400 = RegWrite(x394,x399,Set()) {}
             matSram load matDram (MelFilterbank.scala:34:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x411 = RegRead(x394) {}
             matSram load matDram (MelFilterbank.scala:34:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x424: UnrolledForeach (-1) [Level: OuterControl, Loop: Looped, Schedule: Sequenced]
  x405: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
    x400: RegWrite
  x423: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
    x411: RegRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x438
Type: Reg[Fix[TRUE,_32,_0]]
Src:  MelFilterbank.scala:35:15
Src:        vecSram load vecDram
---------------------------------------------------------------------
Symbol:     x438 = RegNew(Const(0))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List()
     Accum:    None
     Banks:    1 <Flat>
       Dims {}: Cyclic: N=1, B=1, alpha=<>, P=<> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x444 = RegWrite(x438,x443,Set()) {}
             vecSram load vecDram (MelFilterbank.scala:35:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x518 = RegRead(x438) {}
             vecSram load vecDram (MelFilterbank.scala:35:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x459: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
  x445: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
    x444: RegWrite
  x458: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
    x518: RegRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x364
Type: FIFO[IssuedCmd]
Src:  MelFilterbank.scala:34:15
Src:        matSram load matDram
---------------------------------------------------------------------
Symbol:     x364 = FIFONew(Const(16))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x387 = FIFOBankedEnq(x364,ArrayBuffer(x386),ArrayBuffer(Set(Const(true), b369))) {}
             matSram load matDram (MelFilterbank.scala:34:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x397 = FIFOBankedDeq(x364,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) {}
             matSram load matDram (MelFilterbank.scala:34:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x425: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Streaming]
  x388: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Sequenced]
    x387: FIFOBankedEnq
  x424: UnrolledForeach (-1) [Level: OuterControl, Loop: Looped, Schedule: Sequenced]
    x405: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
      x397: FIFOBankedDeq
---------------------------------------------------------------------




