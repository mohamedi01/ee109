---------------------------
Estimated Total Memories: 
---------------------------
  RAM36: 3.0
---------------------------



---------------------------------------------------------------------
Name: x329
Type: Reg[Fix[TRUE,_32,_0]]
Src:  PowerSpectrum.scala:33:16
Src:        realSram load realDram
---------------------------------------------------------------------
Symbol:     x329 = RegNew(Const(0))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List()
     Accum:    None
     Banks:    1 <Flat>
       Dims {}: Cyclic: N=1, B=1, alpha=<>, P=<> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x334 = RegWrite(x329,x333,Set()) {}
             realSram load realDram (PowerSpectrum.scala:33:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x344 = RegRead(x329) {}
             realSram load realDram (PowerSpectrum.scala:33:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x351: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
  x337: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
    x334: RegWrite
  x350: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
    x344: RegRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x330
Type: Reg[Fix[TRUE,_32,_0]]
Src:  PowerSpectrum.scala:33:16
Src:        realSram load realDram
---------------------------------------------------------------------
Symbol:     x330 = RegNew(Const(0))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List()
     Accum:    None
     Banks:    1 <Flat>
       Dims {}: Cyclic: N=1, B=1, alpha=<>, P=<> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x336 = RegWrite(x330,x335,Set()) {}
             realSram load realDram (PowerSpectrum.scala:33:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x445 = RegRead(x330) {}
             realSram load realDram (PowerSpectrum.scala:33:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x351: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
  x337: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
    x336: RegWrite
  x350: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
    x445: RegRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x320
Type: StreamIn[Flt[_24,_8]]
Src:  PowerSpectrum.scala:33:16
Src:        realSram load realDram
---------------------------------------------------------------------
Symbol:     x320 = StreamInNew(BurstDataBus())
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
         0 [Type:RD]:
           - Mux Port #0: 
             x347 = StreamInBankedRead(x320,ArrayBuffer(Set(b342))) {}
             realSram load realDram (PowerSpectrum.scala:33:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x350: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
  x347: StreamInBankedRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x354
Type: FIFO[IssuedCmd]
Src:  PowerSpectrum.scala:34:16
Src:        imagSram load imagDram
---------------------------------------------------------------------
Symbol:     x354 = FIFONew(Const(16))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x361 = FIFOBankedEnq(x354,ArrayBuffer(x360),ArrayBuffer(Set(Const(true)))) {}
             imagSram load imagDram (PowerSpectrum.scala:34:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x366 = FIFOBankedDeq(x354,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) {}
             imagSram load imagDram (PowerSpectrum.scala:34:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x387: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Streaming]
  x362: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
    x361: FIFOBankedEnq
  x386: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
    x372: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
      x366: FIFOBankedDeq
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: imagSram_0 (x316)
Type: SRAM1[Flt[_24,_8]]
Src:  PowerSpectrum.scala:31:33
Src:        val imagSram = SRAM[Float](n_bins_spatial_i32)
---------------------------------------------------------------------
Symbol:     x316 = SRAMNew(List(Const(201)),SRAM1[Flt[_24,_8]])
Instances: 1
  RAM36: 1.0


Instance Summary: 
  #0: Banked
     Resource: BRAM
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x384 = SRAMBankedWrite(x316,Vector(x383),Vector(List(Const(0))),Vector(b376),Vector(Set(x381, b377))) {}
             imagSram load imagDram (PowerSpectrum.scala:34:16)
               Directly Banked: true
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x397 = SRAMBankedRead(x316,Vector(List(Const(0))),Vector(b392),Vector(Set(b393)),Vec[Flt[_24,_8]]) {}
             val i_sq = imagSram(i)*imagSram(i) (PowerSpectrum.scala:39:28)
               Directly Banked: true
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x450: AccelScope (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
  x449: ParallelPipe (-1) [Level: OuterControl, Loop: Single, Schedule: ForkJoin]
    x387: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Streaming]
      x386: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
        x385: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
          x384: SRAMBankedWrite
  x402: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
    x397: SRAMBankedRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x406
Type: Reg[Fix[TRUE,_32,_0]]
Src:  PowerSpectrum.scala:42:15
Src:        outDram store outSram
---------------------------------------------------------------------
Symbol:     x406 = RegNew(Const(0))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List()
     Accum:    None
     Banks:    1 <Flat>
       Dims {}: Cyclic: N=1, B=1, alpha=<>, P=<> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x412 = RegWrite(x406,Const(201),Set()) {}
             outDram store outSram (PowerSpectrum.scala:42:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x421 = RegRead(x406) {}
             outDram store outSram (PowerSpectrum.scala:42:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x429: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
  x414: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
    x412: RegWrite
  x428: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
    x421: RegRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x404
Type: StreamOut[Tup2[Flt[_24,_8],Bit]]
Src:  PowerSpectrum.scala:42:15
Src:        outDram store outSram
---------------------------------------------------------------------
Symbol:     x404 = StreamOutNew(BurstFullDataBus())
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x427 = StreamOutBankedWrite(x404,ArrayBuffer(x426),ArrayBuffer(Set(b419))) {}
             outDram store outSram (PowerSpectrum.scala:42:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:



Control Tree: 
x428: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
  x427: StreamOutBankedWrite
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x403
Type: StreamOut[BurstCmd]
Src:  PowerSpectrum.scala:42:15
Src:        outDram store outSram
---------------------------------------------------------------------
Symbol:     x403 = StreamOutNew(BurstCmdBus)
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x411 = StreamOutBankedWrite(x403,ArrayBuffer(x409),ArrayBuffer(Set(x410))) {}
             outDram store outSram (PowerSpectrum.scala:42:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:



Control Tree: 
x414: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
  x411: StreamOutBankedWrite
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x405
Type: StreamIn[Bit]
Src:  PowerSpectrum.scala:42:15
Src:        outDram store outSram
---------------------------------------------------------------------
Symbol:     x405 = StreamInNew(BurstAckBus)
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
         0 [Type:RD]:
           - Mux Port #0: 
             x431 = StreamInBankedRead(x405,ArrayBuffer(Set())) {}
             outDram store outSram (PowerSpectrum.scala:42:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x433: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
  x431: StreamInBankedRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: outSram_0 (x317)
Type: SRAM1[Flt[_24,_8]]
Src:  PowerSpectrum.scala:32:33
Src:        val outSram  = SRAM[Float](n_bins_spatial_i32)
---------------------------------------------------------------------
Symbol:     x317 = SRAMNew(List(Const(201)),SRAM1[Flt[_24,_8]])
Instances: 1
  RAM36: 1.0


Instance Summary: 
  #0: Banked
     Resource: BRAM
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x401 = SRAMBankedWrite(x317,Vector(x448),Vector(List(Const(0))),Vector(b392),Vector(Set(b393))) {}
             outSram(i) = r_sq + i_sq (PowerSpectrum.scala:40:20)
               Directly Banked: true
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x424 = SRAMBankedRead(x317,Vector(List(Const(0))),Vector(b418),Vector(Set(x423, b419)),Vec[Flt[_24,_8]]) {}
             outDram store outSram (PowerSpectrum.scala:42:15)
               Directly Banked: true
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x450: AccelScope (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
  x402: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
    x401: SRAMBankedWrite
  x435: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Streaming]
    x434: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
      x429: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
        x428: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
          x424: SRAMBankedRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x407
Type: Reg[Fix[TRUE,_32,_0]]
Src:  PowerSpectrum.scala:42:15
Src:        outDram store outSram
---------------------------------------------------------------------
Symbol:     x407 = RegNew(Const(0))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List()
     Accum:    None
     Banks:    1 <Flat>
       Dims {}: Cyclic: N=1, B=1, alpha=<>, P=<> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x413 = RegWrite(x407,Const(208),Set()) {}
             outDram store outSram (PowerSpectrum.scala:42:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x447 = RegRead(x407) {}
             outDram store outSram (PowerSpectrum.scala:42:15)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x429: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
  x414: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
    x413: RegWrite
  x428: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
    x447: RegRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x365
Type: Reg[Fix[TRUE,_32,_0]]
Src:  PowerSpectrum.scala:34:16
Src:        imagSram load imagDram
---------------------------------------------------------------------
Symbol:     x365 = RegNew(Const(0))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List()
     Accum:    None
     Banks:    1 <Flat>
       Dims {}: Cyclic: N=1, B=1, alpha=<>, P=<> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x371 = RegWrite(x365,x370,Set()) {}
             imagSram load imagDram (PowerSpectrum.scala:34:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x446 = RegRead(x365) {}
             imagSram load imagDram (PowerSpectrum.scala:34:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x386: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
  x372: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
    x371: RegWrite
  x385: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
    x446: RegRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x318
Type: StreamOut[BurstCmd]
Src:  PowerSpectrum.scala:33:16
Src:        realSram load realDram
---------------------------------------------------------------------
Symbol:     x318 = StreamOutNew(BurstCmdBus)
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x324 = StreamOutBankedWrite(x318,ArrayBuffer(x322),ArrayBuffer(Set(x323))) {}
             realSram load realDram (PowerSpectrum.scala:33:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:



Control Tree: 
x327: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
  x324: StreamOutBankedWrite
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x355
Type: StreamIn[Flt[_24,_8]]
Src:  PowerSpectrum.scala:34:16
Src:        imagSram load imagDram
---------------------------------------------------------------------
Symbol:     x355 = StreamInNew(BurstDataBus())
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
         0 [Type:RD]:
           - Mux Port #0: 
             x382 = StreamInBankedRead(x355,ArrayBuffer(Set(b377))) {}
             imagSram load imagDram (PowerSpectrum.scala:34:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x385: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
  x382: StreamInBankedRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: realSram_0 (x315)
Type: SRAM1[Flt[_24,_8]]
Src:  PowerSpectrum.scala:30:33
Src:        val realSram = SRAM[Float](n_bins_spatial_i32)
---------------------------------------------------------------------
Symbol:     x315 = SRAMNew(List(Const(201)),SRAM1[Flt[_24,_8]])
Instances: 1
  RAM36: 1.0


Instance Summary: 
  #0: Banked
     Resource: BRAM
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x349 = SRAMBankedWrite(x315,Vector(x348),Vector(List(Const(0))),Vector(b341),Vector(Set(x346, b342))) {}
             realSram load realDram (PowerSpectrum.scala:33:16)
               Directly Banked: true
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x394 = SRAMBankedRead(x315,Vector(List(Const(0))),Vector(b392),Vector(Set(b393)),Vec[Flt[_24,_8]]) {}
             val r_sq = realSram(i)*realSram(i) (PowerSpectrum.scala:38:28)
               Directly Banked: true
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x450: AccelScope (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
  x449: ParallelPipe (-1) [Level: OuterControl, Loop: Single, Schedule: ForkJoin]
    x352: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Streaming]
      x351: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
        x350: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
          x349: SRAMBankedWrite
  x402: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
    x394: SRAMBankedRead
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x353
Type: StreamOut[BurstCmd]
Src:  PowerSpectrum.scala:34:16
Src:        imagSram load imagDram
---------------------------------------------------------------------
Symbol:     x353 = StreamOutNew(BurstCmdBus)
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x359 = StreamOutBankedWrite(x353,ArrayBuffer(x357),ArrayBuffer(Set(x358))) {}
             imagSram load imagDram (PowerSpectrum.scala:34:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:



Control Tree: 
x362: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
  x359: StreamOutBankedWrite
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x319
Type: FIFO[IssuedCmd]
Src:  PowerSpectrum.scala:33:16
Src:        realSram load realDram
---------------------------------------------------------------------
Symbol:     x319 = FIFONew(Const(16))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List(0)
     Accum:    None
     Banks:    1 <Flat>
       Dims {0}: Cyclic: N=1, B=1, alpha=<1>, P=<1> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x326 = FIFOBankedEnq(x319,ArrayBuffer(x325),ArrayBuffer(Set(Const(true)))) {}
             realSram load realDram (PowerSpectrum.scala:33:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x331 = FIFOBankedDeq(x319,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) {}
             realSram load realDram (PowerSpectrum.scala:33:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x352: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Streaming]
  x327: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
    x326: FIFOBankedEnq
  x351: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
    x337: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
      x331: FIFOBankedDeq
---------------------------------------------------------------------




---------------------------------------------------------------------
Name: x364
Type: Reg[Fix[TRUE,_32,_0]]
Src:  PowerSpectrum.scala:34:16
Src:        imagSram load imagDram
---------------------------------------------------------------------
Symbol:     x364 = RegNew(Const(0))
Instances: 1


Instance Summary: 
  #0: Banked
     Resource: LUTs
     Depth:    1
     Padding:  List()
     Accum:    None
     Banks:    1 <Flat>
       Dims {}: Cyclic: N=1, B=1, alpha=<>, P=<> (1 solutions, 0 checks)
     Ports: 
         0 [Type:WR]:
           - Mux Port #0: 
             x369 = RegWrite(x364,x368,Set()) {}
             imagSram load imagDram (PowerSpectrum.scala:34:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>

         0 [Type:RD]:
           - Mux Port #0: 
             x379 = RegRead(x364) {}
             imagSram load imagDram (PowerSpectrum.scala:34:16)
               Directly Banked: false
               Port: <offset: 0, castgroup: (0), broadcast: (0)>




Control Tree: 
x386: UnitPipe (-1) [Level: OuterControl, Loop: Single, Schedule: Sequenced]
  x372: UnitPipe (-1) [Level: InnerControl, Loop: Single, Schedule: Sequenced]
    x369: RegWrite
  x385: UnrolledForeach (-1) [Level: InnerControl, Loop: Looped, Schedule: Pipelined]
    x379: RegRead
---------------------------------------------------------------------




