  x164 = AccelScope(Block(Const(())))
    x236 = StateMachine(Set(),Const(0),Block((b5) => x208),Block((b5) => Const(())),Block((b5) => x235),Fix[TRUE,_32,_0])
    Working on pipeLatencies of result Vector(x208), schedule Vector(x208)
    Memories with both reads and writes in this scope: Set()
    Done finding cycles: Vector(), Map()
    Computing fullDFS: x208
    cur: x208, inReduce: false, latency: 0.4
    Cycles: Map()
    cycles are Vector()
    Working on pipeLatencies of result Vector(x235), schedule Vector(x309, x235)
    Memories with both reads and writes in this scope: Set()
    Done finding cycles: Vector(), Map()
    Computing fullDFS: x235
    Computing fullDFS: x309
    cur: x309, inReduce: false, latency: 0.0
    Cycles: Map()
    cycles are Vector()
    Working on pipeLatencies of result Vector(Const(()), x228, x211, x225, x218), schedule Vector(x209, x210, x211, x213, x214, x215, x216, x217, x295, x296, x297, x298, x218, x220, x221, x222, x223, x294, x299, x300, x301, x302, x303, x225, x227, x304, x305, x306, x307, x308, x228)
    Memories with both reads and writes in this scope: Set()
    Done finding cycles: Vector(), Map()
    Computing fullDFS: Const(())
    Computing fullDFS: x228
    Computing fullDFS: x211
    Computing fullDFS: x209
    cur: x209, inReduce: false, latency: 0.4
    Computing fullDFS: x218
    Computing fullDFS: x295
    Computing fullDFS: x217
    cur: x217, inReduce: false, latency: 0.2
    Computing fullDFS: x296
    cur: x296, inReduce: false, latency: 0.0
    Computing fullDFS: x297
    Computing fullDFS: x210
    Computing fullDFS: x298
    Computing fullDFS: x215
    Computing fullDFS: x213
    cur: x213, inReduce: false, latency: 0.4
    Computing fullDFS: x214
    cur: x214, inReduce: false, latency: 0.4
    Computing fullDFS: x225
    Computing fullDFS: x299
    cur: x299, inReduce: false, latency: 0.0
    Computing fullDFS: x300
    Computing fullDFS: x216
    Computing fullDFS: x301
    Computing fullDFS: x302
    Computing fullDFS: x294
    Computing fullDFS: x303
    Computing fullDFS: x222
    Computing fullDFS: x220
    cur: x220, inReduce: false, latency: 0.4
    Computing fullDFS: x221
    cur: x221, inReduce: false, latency: 0.4
    Computing fullDFS: x304
    cur: x304, inReduce: false, latency: 0.0
    Computing fullDFS: x305
    Computing fullDFS: x306
    Computing fullDFS: x223
    Computing fullDFS: x307
    Computing fullDFS: x308
    Computing fullDFS: x227
    cur: x227, inReduce: false, latency: 0.2
    Cycles: Map()
    Written memories: 
    Read memories: 
    Intersection: 
     - Latency:  5.800000000000001
     - Interval: 2.0
    x258 = UnitPipe(Set(),Block(Const(())),None)
      x244 = UnitPipe(Set(),Block(Const(())),None)
      Working on pipeLatencies of result Vector(Const(()), x240, x242, x243), schedule Vector(x240, x241, x242, x243)
      Memories with both reads and writes in this scope: Set()
      Done finding cycles: Vector(), Map()
      Computing fullDFS: Const(())
      Computing fullDFS: x240
      cur: x240, inReduce: false, latency: 0.0
      Computing fullDFS: x242
      cur: x242, inReduce: false, latency: 0.0
      Computing fullDFS: x243
      Computing fullDFS: x241
      Cycles: Map()
      cycles are Vector()
         stm: x240, None
         stm: x241, None
         stm: x242, None
         stm: x243, None
       - Latency:  0.0
       - Interval: 1.0 (1.0 bbox)
       - Iter Diff: None (from ArrayBuffer())
      x253 = UnrolledForeach(Set(),x246,Block(Const(())),List(List(b247)),List(List(b248)),None)
      Working on pipeLatencies of result Vector(Const(()), x249, x252), schedule Vector(x249, x250, x251, x310, x252)
      Memories with both reads and writes in this scope: Set()
      Done finding cycles: Vector(), Map()
      Computing fullDFS: Const(())
      Computing fullDFS: x249
      cur: x249, inReduce: false, latency: 2.0
      Computing fullDFS: x252
      Computing fullDFS: x251
      Computing fullDFS: x250
      Computing fullDFS: x310
      cur: x310, inReduce: false, latency: 0.0
      Cycles: Map()
      cycles are Vector()
         stm: x249, None
         stm: x250, None
         stm: x251, None
         stm: x310, None
         stm: x252, None
       - Latency:  2.0
       - Interval: 1.0 (1.0 bbox)
       - Iter Diff: None (from ArrayBuffer())
      x257 = UnitPipe(Set(),Block(Const(())),None)
      Working on pipeLatencies of result Vector(Const(()), x255), schedule Vector(x255)
      Memories with both reads and writes in this scope: Set()
      Done finding cycles: Vector(), Map()
      Computing fullDFS: Const(())
      Computing fullDFS: x255
      cur: x255, inReduce: false, latency: 1.0
      Cycles: Map()
      cycles are Vector()
         stm: x255, None
       - Latency:  1.0
       - Interval: 1.0 (1.0 bbox)
       - Iter Diff: None (from ArrayBuffer())
     - Interval: 1.0
   - Interval: 2.0
