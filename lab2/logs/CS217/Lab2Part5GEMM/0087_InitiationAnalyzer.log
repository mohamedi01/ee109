  x810 = AccelScope(Block(Const(())))
    x1251 = UnrolledForeach(Set(),x912,Block(Const(())),List(List(b913)),List(List(b914)),None)
      x921 = UnitPipe(Set(b914),Block(Const(())),None)
      Working on pipeLatencies of result Vector(Const(()), x917, x920), schedule Vector(x917, x918, x919, x920)
      Memories with both reads and writes in this scope: Set()
      Done finding cycles: Vector(), Map()
      Computing fullDFS: Const(())
      Computing fullDFS: x917
      cur: x917, inReduce: false, latency: 0.0
      Computing fullDFS: x920
      Computing fullDFS: x919
      Computing fullDFS: x918
      Cycles: Map()
      cycles are Vector()
         stm: x917, None
         stm: x918, None
         stm: x919, None
         stm: x920, None
       - Latency:  2.0
       - Interval: 1.0 (1.0 bbox)
       - Iter Diff: None (from ArrayBuffer())
      x1250 = UnrolledForeach(Set(b914),x923,Block(Const(())),List(List(b924)),List(List(b925)),None)
        x932 = UnitPipe(Set(b925, b914),Block(Const(())),None)
        Working on pipeLatencies of result Vector(Const(()), x928, x931), schedule Vector(x928, x929, x930, x931)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x928
        cur: x928, inReduce: false, latency: 0.0
        Computing fullDFS: x931
        Computing fullDFS: x930
        Computing fullDFS: x929
        Cycles: Map()
        cycles are Vector()
           stm: x928, None
           stm: x929, None
           stm: x930, None
           stm: x931, None
         - Latency:  2.0
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
        x1001 = UnitPipe(Set(b925, b914),Block(Const(())),None)
          x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None)
          Working on pipeLatencies of result Vector(Const(()), x957, x943, x961, x963, x950, x960), schedule Vector(x942, x943, x1336, x1337, x1322, x946, x947, x1323, x949, x950, x1338, x951, x952, x953, x954, x1324, x956, x957, x1339, x958, x1340, x959, x960, x1341, x1342, x961, x1343, x1344, x962, x963)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: Const(())
          Computing fullDFS: x957
          cur: x957, inReduce: false, latency: 0.0
          Computing fullDFS: x943
          cur: x943, inReduce: false, latency: 0.0
          Computing fullDFS: x961
          Computing fullDFS: x959
          Computing fullDFS: x1324
          Computing fullDFS: x953
          Computing fullDFS: x952
          Computing fullDFS: x951
          Computing fullDFS: x949
          Computing fullDFS: x1322
          Computing fullDFS: x942
          cur: x942, inReduce: false, latency: 1.0
          Computing fullDFS: x1336
          Computing fullDFS: x1337
          cur: x1337, inReduce: false, latency: 0.0
          Computing fullDFS: x947
          Computing fullDFS: x946
          Computing fullDFS: x1338
          Computing fullDFS: x950
          cur: x950, inReduce: false, latency: 0.0
          Computing fullDFS: x1340
          Computing fullDFS: x958
          Computing fullDFS: x956
          Computing fullDFS: x1323
          Computing fullDFS: x1339
          Computing fullDFS: x1341
          Computing fullDFS: x960
          cur: x960, inReduce: false, latency: 0.0
          Computing fullDFS: x1342
          cur: x1342, inReduce: false, latency: 0.0
          Computing fullDFS: x963
          Computing fullDFS: x962
          Computing fullDFS: x954
          Computing fullDFS: x1343
          Computing fullDFS: x1344
          Cycles: Map()
          cycles are Vector()
             stm: x942, None
             stm: x943, None
             stm: x1336, None
             stm: x1337, None
             stm: x1322, None
             stm: x946, None
             stm: x947, None
             stm: x1323, None
             stm: x949, None
             stm: x950, None
             stm: x1338, None
             stm: x951, None
             stm: x952, None
             stm: x953, None
             stm: x954, None
             stm: x1324, None
             stm: x956, None
             stm: x957, None
             stm: x1339, None
             stm: x958, None
             stm: x1340, None
             stm: x959, None
             stm: x960, None
             stm: x1341, None
             stm: x1342, None
             stm: x961, None
             stm: x1343, None
             stm: x1344, None
             stm: x962, None
             stm: x963, None
           - Latency:  11.8
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None)
            x981 = UnitPipe(Set(b969),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x973, x980, x978, x976), schedule Vector(x973, x974, x975, x976, x977, x978, x979, x980)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x973
            cur: x973, inReduce: false, latency: 0.0
            Computing fullDFS: x980
            Computing fullDFS: x979
            Computing fullDFS: x974
            Computing fullDFS: x978
            Computing fullDFS: x977
            Computing fullDFS: x976
            Computing fullDFS: x975
            Cycles: Map()
            cycles are Vector()
               stm: x973, None
               stm: x974, None
               stm: x975, None
               stm: x976, None
               stm: x977, None
               stm: x978, None
               stm: x979, None
               stm: x980, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None)
            Working on pipeLatencies of result Vector(Const(()), x998, x989, x993, x987), schedule Vector(x987, x988, x989, x990, x991, x992, x993, x1345, x994, x996, x1346, x997, x1347, x1348, x1349, x1350, x998)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x998
            Computing fullDFS: x997
            Computing fullDFS: x992
            Computing fullDFS: x987
            cur: x987, inReduce: false, latency: 0.0
            Computing fullDFS: x1346
            Computing fullDFS: x996
            cur: x996, inReduce: false, latency: 0.2
            Computing fullDFS: x1347
            Computing fullDFS: x994
            Computing fullDFS: x1345
            Computing fullDFS: x993
            cur: x993, inReduce: false, latency: 1.0
            Computing fullDFS: x1348
            cur: x1348, inReduce: false, latency: 0.0
            Computing fullDFS: x1349
            cur: x1349, inReduce: false, latency: 0.0
            Computing fullDFS: x1350
            Computing fullDFS: x991
            Computing fullDFS: x988
            Computing fullDFS: x990
            Computing fullDFS: x989
            cur: x989, inReduce: false, latency: 0.0
            Cycles: Map()
            cycles are Vector()
               stm: x987, None
               stm: x988, None
               stm: x989, None
               stm: x990, None
               stm: x991, None
               stm: x992, None
               stm: x993, None
               stm: x1345, None
               stm: x994, None
               stm: x996, None
               stm: x1346, None
               stm: x997, None
               stm: x1347, None
               stm: x1348, None
               stm: x1349, None
               stm: x1350, None
               stm: x998, None
             - Latency:  3.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
         - Interval: 11.8
        x1335 = UnrolledForeach(Set(b925, b914),x1003,Block(Const(())),List(List(b1004)),List(List(b1005)),None)
          x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
          Working on pipeLatencies of result Vector(Const(()), x1011, x1014), schedule Vector(x1011, x1012, x1013, x1014)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: Const(())
          Computing fullDFS: x1011
          cur: x1011, inReduce: false, latency: 0.0
          Computing fullDFS: x1014
          Computing fullDFS: x1013
          Computing fullDFS: x1012
          Cycles: Map()
          cycles are Vector()
             stm: x1011, None
             stm: x1012, None
             stm: x1013, None
             stm: x1014, None
           - Latency:  2.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x1334 = ParallelPipe(Set(),Block(Const(())))
            x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
              x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None)
              Working on pipeLatencies of result Vector(Const(()), x1041, x1047, x1027, x1044, x1034, x1045), schedule Vector(x1026, x1027, x1351, x1352, x1325, x1030, x1031, x1326, x1033, x1034, x1353, x1035, x1036, x1037, x1038, x1327, x1040, x1041, x1354, x1042, x1355, x1043, x1044, x1356, x1357, x1045, x1358, x1359, x1046, x1047)
              Memories with both reads and writes in this scope: Set()
              Done finding cycles: Vector(), Map()
              Computing fullDFS: Const(())
              Computing fullDFS: x1041
              cur: x1041, inReduce: false, latency: 0.0
              Computing fullDFS: x1047
              Computing fullDFS: x1356
              cur: x1356, inReduce: false, latency: 0.0
              Computing fullDFS: x1046
              Computing fullDFS: x1038
              Computing fullDFS: x1037
              Computing fullDFS: x1036
              Computing fullDFS: x1035
              Computing fullDFS: x1033
              Computing fullDFS: x1325
              Computing fullDFS: x1026
              cur: x1026, inReduce: false, latency: 1.0
              Computing fullDFS: x1351
              cur: x1351, inReduce: false, latency: 0.0
              Computing fullDFS: x1352
              Computing fullDFS: x1027
              cur: x1027, inReduce: false, latency: 0.0
              Computing fullDFS: x1031
              Computing fullDFS: x1030
              Computing fullDFS: x1353
              Computing fullDFS: x1034
              cur: x1034, inReduce: false, latency: 0.0
              Computing fullDFS: x1358
              Computing fullDFS: x1359
              Computing fullDFS: x1044
              cur: x1044, inReduce: false, latency: 0.0
              Computing fullDFS: x1045
              Computing fullDFS: x1043
              Computing fullDFS: x1327
              Computing fullDFS: x1355
              Computing fullDFS: x1042
              Computing fullDFS: x1040
              Computing fullDFS: x1326
              Computing fullDFS: x1354
              Computing fullDFS: x1357
              Cycles: Map()
              cycles are Vector()
                 stm: x1026, None
                 stm: x1027, None
                 stm: x1351, None
                 stm: x1352, None
                 stm: x1325, None
                 stm: x1030, None
                 stm: x1031, None
                 stm: x1326, None
                 stm: x1033, None
                 stm: x1034, None
                 stm: x1353, None
                 stm: x1035, None
                 stm: x1036, None
                 stm: x1037, None
                 stm: x1038, None
                 stm: x1327, None
                 stm: x1040, None
                 stm: x1041, None
                 stm: x1354, None
                 stm: x1042, None
                 stm: x1355, None
                 stm: x1043, None
                 stm: x1044, None
                 stm: x1356, None
                 stm: x1357, None
                 stm: x1045, None
                 stm: x1358, None
                 stm: x1359, None
                 stm: x1046, None
                 stm: x1047, None
               - Latency:  11.8
               - Interval: 1.0 (1.0 bbox)
               - Iter Diff: None (from ArrayBuffer())
              x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None)
                x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
                Working on pipeLatencies of result Vector(Const(()), x1057, x1064, x1060, x1062), schedule Vector(x1057, x1058, x1059, x1060, x1061, x1062, x1063, x1064)
                Memories with both reads and writes in this scope: Set()
                Done finding cycles: Vector(), Map()
                Computing fullDFS: Const(())
                Computing fullDFS: x1057
                cur: x1057, inReduce: false, latency: 0.0
                Computing fullDFS: x1064
                Computing fullDFS: x1063
                Computing fullDFS: x1058
                Computing fullDFS: x1060
                Computing fullDFS: x1059
                Computing fullDFS: x1062
                Computing fullDFS: x1061
                Cycles: Map()
                cycles are Vector()
                   stm: x1057, None
                   stm: x1058, None
                   stm: x1059, None
                   stm: x1060, None
                   stm: x1061, None
                   stm: x1062, None
                   stm: x1063, None
                   stm: x1064, None
                 - Latency:  1.0
                 - Interval: 1.0 (1.0 bbox)
                 - Iter Diff: None (from ArrayBuffer())
                x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
                Working on pipeLatencies of result Vector(Const(()), x1073, x1082, x1071, x1077), schedule Vector(x1071, x1072, x1073, x1074, x1075, x1076, x1077, x1360, x1078, x1080, x1361, x1081, x1362, x1363, x1364, x1365, x1082)
                Memories with both reads and writes in this scope: Set()
                Done finding cycles: Vector(), Map()
                Computing fullDFS: Const(())
                Computing fullDFS: x1073
                cur: x1073, inReduce: false, latency: 0.0
                Computing fullDFS: x1082
                Computing fullDFS: x1081
                Computing fullDFS: x1076
                Computing fullDFS: x1071
                cur: x1071, inReduce: false, latency: 0.0
                Computing fullDFS: x1361
                Computing fullDFS: x1080
                cur: x1080, inReduce: false, latency: 0.2
                Computing fullDFS: x1362
                Computing fullDFS: x1078
                Computing fullDFS: x1360
                Computing fullDFS: x1077
                cur: x1077, inReduce: false, latency: 1.0
                Computing fullDFS: x1363
                Computing fullDFS: x1075
                Computing fullDFS: x1072
                Computing fullDFS: x1074
                Computing fullDFS: x1364
                cur: x1364, inReduce: false, latency: 0.0
                Computing fullDFS: x1365
                cur: x1365, inReduce: false, latency: 0.0
                Cycles: Map()
                cycles are Vector()
                   stm: x1071, None
                   stm: x1072, None
                   stm: x1073, None
                   stm: x1074, None
                   stm: x1075, None
                   stm: x1076, None
                   stm: x1077, None
                   stm: x1360, None
                   stm: x1078, None
                   stm: x1080, None
                   stm: x1361, None
                   stm: x1081, None
                   stm: x1362, None
                   stm: x1363, None
                   stm: x1364, None
                   stm: x1365, None
                   stm: x1082, None
                 - Latency:  3.0
                 - Interval: 1.0 (1.0 bbox)
                 - Iter Diff: None (from ArrayBuffer())
               - Interval: 1.0
             - Interval: 11.8
            x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
              x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None)
              Working on pipeLatencies of result Vector(Const(()), x1111, x1114, x1112, x1094, x1108, x1101), schedule Vector(x1093, x1094, x1366, x1367, x1328, x1097, x1098, x1329, x1100, x1101, x1368, x1102, x1103, x1104, x1105, x1330, x1107, x1108, x1369, x1109, x1370, x1110, x1111, x1371, x1372, x1112, x1373, x1374, x1113, x1114)
              Memories with both reads and writes in this scope: Set()
              Done finding cycles: Vector(), Map()
              Computing fullDFS: Const(())
              Computing fullDFS: x1111
              cur: x1111, inReduce: false, latency: 0.0
              Computing fullDFS: x1114
              Computing fullDFS: x1371
              cur: x1371, inReduce: false, latency: 0.0
              Computing fullDFS: x1113
              Computing fullDFS: x1105
              Computing fullDFS: x1104
              Computing fullDFS: x1103
              Computing fullDFS: x1102
              Computing fullDFS: x1100
              Computing fullDFS: x1328
              Computing fullDFS: x1093
              cur: x1093, inReduce: false, latency: 1.0
              Computing fullDFS: x1366
              cur: x1366, inReduce: false, latency: 0.0
              Computing fullDFS: x1367
              Computing fullDFS: x1094
              cur: x1094, inReduce: false, latency: 0.0
              Computing fullDFS: x1098
              Computing fullDFS: x1097
              Computing fullDFS: x1368
              Computing fullDFS: x1101
              cur: x1101, inReduce: false, latency: 0.0
              Computing fullDFS: x1373
              Computing fullDFS: x1374
              Computing fullDFS: x1112
              Computing fullDFS: x1110
              Computing fullDFS: x1330
              Computing fullDFS: x1370
              Computing fullDFS: x1109
              Computing fullDFS: x1107
              Computing fullDFS: x1329
              Computing fullDFS: x1369
              Computing fullDFS: x1108
              cur: x1108, inReduce: false, latency: 0.0
              Computing fullDFS: x1372
              Cycles: Map()
              cycles are Vector()
                 stm: x1093, None
                 stm: x1094, None
                 stm: x1366, None
                 stm: x1367, None
                 stm: x1328, None
                 stm: x1097, None
                 stm: x1098, None
                 stm: x1329, None
                 stm: x1100, None
                 stm: x1101, None
                 stm: x1368, None
                 stm: x1102, None
                 stm: x1103, None
                 stm: x1104, None
                 stm: x1105, None
                 stm: x1330, None
                 stm: x1107, None
                 stm: x1108, None
                 stm: x1369, None
                 stm: x1109, None
                 stm: x1370, None
                 stm: x1110, None
                 stm: x1111, None
                 stm: x1371, None
                 stm: x1372, None
                 stm: x1112, None
                 stm: x1373, None
                 stm: x1374, None
                 stm: x1113, None
                 stm: x1114, None
               - Latency:  11.8
               - Interval: 1.0 (1.0 bbox)
               - Iter Diff: None (from ArrayBuffer())
              x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None)
                x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
                Working on pipeLatencies of result Vector(Const(()), x1127, x1131, x1124, x1129), schedule Vector(x1124, x1125, x1126, x1127, x1128, x1129, x1130, x1131)
                Memories with both reads and writes in this scope: Set()
                Done finding cycles: Vector(), Map()
                Computing fullDFS: Const(())
                Computing fullDFS: x1127
                Computing fullDFS: x1126
                Computing fullDFS: x1125
                Computing fullDFS: x1124
                cur: x1124, inReduce: false, latency: 0.0
                Computing fullDFS: x1131
                Computing fullDFS: x1130
                Computing fullDFS: x1129
                Computing fullDFS: x1128
                Cycles: Map()
                cycles are Vector()
                   stm: x1124, None
                   stm: x1125, None
                   stm: x1126, None
                   stm: x1127, None
                   stm: x1128, None
                   stm: x1129, None
                   stm: x1130, None
                   stm: x1131, None
                 - Latency:  1.0
                 - Interval: 1.0 (1.0 bbox)
                 - Iter Diff: None (from ArrayBuffer())
                x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
                Working on pipeLatencies of result Vector(Const(()), x1138, x1150, x1144, x1149, x1140), schedule Vector(x1138, x1139, x1140, x1141, x1142, x1143, x1144, x1375, x1145, x1147, x1376, x1148, x1377, x1378, x1379, x1380, x1149, x1150)
                Memories with both reads and writes in this scope: Set()
                Done finding cycles: Vector(), Map()
                Computing fullDFS: Const(())
                Computing fullDFS: x1138
                cur: x1138, inReduce: false, latency: 0.0
                Computing fullDFS: x1150
                Computing fullDFS: x1148
                Computing fullDFS: x1143
                Computing fullDFS: x1376
                Computing fullDFS: x1147
                cur: x1147, inReduce: false, latency: 0.2
                Computing fullDFS: x1377
                Computing fullDFS: x1142
                Computing fullDFS: x1139
                Computing fullDFS: x1141
                Computing fullDFS: x1140
                cur: x1140, inReduce: false, latency: 0.0
                Computing fullDFS: x1378
                cur: x1378, inReduce: false, latency: 0.0
                Computing fullDFS: x1379
                Computing fullDFS: x1145
                Computing fullDFS: x1375
                Computing fullDFS: x1144
                cur: x1144, inReduce: false, latency: 1.0
                Computing fullDFS: x1380
                cur: x1380, inReduce: false, latency: 0.0
                Computing fullDFS: x1149
                Cycles: Map()
                cycles are Vector()
                   stm: x1138, None
                   stm: x1139, None
                   stm: x1140, None
                   stm: x1141, None
                   stm: x1142, None
                   stm: x1143, None
                   stm: x1144, None
                   stm: x1375, None
                   stm: x1145, None
                   stm: x1147, None
                   stm: x1376, None
                   stm: x1148, None
                   stm: x1377, None
                   stm: x1378, None
                   stm: x1379, None
                   stm: x1380, None
                   stm: x1149, None
                   stm: x1150, None
                 - Latency:  3.0
                 - Interval: 1.0 (1.0 bbox)
                 - Iter Diff: None (from ArrayBuffer())
               - Interval: 1.0
             - Interval: 11.8
           - Interval: 11.8
          x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None)
            x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None)
              x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None)
              Working on pipeLatencies of result Vector(Const(()), x1185, x1175, x1171, x1180, x1184), schedule Vector(x1169, x1170, x1381, x1382, x1383, x1384, x1385, x1386, x1387, x1171, x1172, x1174, x1388, x1389, x1390, x1391, x1392, x1393, x1175, x1176, x1178, x1179, x1180, x1181, x1182, x1183, x1394, x1395, x1396, x1397, x1398, x1399, x1400, x1184, x1185)
              Memories with both reads and writes in this scope: Set(x1017)
              NonConflictSets(x1171, x1185): Set()
              NonConflictSets(x1171, x1185): Set()
              Found Cycle: x1171, x1185
              Exclusions: Set() Set() 
              Done finding cycles: Vector(AccumTriple(x1017,x1171,x1185)), Map(x1171 -> List(AccumTriple(x1017,x1171,x1185)), x1183 -> List(AccumTriple(x1017,x1171,x1185)), x1185 -> List(AccumTriple(x1017,x1171,x1185)), x1172 -> List(AccumTriple(x1017,x1171,x1185)))
              Computing fullDFS: Const(())
              Computing fullDFS: x1185
              Computing fullDFS: x1171
              Computing fullDFS: x1381
              cur: x1381, inReduce: false, latency: 0.0
              Computing fullDFS: x1382
              cur: x1382, inReduce: false, latency: 0.0
              Computing fullDFS: x1383
              Computing fullDFS: x1170
              Computing fullDFS: x1169
              cur: x1169, inReduce: false, latency: 0.2
              Computing fullDFS: x1384
              cur: x1384, inReduce: false, latency: 0.0
              Computing fullDFS: x1385
              cur: x1385, inReduce: false, latency: 0.0
              Computing fullDFS: x1386
              cur: x1386, inReduce: false, latency: 0.0
              Computing fullDFS: x1387
              cur: x1387, inReduce: false, latency: 0.0
              Computing fullDFS: x1183
              Computing fullDFS: x1172
              Computing fullDFS: x1182
              Computing fullDFS: x1176
              Computing fullDFS: x1175
              Computing fullDFS: x1174
              Computing fullDFS: x1388
              cur: x1388, inReduce: false, latency: 0.0
              Computing fullDFS: x1389
              cur: x1389, inReduce: false, latency: 0.0
              Computing fullDFS: x1390
              cur: x1390, inReduce: false, latency: 0.0
              Computing fullDFS: x1391
              cur: x1391, inReduce: false, latency: 0.0
              Computing fullDFS: x1392
              cur: x1392, inReduce: false, latency: 0.0
              Computing fullDFS: x1393
              cur: x1393, inReduce: false, latency: 0.0
              Computing fullDFS: x1181
              Computing fullDFS: x1180
              Computing fullDFS: x1179
              Computing fullDFS: x1178
              cur: x1178, inReduce: false, latency: 0.2
              Computing fullDFS: x1394
              cur: x1394, inReduce: false, latency: 0.0
              Computing fullDFS: x1395
              cur: x1395, inReduce: false, latency: 0.0
              Computing fullDFS: x1396
              Computing fullDFS: x1397
              cur: x1397, inReduce: false, latency: 0.0
              Computing fullDFS: x1398
              cur: x1398, inReduce: false, latency: 0.0
              Computing fullDFS: x1399
              cur: x1399, inReduce: false, latency: 0.0
              Computing fullDFS: x1400
              cur: x1400, inReduce: false, latency: 0.0
              Computing fullDFS: x1184
              Cycle #0: write: x1185, cycle: x1171, x1171, x1172, x1183, x1185
              Cycles: Map(x1171 -> List(x1171), x1183 -> Vector(x1171, x1172, x1183), x1185 -> Vector(x1171, x1171, x1172, x1183, x1185), x1172 -> Vector(x1171, x1172), x1184 -> Vector(x1171, x1172, x1183, x1184))
              pseudo cycles for x1017:
              Access: x1171 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,0,Vector(0),Vector(0)))))
              First Port: Map(List() -> Port(Some(1),0,0,Vector(0),Vector(0)))
              Pushing x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.2 due to muxing.
              Access: x1185 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,0,Vector(0),Vector(0)))))
              First Port: Map(List() -> Port(Some(1),0,0,Vector(0),Vector(0)))
              Pushing x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) by 0.0 to 11.2 due to muxing.
              cycles are Vector(AAACycle(Vector(x1171),x1017,1.0), AAACycle(Vector(x1185),x1017,1.0), WARCycle(x1171,x1185,x1017,Vector(x1171, x1171, x1172, x1183, x1185),4.0,spatial.node.AccumMarker$Unknown$@4a2e4f67,-1))
                 stm: x1169, None
                 stm: x1170, None
                 stm: x1381, None
                 stm: x1382, None
                 stm: x1383, None
                 stm: x1384, None
                 stm: x1385, None
                 stm: x1386, None
                 stm: x1387, None
                 stm: x1171, None
                 stm: x1172, None
                 stm: x1174, None
                 stm: x1388, None
                 stm: x1389, None
                 stm: x1390, None
                 stm: x1391, None
                 stm: x1392, None
                 stm: x1393, None
                 stm: x1175, None
                 stm: x1176, None
                 stm: x1178, None
                 stm: x1179, None
                 stm: x1180, None
                 stm: x1181, None
                 stm: x1182, None
                 stm: x1183, None
                 stm: x1394, None
                 stm: x1395, None
                 stm: x1396, None
                 stm: x1397, None
                 stm: x1398, None
                 stm: x1399, None
                 stm: x1400, None
                 stm: x1184, None
                 stm: x1185, None
               - Latency:  11.2
               - Interval: 4.0 (1.0 bbox)
               - Iter Diff: None (from ArrayBuffer())
             - Interval: 4.0
           - Interval: 4.0
          x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
            x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None)
              x1242 = UnitPipe(Set(b1195),Block(Const(())),None)
                x1222 = UnitPipe(Set(),Block(Const(())),None)
                Working on pipeLatencies of result Vector(Const(()), x1200, x1217, x1214, x1207, x1219, x1218, x1220, x1221), schedule Vector(x1199, x1200, x1401, x1402, x1331, x1203, x1204, x1332, x1206, x1207, x1403, x1208, x1209, x1210, x1211, x1333, x1213, x1214, x1404, x1215, x1405, x1216, x1217, x1406, x1218, x1219, x1220, x1221)
                Memories with both reads and writes in this scope: Set()
                Done finding cycles: Vector(), Map()
                Computing fullDFS: Const(())
                Computing fullDFS: x1200
                cur: x1200, inReduce: false, latency: 0.0
                Computing fullDFS: x1217
                cur: x1217, inReduce: false, latency: 0.0
                Computing fullDFS: x1214
                cur: x1214, inReduce: false, latency: 0.0
                Computing fullDFS: x1207
                cur: x1207, inReduce: false, latency: 0.0
                Computing fullDFS: x1219
                Computing fullDFS: x1206
                Computing fullDFS: x1331
                Computing fullDFS: x1199
                cur: x1199, inReduce: false, latency: 1.0
                Computing fullDFS: x1401
                cur: x1401, inReduce: false, latency: 0.0
                Computing fullDFS: x1402
                Computing fullDFS: x1204
                Computing fullDFS: x1203
                Computing fullDFS: x1218
                Computing fullDFS: x1216
                Computing fullDFS: x1333
                Computing fullDFS: x1210
                Computing fullDFS: x1209
                Computing fullDFS: x1208
                Computing fullDFS: x1403
                Computing fullDFS: x1405
                Computing fullDFS: x1215
                Computing fullDFS: x1213
                Computing fullDFS: x1332
                Computing fullDFS: x1404
                Computing fullDFS: x1406
                Computing fullDFS: x1220
                Computing fullDFS: x1221
                Computing fullDFS: x1211
                Cycles: Map()
                cycles are Vector()
                   stm: x1199, None
                   stm: x1200, None
                   stm: x1401, None
                   stm: x1402, None
                   stm: x1331, None
                   stm: x1203, None
                   stm: x1204, None
                   stm: x1332, None
                   stm: x1206, None
                   stm: x1207, None
                   stm: x1403, None
                   stm: x1208, None
                   stm: x1209, None
                   stm: x1210, None
                   stm: x1211, None
                   stm: x1333, None
                   stm: x1213, None
                   stm: x1214, None
                   stm: x1404, None
                   stm: x1215, None
                   stm: x1405, None
                   stm: x1216, None
                   stm: x1217, None
                   stm: x1406, None
                   stm: x1218, None
                   stm: x1219, None
                   stm: x1220, None
                   stm: x1221, None
                 - Latency:  11.8
                 - Interval: 1.0 (1.0 bbox)
                 - Iter Diff: None (from ArrayBuffer())
                x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
                Working on pipeLatencies of result Vector(x1237, Const(()), x1228, x1230, x1240), schedule Vector(x1228, x1229, x1230, x1231, x1232, x1233, x1235, x1407, x1236, x1408, x1409, x1237, x1238, x1410, x1239, x1411, x1240)
                Memories with both reads and writes in this scope: Set()
                Done finding cycles: Vector(), Map()
                Computing fullDFS: x1237
                Computing fullDFS: x1236
                Computing fullDFS: x1233
                Computing fullDFS: x1228
                cur: x1228, inReduce: false, latency: 0.0
                Computing fullDFS: x1407
                Computing fullDFS: x1235
                cur: x1235, inReduce: false, latency: 0.2
                Computing fullDFS: x1408
                Computing fullDFS: x1232
                Computing fullDFS: x1229
                Computing fullDFS: x1231
                Computing fullDFS: x1230
                cur: x1230, inReduce: false, latency: 0.0
                Computing fullDFS: x1409
                cur: x1409, inReduce: false, latency: 0.0
                Computing fullDFS: Const(())
                Computing fullDFS: x1240
                Computing fullDFS: x1239
                Computing fullDFS: x1238
                Computing fullDFS: x1410
                Computing fullDFS: x1411
                cur: x1411, inReduce: false, latency: 0.0
                Cycles: Map()
                cycles are Vector()
                   stm: x1228, None
                   stm: x1229, None
                   stm: x1230, None
                   stm: x1231, None
                   stm: x1232, None
                   stm: x1233, None
                   stm: x1235, None
                   stm: x1407, None
                   stm: x1236, None
                   stm: x1408, None
                   stm: x1409, None
                   stm: x1237, None
                   stm: x1238, None
                   stm: x1410, None
                   stm: x1239, None
                   stm: x1411, None
                   stm: x1240, None
                 - Latency:  4.0
                 - Interval: 1.0 (1.0 bbox)
                 - Iter Diff: None (from ArrayBuffer())
               - Interval: 1.0
              x1246 = UnitPipe(Set(b1195),Block(Const(())),None)
              Working on pipeLatencies of result Vector(Const(()), x1244), schedule Vector(x1244)
              Memories with both reads and writes in this scope: Set()
              Done finding cycles: Vector(), Map()
              Computing fullDFS: Const(())
              Computing fullDFS: x1244
              cur: x1244, inReduce: false, latency: 1.0
              Cycles: Map()
              cycles are Vector()
                 stm: x1244, None
               - Latency:  1.0
               - Interval: 1.0 (1.0 bbox)
               - Iter Diff: None (from ArrayBuffer())
             - Interval: 1.0
           - Interval: 1.0
         - Interval: 11.8
       - Interval: 11.8
     - Interval: 11.8
   - Interval: 11.8
