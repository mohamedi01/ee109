Stms:
  x1322 = FixFMA(x942,x1336,x1337)
  x1036 = FixAdd(x1035,Const(15))
  x1337 = DelayLine(1,b913)
  x1411 = DelayLine(4,b1227)
  x1369 = DelayLine(7,x1108)
  x1190 = StreamOutNew(BurstFullDataBus())
  x1105 = FixSLA(x1104,Const(4))
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1031 = FixSLA(x1030,Const(4))
  x1315 = RegRead(x927)
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343)))
  x1179 = FixAdd(x1178,b1161)
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true))))
  x1200 = RegRead(x879)
  x977 = FieldApply(x974,end)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1068 = CounterChainNew(List(x1067))
  x994 = VecApply(x1345,0)
  x1401 = DelayLine(1,b1004)
  x1073 = RegRead(x1055)
  x1142 = And(x1139,x1141)
  x1305 = RegRead(x880)
  x1041 = DRAMAddress(x903)
  x1078 = VecApply(x1360,0)
  x1310 = RegRead(x879)
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1))
  x1233 = FixSub(b1226,x1228)
  x1327 = FixSLA(x1037,Const(6))
  x1342 = DelayLine(10,b941)
  x1063 = FieldApply(x1058,size)
  x1354 = DelayLine(7,x1041)
  x1222 = UnitPipe(Set(),Block(Const(())),None)
  x930 = FixMin(Const(16),x929)
  x1196 = RegNew(Const(0))
  x1001 = UnitPipe(Set(b925, b914),Block(Const(())),None)
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191)
  x1127 = RegWrite(x1121,x1126,Set())
  x1391 = DelayLine(1,b1162)
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359)))
  x1359 = DelayLine(1,x1035)
  x1386 = DelayLine(7,b1157)
  x1366 = DelayLine(1,b1004)
  x1228 = RegRead(x1196)
  x1055 = RegNew(Const(0))
  x1409 = DelayLine(2,b1227)
  x1330 = FixSLA(x1104,Const(6))
  x1323 = FixSLA(x946,Const(6))
  x917 = RegRead(x880)
  x1313 = RegRead(x1056)
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1191 = StreamInNew(BurstAckBus)
  x1059 = FieldApply(x1058,start)
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
  x949 = FixSub(x1322,x947)
  x1379 = DelayLine(1,x1145)
  x1087 = FIFONew(Const(16))
  x1147 = FixSLA(b1119,Const(4))
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None)
  x1319 = RegRead(x916)
  x1347 = DelayLine(1,x994)
  x1013 = FixMin(Const(16),x1012)
  x1398 = DelayLine(10,b1162)
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None)
  x1362 = DelayLine(1,x1078)
  x1100 = FixSub(x1328,x1098)
  x1232 = And(x1229,x1231)
  x1373 = DelayLine(1,x1102)
  x1040 = FixToFix(x1326,TRUE,_64,_0)
  x1109 = FixAdd(x1107,x1369)
  x1334 = ParallelPipe(Set(),Block(Const(())))
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
  x937 = StreamInNew(BurstDataBus())
  x1383 = DelayLine(6,x1170)
  x1020 = FIFONew(Const(16))
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1))
  x1183 = FixAdd(x1172,x1182)
  x1051 = CounterChainNew(List(x1050))
  x981 = UnitPipe(Set(b969),Block(Const(())),None)
  x1169 = FixSLA(b1156,Const(4))
  x1377 = DelayLine(2,x1142)
  x1215 = FixAdd(x1213,x1404)
  x956 = FixToFix(x1323,TRUE,_64,_0)
  x1072 = FixLeq(x1071,b1069)
  x1394 = DelayLine(10,b1005)
  x1351 = DelayLine(1,b1004)
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348)))
  x1345 = DelayLine(1,x993)
  x988 = FixLeq(x987,b985)
  x1405 = DelayLine(1,x1215)
  x1104 = FixDivSRA(x1103,Const(4))
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1074 = FixLst(b1069,x1073)
  x1206 = FixSub(x1331,x1204)
  x920 = RegWrite(x916,x919,Set())
  x942 = FixAdd(b924,b940)
  x1306 = RegRead(x878)
  x1199 = FixAdd(b924,b1194)
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1338 = DelayLine(8,x950)
  x1311 = RegRead(x916)
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1))
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356)))
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1387 = DelayLine(7,b914)
  x957 = DRAMAddress(x900)
  x1343 = DelayLine(1,x951)
  x1021 = StreamInNew(BurstDataBus())
  x1042 = FixAdd(x1040,x1354)
  x952 = FixAdd(x951,Const(15))
  x1355 = DelayLine(1,x1042)
  x1123 = RegNew(Const(0))
  x1174 = FixAdd(x1169,b1166)
  x1217 = DRAMIsAlloc(x906)
  x1370 = DelayLine(1,x1109)
  x1238 = VecApply(x1237,0)
  x916 = RegNew(Const(0))
  x1365 = DelayLine(2,b1053)
  x1178 = FixSLA(b1166,Const(4))
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1))
  x1210 = FixDivSRA(x1209,Const(4))
  x1027 = RegRead(x879)
  x1407 = DelayLine(1,x1235)
  x1128 = FieldApply(x1125,end)
  x1392 = DelayLine(1,b1157)
  x974 = VecApply(x973,0)
  x1012 = FixSub(x1011,b1004)
  x1402 = DelayLine(1,x1200)
  x1360 = DelayLine(1,x1077)
  x1350 = DelayLine(2,x991)
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1))
  x1143 = FixSub(b1136,x1138)
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1328 = FixFMA(x1093,x1367,x1366)
  x1375 = DelayLine(1,x1144)
  x1121 = RegNew(Const(0))
  x1064 = RegWrite(x1056,x1063,Set())
  x1111 = DRAMIsAlloc(x906)
  x980 = RegWrite(x972,x979,Set())
  x1138 = RegRead(x1121)
  x1118 = CounterChainNew(List(x1117))
  x989 = RegRead(x971)
  x1397 = DelayLine(10,b1167)
  x1329 = FixSLA(x1097,Const(6))
  x1160 = CounterChainNew(List(x1159))
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1182 = FixMul(x1176,x1181)
  x1075 = And(x1072,x1074)
  x1214 = DRAMAddress(x906)
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1207 = RegRead(x1010)
  x970 = RegNew(Const(0))
  x1155 = CounterChainNew(List(x1154))
  x1324 = FixSLA(x953,Const(6))
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371)))
  x997 = FixAdd(x1346,x992)
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1382 = DelayLine(7,b925)
  x1231 = FixLst(b1226,x1230)
  x1131 = RegWrite(x1123,x1130,Set())
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1))
  x1060 = RegWrite(x1054,x1059,Set())
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1))
  x984 = CounterChainNew(List(x983))
  x911 = CounterNew(Const(0),x1305,Const(16),Const(1))
  x1002 = CounterNew(Const(0),x1310,Const(16),Const(1))
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1393 = DelayLine(1,b914)
  x1333 = FixSLA(x1210,Const(6))
  x1318 = RegRead(x1010)
  x1086 = StreamOutNew(BurstCmdBus)
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1))
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
  x921 = UnitPipe(Set(b914),Block(Const(())),None)
  x1054 = RegNew(Const(0))
  x1170 = FixAdd(x1169,b1161)
  x1035 = FixAdd(x1033,x1353)
  x1071 = RegRead(x1054)
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None)
  x1026 = FixAdd(b913,b1024)
  x953 = FixDivSRA(x952,Const(4))
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1135 = CounterChainNew(List(x1134))
  x965 = FringeDenseLoad(x900,x935,x937)
  x1251 = UnrolledForeach(Set(),x912,Block(Const(())),List(List(b913)),List(List(b914)),None)
  x1103 = FixAdd(x1102,Const(15))
  x1219 = RegWrite(x1196,x1206,Set())
  x1374 = DelayLine(2,x1100)
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1))
  x975 = FieldApply(x974,start)
  x1389 = DelayLine(1,b925)
  x1125 = VecApply(x1124,0)
  x1388 = DelayLine(1,b1005)
  x958 = FixAdd(x956,x1339)
  x1403 = DelayLine(8,x1207)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1139 = FixLeq(x1138,b1136)
  x936 = FIFONew(Const(16))
  x1371 = DelayLine(10,b1092)
  x1312 = RegRead(x916)
  x1058 = VecApply(x1057,0)
  x1107 = FixToFix(x1329,TRUE,_64,_0)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1332 = FixSLA(x1203,Const(6))
  x1090 = CounterChainNew(List(x1089))
  x919 = FixMin(Const(16),x918)
  x947 = FixSLA(x946,Const(4))
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1))
  x1356 = DelayLine(10,b1025)
  x979 = FieldApply(x974,size)
  x1209 = FixAdd(x1208,Const(15))
  x1408 = DelayLine(2,x1232)
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1))
  x1011 = RegRead(x879)
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None)
  x1349 = DelayLine(2,b986)
  x990 = FixLst(b985,x989)
  x996 = FixSLA(b968,Const(4))
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true))))
  x1122 = RegNew(Const(0))
  x1376 = DelayLine(1,x1147)
  x1307 = RegRead(x927)
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1080 = FixSLA(b1052,Const(4))
  x1339 = DelayLine(7,x957)
  x1325 = FixFMA(x1026,x1352,x1351)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None)
  x1344 = DelayLine(2,x949)
  x943 = RegRead(x880)
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1))
  x1381 = DelayLine(7,b1005)
  x932 = UnitPipe(Set(b925, b914),Block(Const(())),None)
  x1061 = FieldApply(x1058,end)
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371)))
  x912 = CounterChainNew(List(x911))
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]])
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1))
  x1198 = RegNew(Const(0))
  x1396 = DelayLine(9,x1170)
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true))))
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1044 = DRAMIsAlloc(x903)
  x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1176 = VecApply(x1175,0)
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373)))
  x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None)
  x1364 = DelayLine(2,b1070)
  x1250 = UnrolledForeach(Set(b914),x923,Block(Const(())),List(List(b924)),List(List(b925)),None)
  x1102 = FixAdd(x1100,x1368)
  x922 = CounterNew(Const(0),x1306,Const(16),Const(1))
  x1076 = FixSub(b1069,x1071)
  x1034 = RegRead(x1010)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x927 = RegNew(Const(0))
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1))
  x1081 = FixAdd(x1361,x1076)
  x939 = CounterChainNew(List(x938))
  x1340 = DelayLine(1,x958)
  x1145 = VecApply(x1375,0)
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1181 = VecApply(x1180,0)
  x1049 = FringeDenseLoad(x903,x1019,x1021)
  x1003 = CounterChainNew(List(x1002))
  x1225 = CounterChainNew(List(x1224))
  x1400 = DelayLine(10,b914)
  x971 = RegNew(Const(0))
  x954 = FixSLA(x953,Const(4))
  x1368 = DelayLine(8,x1101)
  x1230 = RegRead(x1197)
  x1098 = FixSLA(x1097,Const(4))
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969)))
  x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None)
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None)
  x1038 = FixSLA(x1037,Const(4))
  x1235 = FixSLA(b1194,Const(4))
  x1317 = RegRead(x927)
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x951 = FixAdd(x949,x1338)
  x1130 = FieldApply(x1125,size)
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1336 = DelayLine(1,x943)
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1358 = DelayLine(2,x1033)
  x1141 = FixLst(b1136,x1140)
  x1023 = CounterChainNew(List(x1022))
  x1221 = RegWrite(x1198,x1211,Set())
  x1353 = DelayLine(8,x1034)
  x1094 = RegRead(x879)
  x978 = RegWrite(x971,x977,Set())
  x1140 = RegRead(x1122)
  x1372 = DelayLine(10,x1111)
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x991 = And(x988,x990)
  x1316 = RegRead(x1123)
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None)
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x931 = RegWrite(x927,x930,Set())
  x1321 = RegRead(x1198)
  x976 = RegWrite(x970,x975,Set())
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1126 = FieldApply(x1125,start)
  x1189 = StreamOutNew(BurstCmdBus)
  x1010 = RegNew(Const(0))
  x1390 = DelayLine(1,b1167)
  x1108 = DRAMAddress(x906)
  x1326 = FixSLA(x1030,Const(6))
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342)))
  x1385 = DelayLine(7,b1162)
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342)))
  x1341 = DelayLine(10,x960)
  x1062 = RegWrite(x1055,x1061,Set())
  x946 = FixDivSRA(x1322,Const(4))
  x1101 = RegRead(x1010)
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set()))
  x1030 = FixDivSRA(x1325,Const(4))
  x929 = FixSub(x928,b924)
  x1308 = RegRead(x927)
  x1193 = CounterChainNew(List(x1192))
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1309 = RegRead(x972)
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356)))
  x1116 = FringeDenseLoad(x906,x1086,x1088)
  x1348 = DelayLine(2,b969)
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None)
  x967 = CounterChainNew(List(x966))
  x950 = RegRead(x916)
  x1097 = FixDivSRA(x1328,Const(4))
  x1229 = FixLeq(x1228,b1226)
  x1395 = DelayLine(10,b925)
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x918 = FixSub(x917,b913)
  x1363 = DelayLine(2,x1075)
  x1314 = RegRead(x927)
  x1335 = UnrolledForeach(Set(b925, b914),x1003,Block(Const(())),List(List(b1004)),List(List(b1005)),None)
  x1172 = VecApply(x1171,0)
  x1410 = DelayLine(4,x1232)
  x1056 = RegNew(Const(0))
  x1033 = FixSub(x1325,x1031)
  x1197 = RegNew(Const(0))
  x960 = DRAMIsAlloc(x900)
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
  x1165 = CounterChainNew(List(x1164))
  x1346 = DelayLine(1,x996)
  x928 = RegRead(x878)
  x1093 = FixAdd(b924,b1091)
  x1236 = FixAdd(x1407,x1233)
  x987 = RegRead(x970)
  x1352 = DelayLine(1,x1027)
  x1129 = RegWrite(x1122,x1128,Set())
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None)
  x1384 = DelayLine(7,b1167)
  x1378 = DelayLine(2,b1137)
  x1019 = StreamOutNew(BurstCmdBus)
  x1357 = DelayLine(10,x1044)
  x992 = FixSub(b985,x987)
  x1399 = DelayLine(10,b1157)
  x1331 = FixFMA(x1199,x1402,x1401)
  x1320 = RegRead(x927)
  x1367 = DelayLine(1,x1094)
  x935 = StreamOutNew(BurstCmdBus)
  x923 = CounterChainNew(List(x922))
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1037 = FixDivSRA(x1036,Const(4))
  x1088 = StreamInNew(BurstDataBus())
  x1204 = FixSLA(x1203,Const(4))
  x1014 = RegWrite(x1010,x1013,Set())
  x972 = RegNew(Const(0))
Used:
  x1322 = FixFMA(x942,x1336,x1337) [Made: true]
  x1036 = FixAdd(x1035,Const(15)) [Made: true]
  x1337 = DelayLine(1,b913) [Made: true]
  x1411 = DelayLine(4,b1227) [Made: true]
  b1024 [Made: true]
  x1369 = DelayLine(7,x1108) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: true]
  x1105 = FixSLA(x1104,Const(4)) [Made: true]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1031 = FixSLA(x1030,Const(4)) [Made: true]
  x1315 = RegRead(x927) [Made: true]
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None) [Made: true]
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343))) [Made: true]
  b941 [Made: true]
  () [Made: false]
  x1179 = FixAdd(x1178,b1161) [Made: true]
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true)))) [Made: true]
  x1200 = RegRead(x879) [Made: true]
  x977 = FieldApply(x974,end) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  b1005 [Made: true]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1068 = CounterChainNew(List(x1067)) [Made: true]
  x994 = VecApply(x1345,0) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1073 = RegRead(x1055) [Made: true]
  x1142 = And(x1139,x1141) [Made: true]
  x878 = ArgInNew(Const(0)) [Made: false]
  x1305 = RegRead(x880) [Made: true]
  x1041 = DRAMAddress(x903) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  b1137 [Made: true]
  x1310 = RegRead(x879) [Made: true]
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1)) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1327 = FixSLA(x1037,Const(6)) [Made: true]
  x1342 = DelayLine(10,b941) [Made: true]
  b913 [Made: true]
  x1063 = FieldApply(x1058,size) [Made: true]
  x1354 = DelayLine(7,x1041) [Made: true]
  x1222 = UnitPipe(Set(),Block(Const(())),None) [Made: true]
  x930 = FixMin(Const(16),x929) [Made: true]
  x1196 = RegNew(Const(0)) [Made: true]
  x1001 = UnitPipe(Set(b925, b914),Block(Const(())),None) [Made: true]
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191) [Made: true]
  x1127 = RegWrite(x1121,x1126,Set()) [Made: true]
  x1391 = DelayLine(1,b1162) [Made: true]
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359))) [Made: true]
  x1359 = DelayLine(1,x1035) [Made: true]
  x1386 = DelayLine(7,b1157) [Made: true]
  x1366 = DelayLine(1,b1004) [Made: true]
  x1228 = RegRead(x1196) [Made: true]
  x1055 = RegNew(Const(0)) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1330 = FixSLA(x1104,Const(6)) [Made: true]
  x1323 = FixSLA(x946,Const(6)) [Made: true]
  x917 = RegRead(x880) [Made: true]
  x1313 = RegRead(x1056) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1191 = StreamInNew(BurstAckBus) [Made: true]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None) [Made: true]
  x949 = FixSub(x1322,x947) [Made: true]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: true]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None) [Made: true]
  x1319 = RegRead(x916) [Made: true]
  b969 [Made: true]
  x1347 = DelayLine(1,x994) [Made: true]
  x1013 = FixMin(Const(16),x1012) [Made: true]
  x1398 = DelayLine(10,b1162) [Made: true]
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None) [Made: true]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1100 = FixSub(x1328,x1098) [Made: true]
  x1232 = And(x1229,x1231) [Made: true]
  b924 [Made: true]
  x1373 = DelayLine(1,x1102) [Made: true]
  x1040 = FixToFix(x1326,TRUE,_64,_0) [Made: true]
  x1109 = FixAdd(x1107,x1369) [Made: true]
  x1334 = ParallelPipe(Set(),Block(Const(()))) [Made: true]
  b1136 [Made: true]
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None) [Made: true]
  x937 = StreamInNew(BurstDataBus()) [Made: true]
  x1383 = DelayLine(6,x1170) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: true]
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1)) [Made: true]
  x1183 = FixAdd(x1172,x1182) [Made: true]
  x1051 = CounterChainNew(List(x1050)) [Made: true]
  x981 = UnitPipe(Set(b969),Block(Const(())),None) [Made: true]
  x1169 = FixSLA(b1156,Const(4)) [Made: true]
  x1377 = DelayLine(2,x1142) [Made: true]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x956 = FixToFix(x1323,TRUE,_64,_0) [Made: true]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  b1119 [Made: true]
  x1394 = DelayLine(10,b1005) [Made: true]
  x1351 = DelayLine(1,b1004) [Made: true]
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348))) [Made: true]
  x1345 = DelayLine(1,x993) [Made: true]
  x988 = FixLeq(x987,b985) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1104 = FixDivSRA(x1103,Const(4)) [Made: true]
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  x920 = RegWrite(x916,x919,Set()) [Made: true]
  x942 = FixAdd(b924,b940) [Made: true]
  b925 [Made: true]
  x1306 = RegRead(x878) [Made: true]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1338 = DelayLine(8,x950) [Made: true]
  x1311 = RegRead(x916) [Made: true]
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1)) [Made: true]
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356))) [Made: true]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1387 = DelayLine(7,b914) [Made: true]
  x957 = DRAMAddress(x900) [Made: true]
  b1091 [Made: true]
  x1343 = DelayLine(1,x951) [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: true]
  x1042 = FixAdd(x1040,x1354) [Made: true]
  x952 = FixAdd(x951,Const(15)) [Made: true]
  x1355 = DelayLine(1,x1042) [Made: true]
  x1123 = RegNew(Const(0)) [Made: true]
  x1174 = FixAdd(x1169,b1166) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x1370 = DelayLine(1,x1109) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x916 = RegNew(Const(0)) [Made: true]
  x1365 = DelayLine(2,b1053) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1178 = FixSLA(b1166,Const(4)) [Made: true]
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1)) [Made: true]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  x1027 = RegRead(x879) [Made: true]
  b1195 [Made: true]
  x1407 = DelayLine(1,x1235) [Made: true]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1392 = DelayLine(1,b1157) [Made: true]
  x974 = VecApply(x973,0) [Made: true]
  x1012 = FixSub(x1011,b1004) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1350 = DelayLine(2,x991) [Made: true]
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1)) [Made: true]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1328 = FixFMA(x1093,x1367,x1366) [Made: true]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: true]
  x1064 = RegWrite(x1056,x1063,Set()) [Made: true]
  x1111 = DRAMIsAlloc(x906) [Made: true]
  b1227 [Made: true]
  x980 = RegWrite(x972,x979,Set()) [Made: true]
  x1138 = RegRead(x1121) [Made: true]
  x1118 = CounterChainNew(List(x1117)) [Made: true]
  x989 = RegRead(x971) [Made: true]
  x1397 = DelayLine(10,b1167) [Made: true]
  x1329 = FixSLA(x1097,Const(6)) [Made: true]
  x1160 = CounterChainNew(List(x1159)) [Made: true]
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365))) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1182 = FixMul(x1176,x1181) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x970 = RegNew(Const(0)) [Made: true]
  x1155 = CounterChainNew(List(x1154)) [Made: true]
  x1324 = FixSLA(x953,Const(6)) [Made: true]
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371))) [Made: true]
  x997 = FixAdd(x1346,x992) [Made: true]
  b985 [Made: true]
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1382 = DelayLine(7,b925) [Made: true]
  x1231 = FixLst(b1226,x1230) [Made: true]
  x1131 = RegWrite(x1123,x1130,Set()) [Made: true]
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1)) [Made: true]
  x1060 = RegWrite(x1054,x1059,Set()) [Made: true]
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1)) [Made: true]
  x984 = CounterChainNew(List(x983)) [Made: true]
  x911 = CounterNew(Const(0),x1305,Const(16),Const(1)) [Made: true]
  x1002 = CounterNew(Const(0),x1310,Const(16),Const(1)) [Made: true]
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1393 = DelayLine(1,b914) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x1318 = RegRead(x1010) [Made: true]
  x1086 = StreamOutNew(BurstCmdBus) [Made: true]
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1)) [Made: true]
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None) [Made: true]
  x921 = UnitPipe(Set(b914),Block(Const(())),None) [Made: true]
  x1054 = RegNew(Const(0)) [Made: true]
  x1170 = FixAdd(x1169,b1161) [Made: true]
  x1035 = FixAdd(x1033,x1353) [Made: true]
  x1071 = RegRead(x1054) [Made: true]
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None) [Made: true]
  x1026 = FixAdd(b913,b1024) [Made: true]
  b1167 [Made: true]
  x953 = FixDivSRA(x952,Const(4)) [Made: true]
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1135 = CounterChainNew(List(x1134)) [Made: true]
  x965 = FringeDenseLoad(x900,x935,x937) [Made: true]
  x1103 = FixAdd(x1102,Const(15)) [Made: true]
  x1219 = RegWrite(x1196,x1206,Set()) [Made: true]
  x1374 = DelayLine(2,x1100) [Made: true]
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1)) [Made: true]
  x975 = FieldApply(x974,start) [Made: true]
  x1389 = DelayLine(1,b925) [Made: true]
  x1125 = VecApply(x1124,0) [Made: true]
  x1388 = DelayLine(1,b1005) [Made: true]
  x958 = FixAdd(x956,x1339) [Made: true]
  x1403 = DelayLine(8,x1207) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  b1226 [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x936 = FIFONew(Const(16)) [Made: true]
  x1371 = DelayLine(10,b1092) [Made: true]
  x1312 = RegRead(x916) [Made: true]
  x1058 = VecApply(x1057,0) [Made: true]
  x1107 = FixToFix(x1329,TRUE,_64,_0) [Made: true]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  b1092 [Made: true]
  x1090 = CounterChainNew(List(x1089)) [Made: true]
  x919 = FixMin(Const(16),x918) [Made: true]
  x947 = FixSLA(x946,Const(4)) [Made: true]
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1)) [Made: true]
  x1356 = DelayLine(10,b1025) [Made: true]
  x979 = FieldApply(x974,size) [Made: true]
  b1194 [Made: true]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x900 = DRAMHostNew(List(x898, x899),Const(0)) [Made: false]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1)) [Made: true]
  x1011 = RegRead(x879) [Made: true]
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None) [Made: true]
  x1349 = DelayLine(2,b986) [Made: true]
  x990 = FixLst(b985,x989) [Made: true]
  x996 = FixSLA(b968,Const(4)) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x880 = ArgInNew(Const(0)) [Made: false]
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true)))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: true]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1307 = RegRead(x927) [Made: true]
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  x1339 = DelayLine(7,x957) [Made: true]
  b1162 [Made: true]
  x1325 = FixFMA(x1026,x1352,x1351) [Made: true]
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None) [Made: true]
  x1344 = DelayLine(2,x949) [Made: true]
  x943 = RegRead(x880) [Made: true]
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1)) [Made: true]
  x1381 = DelayLine(7,b1005) [Made: true]
  x932 = UnitPipe(Set(b925, b914),Block(Const(())),None) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371))) [Made: true]
  x912 = CounterChainNew(List(x911)) [Made: true]
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1)) [Made: true]
  x1198 = RegNew(Const(0)) [Made: true]
  x1396 = DelayLine(9,x1170) [Made: true]
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true)))) [Made: true]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1044 = DRAMIsAlloc(x903) [Made: true]
  x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1176 = VecApply(x1175,0) [Made: true]
  b986 [Made: true]
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373))) [Made: true]
  x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1250 = UnrolledForeach(Set(b914),x923,Block(Const(())),List(List(b924)),List(List(b925)),None) [Made: true]
  x1102 = FixAdd(x1100,x1368) [Made: true]
  x922 = CounterNew(Const(0),x1306,Const(16),Const(1)) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1034 = RegRead(x1010) [Made: true]
  b1166 [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x927 = RegNew(Const(0)) [Made: true]
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1)) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  x939 = CounterChainNew(List(x938)) [Made: true]
  x1340 = DelayLine(1,x958) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  b968 [Made: true]
  x1181 = VecApply(x1180,0) [Made: true]
  x1049 = FringeDenseLoad(x903,x1019,x1021) [Made: true]
  x1003 = CounterChainNew(List(x1002)) [Made: true]
  b1025 [Made: true]
  b1070 [Made: true]
  b1156 [Made: true]
  x1225 = CounterChainNew(List(x1224)) [Made: true]
  x1400 = DelayLine(10,b914) [Made: true]
  x971 = RegNew(Const(0)) [Made: true]
  x954 = FixSLA(x953,Const(4)) [Made: true]
  x1368 = DelayLine(8,x1101) [Made: true]
  x1230 = RegRead(x1197) [Made: true]
  x1098 = FixSLA(x1097,Const(4)) [Made: true]
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969))) [Made: true]
  b1053 [Made: true]
  x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None) [Made: true]
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None) [Made: true]
  x1038 = FixSLA(x1037,Const(4)) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1317 = RegRead(x927) [Made: true]
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x951 = FixAdd(x949,x1338) [Made: true]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406))) [Made: true]
  x1336 = DelayLine(1,x943) [Made: true]
  x1220 = RegWrite(x1197,x1208,Set()) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1358 = DelayLine(2,x1033) [Made: true]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1023 = CounterChainNew(List(x1022)) [Made: true]
  x1221 = RegWrite(x1198,x1211,Set()) [Made: true]
  x1353 = DelayLine(8,x1034) [Made: true]
  b1052 [Made: true]
  x1094 = RegRead(x879) [Made: true]
  x978 = RegWrite(x971,x977,Set()) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1372 = DelayLine(10,x1111) [Made: true]
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411))) [Made: true]
  x991 = And(x988,x990) [Made: true]
  x1316 = RegRead(x1123) [Made: true]
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None) [Made: true]
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x931 = RegWrite(x927,x930,Set()) [Made: true]
  b1157 [Made: true]
  x1321 = RegRead(x1198) [Made: true]
  x976 = RegWrite(x970,x975,Set()) [Made: true]
  x903 = DRAMHostNew(List(x901, x902),Const(0)) [Made: false]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1126 = FieldApply(x1125,start) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: true]
  x1010 = RegNew(Const(0)) [Made: true]
  x1390 = DelayLine(1,b1167) [Made: true]
  x1108 = DRAMAddress(x906) [Made: true]
  x1326 = FixSLA(x1030,Const(6)) [Made: true]
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342))) [Made: true]
  x1385 = DelayLine(7,b1162) [Made: true]
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342))) [Made: true]
  x1341 = DelayLine(10,x960) [Made: true]
  x1062 = RegWrite(x1055,x1061,Set()) [Made: true]
  x946 = FixDivSRA(x1322,Const(4)) [Made: true]
  x1101 = RegRead(x1010) [Made: true]
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set())) [Made: true]
  x1030 = FixDivSRA(x1325,Const(4)) [Made: true]
  b914 [Made: true]
  x929 = FixSub(x928,b924) [Made: true]
  x1308 = RegRead(x927) [Made: true]
  x1193 = CounterChainNew(List(x1192)) [Made: true]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1309 = RegRead(x972) [Made: true]
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356))) [Made: true]
  b1161 [Made: true]
  x1116 = FringeDenseLoad(x906,x1086,x1088) [Made: true]
  x1348 = DelayLine(2,b969) [Made: true]
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None) [Made: true]
  x967 = CounterChainNew(List(x966)) [Made: true]
  x950 = RegRead(x916) [Made: true]
  x1097 = FixDivSRA(x1328,Const(4)) [Made: true]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1395 = DelayLine(10,b925) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x918 = FixSub(x917,b913) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  x1314 = RegRead(x927) [Made: true]
  x1335 = UnrolledForeach(Set(b925, b914),x1003,Block(Const(())),List(List(b1004)),List(List(b1005)),None) [Made: true]
  x1172 = VecApply(x1171,0) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1056 = RegNew(Const(0)) [Made: true]
  x1033 = FixSub(x1325,x1031) [Made: true]
  x1197 = RegNew(Const(0)) [Made: true]
  x960 = DRAMIsAlloc(x900) [Made: true]
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None) [Made: true]
  x1165 = CounterChainNew(List(x1164)) [Made: true]
  x1346 = DelayLine(1,x996) [Made: true]
  x928 = RegRead(x878) [Made: true]
  x1093 = FixAdd(b924,b1091) [Made: true]
  x1236 = FixAdd(x1407,x1233) [Made: true]
  x987 = RegRead(x970) [Made: true]
  x1352 = DelayLine(1,x1027) [Made: true]
  x1129 = RegWrite(x1122,x1128,Set()) [Made: true]
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None) [Made: true]
  x1384 = DelayLine(7,b1167) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  x1019 = StreamOutNew(BurstCmdBus) [Made: true]
  x1357 = DelayLine(10,x1044) [Made: true]
  x992 = FixSub(b985,x987) [Made: true]
  b1004 [Made: true]
  x1399 = DelayLine(10,b1157) [Made: true]
  b1120 [Made: true]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1320 = RegRead(x927) [Made: true]
  x1367 = DelayLine(1,x1094) [Made: true]
  b940 [Made: true]
  x935 = StreamOutNew(BurstCmdBus) [Made: true]
  x923 = CounterChainNew(List(x922)) [Made: true]
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x1037 = FixDivSRA(x1036,Const(4)) [Made: true]
  x1088 = StreamInNew(BurstDataBus()) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
  b1069 [Made: true]
  x1014 = RegWrite(x1010,x1013,Set()) [Made: true]
  x972 = RegNew(Const(0)) [Made: true]
Inputs for x810 are (Set(x878, x879, x906, x900, x880, x903) ++ Set() ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088) ++ Set()) diff Set(x1305, x911, x912, x1251) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1322 = FixFMA(x942,x1336,x1337)
  x1036 = FixAdd(x1035,Const(15))
  x1337 = DelayLine(1,b913)
  x1411 = DelayLine(4,b1227)
  x1369 = DelayLine(7,x1108)
  x1190 = StreamOutNew(BurstFullDataBus())
  x1105 = FixSLA(x1104,Const(4))
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1031 = FixSLA(x1030,Const(4))
  x1315 = RegRead(x927)
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343)))
  x1179 = FixAdd(x1178,b1161)
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true))))
  x1200 = RegRead(x879)
  x977 = FieldApply(x974,end)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1068 = CounterChainNew(List(x1067))
  x994 = VecApply(x1345,0)
  x1401 = DelayLine(1,b1004)
  x1073 = RegRead(x1055)
  x1142 = And(x1139,x1141)
  x1305 = RegRead(x880)
  x1041 = DRAMAddress(x903)
  x1078 = VecApply(x1360,0)
  x1310 = RegRead(x879)
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1))
  x1233 = FixSub(b1226,x1228)
  x1327 = FixSLA(x1037,Const(6))
  x1342 = DelayLine(10,b941)
  x1063 = FieldApply(x1058,size)
  x1354 = DelayLine(7,x1041)
  x1222 = UnitPipe(Set(),Block(Const(())),None)
  x930 = FixMin(Const(16),x929)
  x1196 = RegNew(Const(0))
  x1001 = UnitPipe(Set(b925, b914),Block(Const(())),None)
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191)
  x1127 = RegWrite(x1121,x1126,Set())
  x1391 = DelayLine(1,b1162)
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359)))
  x1359 = DelayLine(1,x1035)
  x1386 = DelayLine(7,b1157)
  x1366 = DelayLine(1,b1004)
  x1228 = RegRead(x1196)
  x1055 = RegNew(Const(0))
  x1409 = DelayLine(2,b1227)
  x1330 = FixSLA(x1104,Const(6))
  x1323 = FixSLA(x946,Const(6))
  x917 = RegRead(x880)
  x1313 = RegRead(x1056)
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1191 = StreamInNew(BurstAckBus)
  x1059 = FieldApply(x1058,start)
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
  x949 = FixSub(x1322,x947)
  x1379 = DelayLine(1,x1145)
  x1087 = FIFONew(Const(16))
  x1147 = FixSLA(b1119,Const(4))
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None)
  x1319 = RegRead(x916)
  x1347 = DelayLine(1,x994)
  x1013 = FixMin(Const(16),x1012)
  x1398 = DelayLine(10,b1162)
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None)
  x1362 = DelayLine(1,x1078)
  x1100 = FixSub(x1328,x1098)
  x1232 = And(x1229,x1231)
  x1373 = DelayLine(1,x1102)
  x1040 = FixToFix(x1326,TRUE,_64,_0)
  x1109 = FixAdd(x1107,x1369)
  x1334 = ParallelPipe(Set(),Block(Const(())))
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
  x937 = StreamInNew(BurstDataBus())
  x1383 = DelayLine(6,x1170)
  x1020 = FIFONew(Const(16))
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1))
  x1183 = FixAdd(x1172,x1182)
  x1051 = CounterChainNew(List(x1050))
  x981 = UnitPipe(Set(b969),Block(Const(())),None)
  x1169 = FixSLA(b1156,Const(4))
  x1377 = DelayLine(2,x1142)
  x1215 = FixAdd(x1213,x1404)
  x956 = FixToFix(x1323,TRUE,_64,_0)
  x1072 = FixLeq(x1071,b1069)
  x1394 = DelayLine(10,b1005)
  x1351 = DelayLine(1,b1004)
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348)))
  x1345 = DelayLine(1,x993)
  x988 = FixLeq(x987,b985)
  x1405 = DelayLine(1,x1215)
  x1104 = FixDivSRA(x1103,Const(4))
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1074 = FixLst(b1069,x1073)
  x1206 = FixSub(x1331,x1204)
  x920 = RegWrite(x916,x919,Set())
  x942 = FixAdd(b924,b940)
  x1306 = RegRead(x878)
  x1199 = FixAdd(b924,b1194)
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1338 = DelayLine(8,x950)
  x1311 = RegRead(x916)
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1))
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356)))
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1387 = DelayLine(7,b914)
  x957 = DRAMAddress(x900)
  x1343 = DelayLine(1,x951)
  x1021 = StreamInNew(BurstDataBus())
  x1042 = FixAdd(x1040,x1354)
  x952 = FixAdd(x951,Const(15))
  x1355 = DelayLine(1,x1042)
  x1123 = RegNew(Const(0))
  x1174 = FixAdd(x1169,b1166)
  x1217 = DRAMIsAlloc(x906)
  x1370 = DelayLine(1,x1109)
  x1238 = VecApply(x1237,0)
  x916 = RegNew(Const(0))
  x1365 = DelayLine(2,b1053)
  x1178 = FixSLA(b1166,Const(4))
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1))
  x1210 = FixDivSRA(x1209,Const(4))
  x1027 = RegRead(x879)
  x1407 = DelayLine(1,x1235)
  x1128 = FieldApply(x1125,end)
  x1392 = DelayLine(1,b1157)
  x974 = VecApply(x973,0)
  x1012 = FixSub(x1011,b1004)
  x1402 = DelayLine(1,x1200)
  x1360 = DelayLine(1,x1077)
  x1350 = DelayLine(2,x991)
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1))
  x1143 = FixSub(b1136,x1138)
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1328 = FixFMA(x1093,x1367,x1366)
  x1375 = DelayLine(1,x1144)
  x1121 = RegNew(Const(0))
  x1064 = RegWrite(x1056,x1063,Set())
  x1111 = DRAMIsAlloc(x906)
  x980 = RegWrite(x972,x979,Set())
  x1138 = RegRead(x1121)
  x1118 = CounterChainNew(List(x1117))
  x989 = RegRead(x971)
  x1397 = DelayLine(10,b1167)
  x1329 = FixSLA(x1097,Const(6))
  x1160 = CounterChainNew(List(x1159))
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1182 = FixMul(x1176,x1181)
  x1075 = And(x1072,x1074)
  x1214 = DRAMAddress(x906)
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1207 = RegRead(x1010)
  x970 = RegNew(Const(0))
  x1155 = CounterChainNew(List(x1154))
  x1324 = FixSLA(x953,Const(6))
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371)))
  x997 = FixAdd(x1346,x992)
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1382 = DelayLine(7,b925)
  x1231 = FixLst(b1226,x1230)
  x1131 = RegWrite(x1123,x1130,Set())
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1))
  x1060 = RegWrite(x1054,x1059,Set())
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1))
  x984 = CounterChainNew(List(x983))
  x911 = CounterNew(Const(0),x1305,Const(16),Const(1))
  x1002 = CounterNew(Const(0),x1310,Const(16),Const(1))
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1393 = DelayLine(1,b914)
  x1333 = FixSLA(x1210,Const(6))
  x1318 = RegRead(x1010)
  x1086 = StreamOutNew(BurstCmdBus)
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1))
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
  x921 = UnitPipe(Set(b914),Block(Const(())),None)
  x1054 = RegNew(Const(0))
  x1170 = FixAdd(x1169,b1161)
  x1035 = FixAdd(x1033,x1353)
  x1071 = RegRead(x1054)
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None)
  x1026 = FixAdd(b913,b1024)
  x953 = FixDivSRA(x952,Const(4))
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1135 = CounterChainNew(List(x1134))
  x965 = FringeDenseLoad(x900,x935,x937)
  x1251 = UnrolledForeach(Set(),x912,Block(Const(())),List(List(b913)),List(List(b914)),None)
  x1103 = FixAdd(x1102,Const(15))
  x1219 = RegWrite(x1196,x1206,Set())
  x1374 = DelayLine(2,x1100)
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1))
  x975 = FieldApply(x974,start)
  x1389 = DelayLine(1,b925)
  x1125 = VecApply(x1124,0)
  x1388 = DelayLine(1,b1005)
  x958 = FixAdd(x956,x1339)
  x1403 = DelayLine(8,x1207)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1139 = FixLeq(x1138,b1136)
  x936 = FIFONew(Const(16))
  x1371 = DelayLine(10,b1092)
  x1312 = RegRead(x916)
  x1058 = VecApply(x1057,0)
  x1107 = FixToFix(x1329,TRUE,_64,_0)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1332 = FixSLA(x1203,Const(6))
  x1090 = CounterChainNew(List(x1089))
  x919 = FixMin(Const(16),x918)
  x947 = FixSLA(x946,Const(4))
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1))
  x1356 = DelayLine(10,b1025)
  x979 = FieldApply(x974,size)
  x1209 = FixAdd(x1208,Const(15))
  x1408 = DelayLine(2,x1232)
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1))
  x1011 = RegRead(x879)
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None)
  x1349 = DelayLine(2,b986)
  x990 = FixLst(b985,x989)
  x996 = FixSLA(b968,Const(4))
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true))))
  x1122 = RegNew(Const(0))
  x1376 = DelayLine(1,x1147)
  x1307 = RegRead(x927)
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1080 = FixSLA(b1052,Const(4))
  x1339 = DelayLine(7,x957)
  x1325 = FixFMA(x1026,x1352,x1351)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None)
  x1344 = DelayLine(2,x949)
  x943 = RegRead(x880)
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1))
  x1381 = DelayLine(7,b1005)
  x932 = UnitPipe(Set(b925, b914),Block(Const(())),None)
  x1061 = FieldApply(x1058,end)
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371)))
  x912 = CounterChainNew(List(x911))
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]])
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1))
  x1198 = RegNew(Const(0))
  x1396 = DelayLine(9,x1170)
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true))))
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1044 = DRAMIsAlloc(x903)
  x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1176 = VecApply(x1175,0)
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373)))
  x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None)
  x1364 = DelayLine(2,b1070)
  x1250 = UnrolledForeach(Set(b914),x923,Block(Const(())),List(List(b924)),List(List(b925)),None)
  x1102 = FixAdd(x1100,x1368)
  x922 = CounterNew(Const(0),x1306,Const(16),Const(1))
  x1076 = FixSub(b1069,x1071)
  x1034 = RegRead(x1010)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x927 = RegNew(Const(0))
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1))
  x1081 = FixAdd(x1361,x1076)
  x939 = CounterChainNew(List(x938))
  x1340 = DelayLine(1,x958)
  x1145 = VecApply(x1375,0)
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1181 = VecApply(x1180,0)
  x1049 = FringeDenseLoad(x903,x1019,x1021)
  x1003 = CounterChainNew(List(x1002))
  x1225 = CounterChainNew(List(x1224))
  x1400 = DelayLine(10,b914)
  x971 = RegNew(Const(0))
  x954 = FixSLA(x953,Const(4))
  x1368 = DelayLine(8,x1101)
  x1230 = RegRead(x1197)
  x1098 = FixSLA(x1097,Const(4))
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969)))
  x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None)
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None)
  x1038 = FixSLA(x1037,Const(4))
  x1235 = FixSLA(b1194,Const(4))
  x1317 = RegRead(x927)
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x951 = FixAdd(x949,x1338)
  x1130 = FieldApply(x1125,size)
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1336 = DelayLine(1,x943)
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1358 = DelayLine(2,x1033)
  x1141 = FixLst(b1136,x1140)
  x1023 = CounterChainNew(List(x1022))
  x1221 = RegWrite(x1198,x1211,Set())
  x1353 = DelayLine(8,x1034)
  x1094 = RegRead(x879)
  x978 = RegWrite(x971,x977,Set())
  x1140 = RegRead(x1122)
  x1372 = DelayLine(10,x1111)
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x991 = And(x988,x990)
  x1316 = RegRead(x1123)
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None)
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x931 = RegWrite(x927,x930,Set())
  x1321 = RegRead(x1198)
  x976 = RegWrite(x970,x975,Set())
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1126 = FieldApply(x1125,start)
  x1189 = StreamOutNew(BurstCmdBus)
  x1010 = RegNew(Const(0))
  x1390 = DelayLine(1,b1167)
  x1108 = DRAMAddress(x906)
  x1326 = FixSLA(x1030,Const(6))
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342)))
  x1385 = DelayLine(7,b1162)
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342)))
  x1341 = DelayLine(10,x960)
  x1062 = RegWrite(x1055,x1061,Set())
  x946 = FixDivSRA(x1322,Const(4))
  x1101 = RegRead(x1010)
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set()))
  x1030 = FixDivSRA(x1325,Const(4))
  x929 = FixSub(x928,b924)
  x1308 = RegRead(x927)
  x1193 = CounterChainNew(List(x1192))
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1309 = RegRead(x972)
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356)))
  x1116 = FringeDenseLoad(x906,x1086,x1088)
  x1348 = DelayLine(2,b969)
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None)
  x967 = CounterChainNew(List(x966))
  x950 = RegRead(x916)
  x1097 = FixDivSRA(x1328,Const(4))
  x1229 = FixLeq(x1228,b1226)
  x1395 = DelayLine(10,b925)
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x918 = FixSub(x917,b913)
  x1363 = DelayLine(2,x1075)
  x1314 = RegRead(x927)
  x1335 = UnrolledForeach(Set(b925, b914),x1003,Block(Const(())),List(List(b1004)),List(List(b1005)),None)
  x1172 = VecApply(x1171,0)
  x1410 = DelayLine(4,x1232)
  x1056 = RegNew(Const(0))
  x1033 = FixSub(x1325,x1031)
  x1197 = RegNew(Const(0))
  x960 = DRAMIsAlloc(x900)
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
  x1165 = CounterChainNew(List(x1164))
  x1346 = DelayLine(1,x996)
  x928 = RegRead(x878)
  x1093 = FixAdd(b924,b1091)
  x1236 = FixAdd(x1407,x1233)
  x987 = RegRead(x970)
  x1352 = DelayLine(1,x1027)
  x1129 = RegWrite(x1122,x1128,Set())
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None)
  x1384 = DelayLine(7,b1167)
  x1378 = DelayLine(2,b1137)
  x1019 = StreamOutNew(BurstCmdBus)
  x1357 = DelayLine(10,x1044)
  x992 = FixSub(b985,x987)
  x1399 = DelayLine(10,b1157)
  x1331 = FixFMA(x1199,x1402,x1401)
  x1320 = RegRead(x927)
  x1367 = DelayLine(1,x1094)
  x935 = StreamOutNew(BurstCmdBus)
  x923 = CounterChainNew(List(x922))
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1037 = FixDivSRA(x1036,Const(4))
  x1088 = StreamInNew(BurstDataBus())
  x1204 = FixSLA(x1203,Const(4))
  x1014 = RegWrite(x1010,x1013,Set())
  x972 = RegNew(Const(0))
Used:
  x1322 = FixFMA(x942,x1336,x1337) [Made: true]
  x1036 = FixAdd(x1035,Const(15)) [Made: true]
  x1337 = DelayLine(1,b913) [Made: true]
  x1411 = DelayLine(4,b1227) [Made: true]
  b1024 [Made: true]
  x1369 = DelayLine(7,x1108) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: true]
  x1105 = FixSLA(x1104,Const(4)) [Made: true]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1031 = FixSLA(x1030,Const(4)) [Made: true]
  x1315 = RegRead(x927) [Made: true]
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None) [Made: true]
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343))) [Made: true]
  b941 [Made: true]
  () [Made: false]
  x1179 = FixAdd(x1178,b1161) [Made: true]
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true)))) [Made: true]
  x1200 = RegRead(x879) [Made: true]
  x977 = FieldApply(x974,end) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  b1005 [Made: true]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1068 = CounterChainNew(List(x1067)) [Made: true]
  x994 = VecApply(x1345,0) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1073 = RegRead(x1055) [Made: true]
  x1142 = And(x1139,x1141) [Made: true]
  x878 = ArgInNew(Const(0)) [Made: false]
  x1305 = RegRead(x880) [Made: true]
  x1041 = DRAMAddress(x903) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  b1137 [Made: true]
  x1310 = RegRead(x879) [Made: true]
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1)) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1327 = FixSLA(x1037,Const(6)) [Made: true]
  x1342 = DelayLine(10,b941) [Made: true]
  b913 [Made: true]
  x1063 = FieldApply(x1058,size) [Made: true]
  x1354 = DelayLine(7,x1041) [Made: true]
  x1222 = UnitPipe(Set(),Block(Const(())),None) [Made: true]
  x930 = FixMin(Const(16),x929) [Made: true]
  x1196 = RegNew(Const(0)) [Made: true]
  x1001 = UnitPipe(Set(b925, b914),Block(Const(())),None) [Made: true]
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191) [Made: true]
  x1127 = RegWrite(x1121,x1126,Set()) [Made: true]
  x1391 = DelayLine(1,b1162) [Made: true]
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359))) [Made: true]
  x1359 = DelayLine(1,x1035) [Made: true]
  x1386 = DelayLine(7,b1157) [Made: true]
  x1366 = DelayLine(1,b1004) [Made: true]
  x1228 = RegRead(x1196) [Made: true]
  x1055 = RegNew(Const(0)) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1330 = FixSLA(x1104,Const(6)) [Made: true]
  x1323 = FixSLA(x946,Const(6)) [Made: true]
  x917 = RegRead(x880) [Made: true]
  x1313 = RegRead(x1056) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1191 = StreamInNew(BurstAckBus) [Made: true]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None) [Made: true]
  x949 = FixSub(x1322,x947) [Made: true]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: true]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None) [Made: true]
  x1319 = RegRead(x916) [Made: true]
  b969 [Made: true]
  x1347 = DelayLine(1,x994) [Made: true]
  x1013 = FixMin(Const(16),x1012) [Made: true]
  x1398 = DelayLine(10,b1162) [Made: true]
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None) [Made: true]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1100 = FixSub(x1328,x1098) [Made: true]
  x1232 = And(x1229,x1231) [Made: true]
  b924 [Made: true]
  x1373 = DelayLine(1,x1102) [Made: true]
  x1040 = FixToFix(x1326,TRUE,_64,_0) [Made: true]
  x1109 = FixAdd(x1107,x1369) [Made: true]
  x1334 = ParallelPipe(Set(),Block(Const(()))) [Made: true]
  b1136 [Made: true]
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None) [Made: true]
  x937 = StreamInNew(BurstDataBus()) [Made: true]
  x1383 = DelayLine(6,x1170) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: true]
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1)) [Made: true]
  x1183 = FixAdd(x1172,x1182) [Made: true]
  x1051 = CounterChainNew(List(x1050)) [Made: true]
  x981 = UnitPipe(Set(b969),Block(Const(())),None) [Made: true]
  x1169 = FixSLA(b1156,Const(4)) [Made: true]
  x1377 = DelayLine(2,x1142) [Made: true]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x956 = FixToFix(x1323,TRUE,_64,_0) [Made: true]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  b1119 [Made: true]
  x1394 = DelayLine(10,b1005) [Made: true]
  x1351 = DelayLine(1,b1004) [Made: true]
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348))) [Made: true]
  x1345 = DelayLine(1,x993) [Made: true]
  x988 = FixLeq(x987,b985) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1104 = FixDivSRA(x1103,Const(4)) [Made: true]
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  x920 = RegWrite(x916,x919,Set()) [Made: true]
  x942 = FixAdd(b924,b940) [Made: true]
  b925 [Made: true]
  x1306 = RegRead(x878) [Made: true]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1338 = DelayLine(8,x950) [Made: true]
  x1311 = RegRead(x916) [Made: true]
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1)) [Made: true]
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356))) [Made: true]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1387 = DelayLine(7,b914) [Made: true]
  x957 = DRAMAddress(x900) [Made: true]
  b1091 [Made: true]
  x1343 = DelayLine(1,x951) [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: true]
  x1042 = FixAdd(x1040,x1354) [Made: true]
  x952 = FixAdd(x951,Const(15)) [Made: true]
  x1355 = DelayLine(1,x1042) [Made: true]
  x1123 = RegNew(Const(0)) [Made: true]
  x1174 = FixAdd(x1169,b1166) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x1370 = DelayLine(1,x1109) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x916 = RegNew(Const(0)) [Made: true]
  x1365 = DelayLine(2,b1053) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1178 = FixSLA(b1166,Const(4)) [Made: true]
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1)) [Made: true]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  x1027 = RegRead(x879) [Made: true]
  b1195 [Made: true]
  x1407 = DelayLine(1,x1235) [Made: true]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1392 = DelayLine(1,b1157) [Made: true]
  x974 = VecApply(x973,0) [Made: true]
  x1012 = FixSub(x1011,b1004) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1350 = DelayLine(2,x991) [Made: true]
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1)) [Made: true]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1328 = FixFMA(x1093,x1367,x1366) [Made: true]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: true]
  x1064 = RegWrite(x1056,x1063,Set()) [Made: true]
  x1111 = DRAMIsAlloc(x906) [Made: true]
  b1227 [Made: true]
  x980 = RegWrite(x972,x979,Set()) [Made: true]
  x1138 = RegRead(x1121) [Made: true]
  x1118 = CounterChainNew(List(x1117)) [Made: true]
  x989 = RegRead(x971) [Made: true]
  x1397 = DelayLine(10,b1167) [Made: true]
  x1329 = FixSLA(x1097,Const(6)) [Made: true]
  x1160 = CounterChainNew(List(x1159)) [Made: true]
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365))) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1182 = FixMul(x1176,x1181) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x970 = RegNew(Const(0)) [Made: true]
  x1155 = CounterChainNew(List(x1154)) [Made: true]
  x1324 = FixSLA(x953,Const(6)) [Made: true]
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371))) [Made: true]
  x997 = FixAdd(x1346,x992) [Made: true]
  b985 [Made: true]
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1382 = DelayLine(7,b925) [Made: true]
  x1231 = FixLst(b1226,x1230) [Made: true]
  x1131 = RegWrite(x1123,x1130,Set()) [Made: true]
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1)) [Made: true]
  x1060 = RegWrite(x1054,x1059,Set()) [Made: true]
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1)) [Made: true]
  x984 = CounterChainNew(List(x983)) [Made: true]
  x911 = CounterNew(Const(0),x1305,Const(16),Const(1)) [Made: true]
  x1002 = CounterNew(Const(0),x1310,Const(16),Const(1)) [Made: true]
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1393 = DelayLine(1,b914) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x1318 = RegRead(x1010) [Made: true]
  x1086 = StreamOutNew(BurstCmdBus) [Made: true]
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1)) [Made: true]
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None) [Made: true]
  x921 = UnitPipe(Set(b914),Block(Const(())),None) [Made: true]
  x1054 = RegNew(Const(0)) [Made: true]
  x1170 = FixAdd(x1169,b1161) [Made: true]
  x1035 = FixAdd(x1033,x1353) [Made: true]
  x1071 = RegRead(x1054) [Made: true]
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None) [Made: true]
  x1026 = FixAdd(b913,b1024) [Made: true]
  b1167 [Made: true]
  x953 = FixDivSRA(x952,Const(4)) [Made: true]
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1135 = CounterChainNew(List(x1134)) [Made: true]
  x965 = FringeDenseLoad(x900,x935,x937) [Made: true]
  x1103 = FixAdd(x1102,Const(15)) [Made: true]
  x1219 = RegWrite(x1196,x1206,Set()) [Made: true]
  x1374 = DelayLine(2,x1100) [Made: true]
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1)) [Made: true]
  x975 = FieldApply(x974,start) [Made: true]
  x1389 = DelayLine(1,b925) [Made: true]
  x1125 = VecApply(x1124,0) [Made: true]
  x1388 = DelayLine(1,b1005) [Made: true]
  x958 = FixAdd(x956,x1339) [Made: true]
  x1403 = DelayLine(8,x1207) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  b1226 [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x936 = FIFONew(Const(16)) [Made: true]
  x1371 = DelayLine(10,b1092) [Made: true]
  x1312 = RegRead(x916) [Made: true]
  x1058 = VecApply(x1057,0) [Made: true]
  x1107 = FixToFix(x1329,TRUE,_64,_0) [Made: true]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  b1092 [Made: true]
  x1090 = CounterChainNew(List(x1089)) [Made: true]
  x919 = FixMin(Const(16),x918) [Made: true]
  x947 = FixSLA(x946,Const(4)) [Made: true]
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1)) [Made: true]
  x1356 = DelayLine(10,b1025) [Made: true]
  x979 = FieldApply(x974,size) [Made: true]
  b1194 [Made: true]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x900 = DRAMHostNew(List(x898, x899),Const(0)) [Made: false]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1)) [Made: true]
  x1011 = RegRead(x879) [Made: true]
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None) [Made: true]
  x1349 = DelayLine(2,b986) [Made: true]
  x990 = FixLst(b985,x989) [Made: true]
  x996 = FixSLA(b968,Const(4)) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x880 = ArgInNew(Const(0)) [Made: false]
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true)))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: true]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1307 = RegRead(x927) [Made: true]
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  x1339 = DelayLine(7,x957) [Made: true]
  b1162 [Made: true]
  x1325 = FixFMA(x1026,x1352,x1351) [Made: true]
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None) [Made: true]
  x1344 = DelayLine(2,x949) [Made: true]
  x943 = RegRead(x880) [Made: true]
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1)) [Made: true]
  x1381 = DelayLine(7,b1005) [Made: true]
  x932 = UnitPipe(Set(b925, b914),Block(Const(())),None) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371))) [Made: true]
  x912 = CounterChainNew(List(x911)) [Made: true]
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1)) [Made: true]
  x1198 = RegNew(Const(0)) [Made: true]
  x1396 = DelayLine(9,x1170) [Made: true]
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true)))) [Made: true]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1044 = DRAMIsAlloc(x903) [Made: true]
  x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1176 = VecApply(x1175,0) [Made: true]
  b986 [Made: true]
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373))) [Made: true]
  x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1250 = UnrolledForeach(Set(b914),x923,Block(Const(())),List(List(b924)),List(List(b925)),None) [Made: true]
  x1102 = FixAdd(x1100,x1368) [Made: true]
  x922 = CounterNew(Const(0),x1306,Const(16),Const(1)) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1034 = RegRead(x1010) [Made: true]
  b1166 [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x927 = RegNew(Const(0)) [Made: true]
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1)) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  x939 = CounterChainNew(List(x938)) [Made: true]
  x1340 = DelayLine(1,x958) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  b968 [Made: true]
  x1181 = VecApply(x1180,0) [Made: true]
  x1049 = FringeDenseLoad(x903,x1019,x1021) [Made: true]
  x1003 = CounterChainNew(List(x1002)) [Made: true]
  b1025 [Made: true]
  b1070 [Made: true]
  b1156 [Made: true]
  x1225 = CounterChainNew(List(x1224)) [Made: true]
  x1400 = DelayLine(10,b914) [Made: true]
  x971 = RegNew(Const(0)) [Made: true]
  x954 = FixSLA(x953,Const(4)) [Made: true]
  x1368 = DelayLine(8,x1101) [Made: true]
  x1230 = RegRead(x1197) [Made: true]
  x1098 = FixSLA(x1097,Const(4)) [Made: true]
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969))) [Made: true]
  b1053 [Made: true]
  x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None) [Made: true]
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None) [Made: true]
  x1038 = FixSLA(x1037,Const(4)) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1317 = RegRead(x927) [Made: true]
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x951 = FixAdd(x949,x1338) [Made: true]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406))) [Made: true]
  x1336 = DelayLine(1,x943) [Made: true]
  x1220 = RegWrite(x1197,x1208,Set()) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1358 = DelayLine(2,x1033) [Made: true]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1023 = CounterChainNew(List(x1022)) [Made: true]
  x1221 = RegWrite(x1198,x1211,Set()) [Made: true]
  x1353 = DelayLine(8,x1034) [Made: true]
  b1052 [Made: true]
  x1094 = RegRead(x879) [Made: true]
  x978 = RegWrite(x971,x977,Set()) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1372 = DelayLine(10,x1111) [Made: true]
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411))) [Made: true]
  x991 = And(x988,x990) [Made: true]
  x1316 = RegRead(x1123) [Made: true]
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None) [Made: true]
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x931 = RegWrite(x927,x930,Set()) [Made: true]
  b1157 [Made: true]
  x1321 = RegRead(x1198) [Made: true]
  x976 = RegWrite(x970,x975,Set()) [Made: true]
  x903 = DRAMHostNew(List(x901, x902),Const(0)) [Made: false]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1126 = FieldApply(x1125,start) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: true]
  x1010 = RegNew(Const(0)) [Made: true]
  x1390 = DelayLine(1,b1167) [Made: true]
  x1108 = DRAMAddress(x906) [Made: true]
  x1326 = FixSLA(x1030,Const(6)) [Made: true]
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342))) [Made: true]
  x1385 = DelayLine(7,b1162) [Made: true]
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342))) [Made: true]
  x1341 = DelayLine(10,x960) [Made: true]
  x1062 = RegWrite(x1055,x1061,Set()) [Made: true]
  x946 = FixDivSRA(x1322,Const(4)) [Made: true]
  x1101 = RegRead(x1010) [Made: true]
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set())) [Made: true]
  x1030 = FixDivSRA(x1325,Const(4)) [Made: true]
  b914 [Made: true]
  x929 = FixSub(x928,b924) [Made: true]
  x1308 = RegRead(x927) [Made: true]
  x1193 = CounterChainNew(List(x1192)) [Made: true]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1309 = RegRead(x972) [Made: true]
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356))) [Made: true]
  b1161 [Made: true]
  x1116 = FringeDenseLoad(x906,x1086,x1088) [Made: true]
  x1348 = DelayLine(2,b969) [Made: true]
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None) [Made: true]
  x967 = CounterChainNew(List(x966)) [Made: true]
  x950 = RegRead(x916) [Made: true]
  x1097 = FixDivSRA(x1328,Const(4)) [Made: true]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1395 = DelayLine(10,b925) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x918 = FixSub(x917,b913) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  x1314 = RegRead(x927) [Made: true]
  x1335 = UnrolledForeach(Set(b925, b914),x1003,Block(Const(())),List(List(b1004)),List(List(b1005)),None) [Made: true]
  x1172 = VecApply(x1171,0) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1056 = RegNew(Const(0)) [Made: true]
  x1033 = FixSub(x1325,x1031) [Made: true]
  x1197 = RegNew(Const(0)) [Made: true]
  x960 = DRAMIsAlloc(x900) [Made: true]
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None) [Made: true]
  x1165 = CounterChainNew(List(x1164)) [Made: true]
  x1346 = DelayLine(1,x996) [Made: true]
  x928 = RegRead(x878) [Made: true]
  x1093 = FixAdd(b924,b1091) [Made: true]
  x1236 = FixAdd(x1407,x1233) [Made: true]
  x987 = RegRead(x970) [Made: true]
  x1352 = DelayLine(1,x1027) [Made: true]
  x1129 = RegWrite(x1122,x1128,Set()) [Made: true]
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None) [Made: true]
  x1384 = DelayLine(7,b1167) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  x1019 = StreamOutNew(BurstCmdBus) [Made: true]
  x1357 = DelayLine(10,x1044) [Made: true]
  x992 = FixSub(b985,x987) [Made: true]
  b1004 [Made: true]
  x1399 = DelayLine(10,b1157) [Made: true]
  b1120 [Made: true]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1320 = RegRead(x927) [Made: true]
  x1367 = DelayLine(1,x1094) [Made: true]
  b940 [Made: true]
  x935 = StreamOutNew(BurstCmdBus) [Made: true]
  x923 = CounterChainNew(List(x922)) [Made: true]
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x1037 = FixDivSRA(x1036,Const(4)) [Made: true]
  x1088 = StreamInNew(BurstDataBus()) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
  b1069 [Made: true]
  x1014 = RegWrite(x1010,x1013,Set()) [Made: true]
  x972 = RegNew(Const(0)) [Made: true]
Inputs for x810 are (Set(x878, x879, x906, x900, x880, x903) ++ Set() ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088) ++ Set()) diff Set(x1305, x911, x912, x1251) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x810 = AccelScope(Block(Const(())))
 - x1190 = StreamOutNew(BurstFullDataBus())
 - x878 = ArgInNew(Const(0))
 - x1191 = StreamInNew(BurstAckBus)
 - x937 = StreamInNew(BurstDataBus())
 - x1021 = StreamInNew(BurstDataBus())
 - x879 = ArgInNew(Const(0))
 - x1086 = StreamOutNew(BurstCmdBus)
 - x906 = DRAMHostNew(List(x904, x905),Const(0))
 - x900 = DRAMHostNew(List(x898, x899),Const(0))
 - x880 = ArgInNew(Const(0))
 - x903 = DRAMHostNew(List(x901, x902),Const(0))
 - x1189 = StreamOutNew(BurstCmdBus)
 - x1019 = StreamOutNew(BurstCmdBus)
 - x935 = StreamOutNew(BurstCmdBus)
 - x1088 = StreamInNew(BurstDataBus())
 - x1190
 - x878_M
 - x1191
 - x937
 - x1021
 - x879_N
 - x1086
 - x906_c
 - x900_a
 - x880_K
 - x903_b
 - x1189
 - x1019
 - x935
 - x1088
Stms:
  x1322 = FixFMA(x942,x1336,x1337)
  x1036 = FixAdd(x1035,Const(15))
  x1337 = DelayLine(1,b913)
  x1411 = DelayLine(4,b1227)
  x1369 = DelayLine(7,x1108)
  x1190 = StreamOutNew(BurstFullDataBus())
  x1105 = FixSLA(x1104,Const(4))
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1031 = FixSLA(x1030,Const(4))
  x1315 = RegRead(x927)
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343)))
  x1179 = FixAdd(x1178,b1161)
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true))))
  x1200 = RegRead(x879)
  x977 = FieldApply(x974,end)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1068 = CounterChainNew(List(x1067))
  x994 = VecApply(x1345,0)
  x1401 = DelayLine(1,b1004)
  x1073 = RegRead(x1055)
  x1142 = And(x1139,x1141)
  x1041 = DRAMAddress(x903)
  x1078 = VecApply(x1360,0)
  x1310 = RegRead(x879)
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1))
  x1233 = FixSub(b1226,x1228)
  x1327 = FixSLA(x1037,Const(6))
  x1342 = DelayLine(10,b941)
  x1063 = FieldApply(x1058,size)
  x1354 = DelayLine(7,x1041)
  x1222 = UnitPipe(Set(),Block(Const(())),None)
  x930 = FixMin(Const(16),x929)
  x1196 = RegNew(Const(0))
  x1001 = UnitPipe(Set(b925, b914),Block(Const(())),None)
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191)
  x1127 = RegWrite(x1121,x1126,Set())
  x1391 = DelayLine(1,b1162)
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359)))
  x1359 = DelayLine(1,x1035)
  x1386 = DelayLine(7,b1157)
  x1366 = DelayLine(1,b1004)
  x1228 = RegRead(x1196)
  x1055 = RegNew(Const(0))
  x1409 = DelayLine(2,b1227)
  x1330 = FixSLA(x1104,Const(6))
  x1323 = FixSLA(x946,Const(6))
  x917 = RegRead(x880)
  x1313 = RegRead(x1056)
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1191 = StreamInNew(BurstAckBus)
  x1059 = FieldApply(x1058,start)
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
  x949 = FixSub(x1322,x947)
  x1379 = DelayLine(1,x1145)
  x1087 = FIFONew(Const(16))
  x1147 = FixSLA(b1119,Const(4))
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None)
  x1319 = RegRead(x916)
  x1347 = DelayLine(1,x994)
  x1013 = FixMin(Const(16),x1012)
  x1398 = DelayLine(10,b1162)
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None)
  x1362 = DelayLine(1,x1078)
  x1100 = FixSub(x1328,x1098)
  x1232 = And(x1229,x1231)
  x1373 = DelayLine(1,x1102)
  x1040 = FixToFix(x1326,TRUE,_64,_0)
  x1109 = FixAdd(x1107,x1369)
  x1334 = ParallelPipe(Set(),Block(Const(())))
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
  x937 = StreamInNew(BurstDataBus())
  x1383 = DelayLine(6,x1170)
  x1020 = FIFONew(Const(16))
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1))
  x1183 = FixAdd(x1172,x1182)
  x1051 = CounterChainNew(List(x1050))
  x981 = UnitPipe(Set(b969),Block(Const(())),None)
  x1169 = FixSLA(b1156,Const(4))
  x1377 = DelayLine(2,x1142)
  x1215 = FixAdd(x1213,x1404)
  x956 = FixToFix(x1323,TRUE,_64,_0)
  x1072 = FixLeq(x1071,b1069)
  x1394 = DelayLine(10,b1005)
  x1351 = DelayLine(1,b1004)
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348)))
  x1345 = DelayLine(1,x993)
  x988 = FixLeq(x987,b985)
  x1405 = DelayLine(1,x1215)
  x1104 = FixDivSRA(x1103,Const(4))
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1074 = FixLst(b1069,x1073)
  x1206 = FixSub(x1331,x1204)
  x920 = RegWrite(x916,x919,Set())
  x942 = FixAdd(b924,b940)
  x1306 = RegRead(x878)
  x1199 = FixAdd(b924,b1194)
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1338 = DelayLine(8,x950)
  x1311 = RegRead(x916)
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1))
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356)))
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1387 = DelayLine(7,b914)
  x957 = DRAMAddress(x900)
  x1343 = DelayLine(1,x951)
  x1021 = StreamInNew(BurstDataBus())
  x1042 = FixAdd(x1040,x1354)
  x952 = FixAdd(x951,Const(15))
  x1355 = DelayLine(1,x1042)
  x1123 = RegNew(Const(0))
  x1174 = FixAdd(x1169,b1166)
  x1217 = DRAMIsAlloc(x906)
  x1370 = DelayLine(1,x1109)
  x1238 = VecApply(x1237,0)
  x916 = RegNew(Const(0))
  x1365 = DelayLine(2,b1053)
  x1178 = FixSLA(b1166,Const(4))
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1))
  x1210 = FixDivSRA(x1209,Const(4))
  x1027 = RegRead(x879)
  x1407 = DelayLine(1,x1235)
  x1128 = FieldApply(x1125,end)
  x1392 = DelayLine(1,b1157)
  x974 = VecApply(x973,0)
  x1012 = FixSub(x1011,b1004)
  x1402 = DelayLine(1,x1200)
  x1360 = DelayLine(1,x1077)
  x1350 = DelayLine(2,x991)
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1))
  x1143 = FixSub(b1136,x1138)
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1328 = FixFMA(x1093,x1367,x1366)
  x1375 = DelayLine(1,x1144)
  x1121 = RegNew(Const(0))
  x1064 = RegWrite(x1056,x1063,Set())
  x1111 = DRAMIsAlloc(x906)
  x980 = RegWrite(x972,x979,Set())
  x1138 = RegRead(x1121)
  x1118 = CounterChainNew(List(x1117))
  x989 = RegRead(x971)
  x1397 = DelayLine(10,b1167)
  x1329 = FixSLA(x1097,Const(6))
  x1160 = CounterChainNew(List(x1159))
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1182 = FixMul(x1176,x1181)
  x1075 = And(x1072,x1074)
  x1214 = DRAMAddress(x906)
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1207 = RegRead(x1010)
  x970 = RegNew(Const(0))
  x1155 = CounterChainNew(List(x1154))
  x1324 = FixSLA(x953,Const(6))
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371)))
  x997 = FixAdd(x1346,x992)
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1382 = DelayLine(7,b925)
  x1231 = FixLst(b1226,x1230)
  x1131 = RegWrite(x1123,x1130,Set())
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1))
  x1060 = RegWrite(x1054,x1059,Set())
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1))
  x984 = CounterChainNew(List(x983))
  x1002 = CounterNew(Const(0),x1310,Const(16),Const(1))
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1393 = DelayLine(1,b914)
  x1333 = FixSLA(x1210,Const(6))
  x1318 = RegRead(x1010)
  x1086 = StreamOutNew(BurstCmdBus)
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1))
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
  x921 = UnitPipe(Set(b914),Block(Const(())),None)
  x1054 = RegNew(Const(0))
  x1170 = FixAdd(x1169,b1161)
  x1035 = FixAdd(x1033,x1353)
  x1071 = RegRead(x1054)
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None)
  x1026 = FixAdd(b913,b1024)
  x953 = FixDivSRA(x952,Const(4))
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1135 = CounterChainNew(List(x1134))
  x965 = FringeDenseLoad(x900,x935,x937)
  x1103 = FixAdd(x1102,Const(15))
  x1219 = RegWrite(x1196,x1206,Set())
  x1374 = DelayLine(2,x1100)
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1))
  x975 = FieldApply(x974,start)
  x1389 = DelayLine(1,b925)
  x1125 = VecApply(x1124,0)
  x1388 = DelayLine(1,b1005)
  x958 = FixAdd(x956,x1339)
  x1403 = DelayLine(8,x1207)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1139 = FixLeq(x1138,b1136)
  x936 = FIFONew(Const(16))
  x1371 = DelayLine(10,b1092)
  x1312 = RegRead(x916)
  x1058 = VecApply(x1057,0)
  x1107 = FixToFix(x1329,TRUE,_64,_0)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1332 = FixSLA(x1203,Const(6))
  x1090 = CounterChainNew(List(x1089))
  x919 = FixMin(Const(16),x918)
  x947 = FixSLA(x946,Const(4))
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1))
  x1356 = DelayLine(10,b1025)
  x979 = FieldApply(x974,size)
  x1209 = FixAdd(x1208,Const(15))
  x1408 = DelayLine(2,x1232)
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1))
  x1011 = RegRead(x879)
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None)
  x1349 = DelayLine(2,b986)
  x990 = FixLst(b985,x989)
  x996 = FixSLA(b968,Const(4))
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true))))
  x1122 = RegNew(Const(0))
  x1376 = DelayLine(1,x1147)
  x1307 = RegRead(x927)
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1080 = FixSLA(b1052,Const(4))
  x1339 = DelayLine(7,x957)
  x1325 = FixFMA(x1026,x1352,x1351)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None)
  x1344 = DelayLine(2,x949)
  x943 = RegRead(x880)
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1))
  x1381 = DelayLine(7,b1005)
  x932 = UnitPipe(Set(b925, b914),Block(Const(())),None)
  x1061 = FieldApply(x1058,end)
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371)))
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]])
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1))
  x1198 = RegNew(Const(0))
  x1396 = DelayLine(9,x1170)
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true))))
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1044 = DRAMIsAlloc(x903)
  x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1176 = VecApply(x1175,0)
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373)))
  x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None)
  x1364 = DelayLine(2,b1070)
  x1250 = UnrolledForeach(Set(b914),x923,Block(Const(())),List(List(b924)),List(List(b925)),None)
  x1102 = FixAdd(x1100,x1368)
  x922 = CounterNew(Const(0),x1306,Const(16),Const(1))
  x1076 = FixSub(b1069,x1071)
  x1034 = RegRead(x1010)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x927 = RegNew(Const(0))
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1))
  x1081 = FixAdd(x1361,x1076)
  x939 = CounterChainNew(List(x938))
  x1340 = DelayLine(1,x958)
  x1145 = VecApply(x1375,0)
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1181 = VecApply(x1180,0)
  x1049 = FringeDenseLoad(x903,x1019,x1021)
  x1003 = CounterChainNew(List(x1002))
  x1225 = CounterChainNew(List(x1224))
  x1400 = DelayLine(10,b914)
  x971 = RegNew(Const(0))
  x954 = FixSLA(x953,Const(4))
  x1368 = DelayLine(8,x1101)
  x1230 = RegRead(x1197)
  x1098 = FixSLA(x1097,Const(4))
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969)))
  x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None)
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None)
  x1038 = FixSLA(x1037,Const(4))
  x1235 = FixSLA(b1194,Const(4))
  x1317 = RegRead(x927)
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x951 = FixAdd(x949,x1338)
  x1130 = FieldApply(x1125,size)
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1336 = DelayLine(1,x943)
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1358 = DelayLine(2,x1033)
  x1141 = FixLst(b1136,x1140)
  x1023 = CounterChainNew(List(x1022))
  x1221 = RegWrite(x1198,x1211,Set())
  x1353 = DelayLine(8,x1034)
  x1094 = RegRead(x879)
  x978 = RegWrite(x971,x977,Set())
  x1140 = RegRead(x1122)
  x1372 = DelayLine(10,x1111)
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x991 = And(x988,x990)
  x1316 = RegRead(x1123)
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None)
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x931 = RegWrite(x927,x930,Set())
  x1321 = RegRead(x1198)
  x976 = RegWrite(x970,x975,Set())
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1126 = FieldApply(x1125,start)
  x1189 = StreamOutNew(BurstCmdBus)
  x1010 = RegNew(Const(0))
  x1390 = DelayLine(1,b1167)
  x1108 = DRAMAddress(x906)
  x1326 = FixSLA(x1030,Const(6))
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342)))
  x1385 = DelayLine(7,b1162)
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342)))
  x1341 = DelayLine(10,x960)
  x1062 = RegWrite(x1055,x1061,Set())
  x946 = FixDivSRA(x1322,Const(4))
  x1101 = RegRead(x1010)
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set()))
  x1030 = FixDivSRA(x1325,Const(4))
  x929 = FixSub(x928,b924)
  x1308 = RegRead(x927)
  x1193 = CounterChainNew(List(x1192))
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1309 = RegRead(x972)
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356)))
  x1116 = FringeDenseLoad(x906,x1086,x1088)
  x1348 = DelayLine(2,b969)
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None)
  x967 = CounterChainNew(List(x966))
  x950 = RegRead(x916)
  x1097 = FixDivSRA(x1328,Const(4))
  x1229 = FixLeq(x1228,b1226)
  x1395 = DelayLine(10,b925)
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x918 = FixSub(x917,b913)
  x1363 = DelayLine(2,x1075)
  x1314 = RegRead(x927)
  x1335 = UnrolledForeach(Set(b925, b914),x1003,Block(Const(())),List(List(b1004)),List(List(b1005)),None)
  x1172 = VecApply(x1171,0)
  x1410 = DelayLine(4,x1232)
  x1056 = RegNew(Const(0))
  x1033 = FixSub(x1325,x1031)
  x1197 = RegNew(Const(0))
  x960 = DRAMIsAlloc(x900)
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
  x1165 = CounterChainNew(List(x1164))
  x1346 = DelayLine(1,x996)
  x928 = RegRead(x878)
  x1093 = FixAdd(b924,b1091)
  x1236 = FixAdd(x1407,x1233)
  x987 = RegRead(x970)
  x1352 = DelayLine(1,x1027)
  x1129 = RegWrite(x1122,x1128,Set())
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None)
  x1384 = DelayLine(7,b1167)
  x1378 = DelayLine(2,b1137)
  x1019 = StreamOutNew(BurstCmdBus)
  x1357 = DelayLine(10,x1044)
  x992 = FixSub(b985,x987)
  x1399 = DelayLine(10,b1157)
  x1331 = FixFMA(x1199,x1402,x1401)
  x1320 = RegRead(x927)
  x1367 = DelayLine(1,x1094)
  x935 = StreamOutNew(BurstCmdBus)
  x923 = CounterChainNew(List(x922))
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1037 = FixDivSRA(x1036,Const(4))
  x1088 = StreamInNew(BurstDataBus())
  x1204 = FixSLA(x1203,Const(4))
  x1014 = RegWrite(x1010,x1013,Set())
  x972 = RegNew(Const(0))
Used:
  x1322 = FixFMA(x942,x1336,x1337) [Made: true]
  x1036 = FixAdd(x1035,Const(15)) [Made: true]
  x1337 = DelayLine(1,b913) [Made: true]
  x1411 = DelayLine(4,b1227) [Made: true]
  b1024 [Made: true]
  x1369 = DelayLine(7,x1108) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: true]
  x1105 = FixSLA(x1104,Const(4)) [Made: true]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1031 = FixSLA(x1030,Const(4)) [Made: true]
  x1315 = RegRead(x927) [Made: true]
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None) [Made: true]
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343))) [Made: true]
  b941 [Made: true]
  () [Made: false]
  x1179 = FixAdd(x1178,b1161) [Made: true]
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true)))) [Made: true]
  x1200 = RegRead(x879) [Made: true]
  x977 = FieldApply(x974,end) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  b1005 [Made: true]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1068 = CounterChainNew(List(x1067)) [Made: true]
  x994 = VecApply(x1345,0) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1073 = RegRead(x1055) [Made: true]
  x1142 = And(x1139,x1141) [Made: true]
  x878 = ArgInNew(Const(0)) [Made: false]
  x1041 = DRAMAddress(x903) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  b1137 [Made: true]
  x1310 = RegRead(x879) [Made: true]
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1)) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1327 = FixSLA(x1037,Const(6)) [Made: true]
  x1342 = DelayLine(10,b941) [Made: true]
  b913 [Made: false]
  x1063 = FieldApply(x1058,size) [Made: true]
  x1354 = DelayLine(7,x1041) [Made: true]
  x1222 = UnitPipe(Set(),Block(Const(())),None) [Made: true]
  x930 = FixMin(Const(16),x929) [Made: true]
  x1196 = RegNew(Const(0)) [Made: true]
  x1001 = UnitPipe(Set(b925, b914),Block(Const(())),None) [Made: true]
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191) [Made: true]
  x1127 = RegWrite(x1121,x1126,Set()) [Made: true]
  x1391 = DelayLine(1,b1162) [Made: true]
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359))) [Made: true]
  x1359 = DelayLine(1,x1035) [Made: true]
  x1386 = DelayLine(7,b1157) [Made: true]
  x1366 = DelayLine(1,b1004) [Made: true]
  x1228 = RegRead(x1196) [Made: true]
  x1055 = RegNew(Const(0)) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1330 = FixSLA(x1104,Const(6)) [Made: true]
  x1323 = FixSLA(x946,Const(6)) [Made: true]
  x917 = RegRead(x880) [Made: true]
  x1313 = RegRead(x1056) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1191 = StreamInNew(BurstAckBus) [Made: true]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None) [Made: true]
  x949 = FixSub(x1322,x947) [Made: true]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: true]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None) [Made: true]
  x1319 = RegRead(x916) [Made: true]
  b969 [Made: true]
  x1347 = DelayLine(1,x994) [Made: true]
  x1013 = FixMin(Const(16),x1012) [Made: true]
  x1398 = DelayLine(10,b1162) [Made: true]
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None) [Made: true]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1100 = FixSub(x1328,x1098) [Made: true]
  x1232 = And(x1229,x1231) [Made: true]
  b924 [Made: true]
  x1373 = DelayLine(1,x1102) [Made: true]
  x1040 = FixToFix(x1326,TRUE,_64,_0) [Made: true]
  x1109 = FixAdd(x1107,x1369) [Made: true]
  x1334 = ParallelPipe(Set(),Block(Const(()))) [Made: true]
  b1136 [Made: true]
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None) [Made: true]
  x937 = StreamInNew(BurstDataBus()) [Made: true]
  x1383 = DelayLine(6,x1170) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: true]
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1)) [Made: true]
  x1183 = FixAdd(x1172,x1182) [Made: true]
  x1051 = CounterChainNew(List(x1050)) [Made: true]
  x981 = UnitPipe(Set(b969),Block(Const(())),None) [Made: true]
  x1169 = FixSLA(b1156,Const(4)) [Made: true]
  x1377 = DelayLine(2,x1142) [Made: true]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x956 = FixToFix(x1323,TRUE,_64,_0) [Made: true]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  b1119 [Made: true]
  x1394 = DelayLine(10,b1005) [Made: true]
  x1351 = DelayLine(1,b1004) [Made: true]
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348))) [Made: true]
  x1345 = DelayLine(1,x993) [Made: true]
  x988 = FixLeq(x987,b985) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1104 = FixDivSRA(x1103,Const(4)) [Made: true]
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  x920 = RegWrite(x916,x919,Set()) [Made: true]
  x942 = FixAdd(b924,b940) [Made: true]
  b925 [Made: true]
  x1306 = RegRead(x878) [Made: true]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1338 = DelayLine(8,x950) [Made: true]
  x1311 = RegRead(x916) [Made: true]
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1)) [Made: true]
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356))) [Made: true]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1387 = DelayLine(7,b914) [Made: true]
  x957 = DRAMAddress(x900) [Made: true]
  b1091 [Made: true]
  x1343 = DelayLine(1,x951) [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: true]
  x1042 = FixAdd(x1040,x1354) [Made: true]
  x952 = FixAdd(x951,Const(15)) [Made: true]
  x1355 = DelayLine(1,x1042) [Made: true]
  x1123 = RegNew(Const(0)) [Made: true]
  x1174 = FixAdd(x1169,b1166) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x1370 = DelayLine(1,x1109) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x916 = RegNew(Const(0)) [Made: true]
  x1365 = DelayLine(2,b1053) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1178 = FixSLA(b1166,Const(4)) [Made: true]
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1)) [Made: true]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  x1027 = RegRead(x879) [Made: true]
  b1195 [Made: true]
  x1407 = DelayLine(1,x1235) [Made: true]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1392 = DelayLine(1,b1157) [Made: true]
  x974 = VecApply(x973,0) [Made: true]
  x1012 = FixSub(x1011,b1004) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1350 = DelayLine(2,x991) [Made: true]
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1)) [Made: true]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1328 = FixFMA(x1093,x1367,x1366) [Made: true]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: true]
  x1064 = RegWrite(x1056,x1063,Set()) [Made: true]
  x1111 = DRAMIsAlloc(x906) [Made: true]
  b1227 [Made: true]
  x980 = RegWrite(x972,x979,Set()) [Made: true]
  x1138 = RegRead(x1121) [Made: true]
  x1118 = CounterChainNew(List(x1117)) [Made: true]
  x989 = RegRead(x971) [Made: true]
  x1397 = DelayLine(10,b1167) [Made: true]
  x1329 = FixSLA(x1097,Const(6)) [Made: true]
  x1160 = CounterChainNew(List(x1159)) [Made: true]
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365))) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1182 = FixMul(x1176,x1181) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x970 = RegNew(Const(0)) [Made: true]
  x1155 = CounterChainNew(List(x1154)) [Made: true]
  x1324 = FixSLA(x953,Const(6)) [Made: true]
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371))) [Made: true]
  x997 = FixAdd(x1346,x992) [Made: true]
  b985 [Made: true]
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1382 = DelayLine(7,b925) [Made: true]
  x1231 = FixLst(b1226,x1230) [Made: true]
  x1131 = RegWrite(x1123,x1130,Set()) [Made: true]
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1)) [Made: true]
  x1060 = RegWrite(x1054,x1059,Set()) [Made: true]
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1)) [Made: true]
  x984 = CounterChainNew(List(x983)) [Made: true]
  x1002 = CounterNew(Const(0),x1310,Const(16),Const(1)) [Made: true]
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1393 = DelayLine(1,b914) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x1318 = RegRead(x1010) [Made: true]
  x1086 = StreamOutNew(BurstCmdBus) [Made: true]
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1)) [Made: true]
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None) [Made: true]
  x1054 = RegNew(Const(0)) [Made: true]
  x1170 = FixAdd(x1169,b1161) [Made: true]
  x1035 = FixAdd(x1033,x1353) [Made: true]
  x1071 = RegRead(x1054) [Made: true]
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None) [Made: true]
  x1026 = FixAdd(b913,b1024) [Made: true]
  b1167 [Made: true]
  x953 = FixDivSRA(x952,Const(4)) [Made: true]
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1135 = CounterChainNew(List(x1134)) [Made: true]
  x965 = FringeDenseLoad(x900,x935,x937) [Made: true]
  x1103 = FixAdd(x1102,Const(15)) [Made: true]
  x1219 = RegWrite(x1196,x1206,Set()) [Made: true]
  x1374 = DelayLine(2,x1100) [Made: true]
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1)) [Made: true]
  x975 = FieldApply(x974,start) [Made: true]
  x1389 = DelayLine(1,b925) [Made: true]
  x1125 = VecApply(x1124,0) [Made: true]
  x1388 = DelayLine(1,b1005) [Made: true]
  x958 = FixAdd(x956,x1339) [Made: true]
  x1403 = DelayLine(8,x1207) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  b1226 [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x936 = FIFONew(Const(16)) [Made: true]
  x1371 = DelayLine(10,b1092) [Made: true]
  x1312 = RegRead(x916) [Made: true]
  x1058 = VecApply(x1057,0) [Made: true]
  x1107 = FixToFix(x1329,TRUE,_64,_0) [Made: true]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  b1092 [Made: true]
  x1090 = CounterChainNew(List(x1089)) [Made: true]
  x919 = FixMin(Const(16),x918) [Made: true]
  x947 = FixSLA(x946,Const(4)) [Made: true]
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1)) [Made: true]
  x1356 = DelayLine(10,b1025) [Made: true]
  x979 = FieldApply(x974,size) [Made: true]
  b1194 [Made: true]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x900 = DRAMHostNew(List(x898, x899),Const(0)) [Made: false]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1)) [Made: true]
  x1011 = RegRead(x879) [Made: true]
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None) [Made: true]
  x1349 = DelayLine(2,b986) [Made: true]
  x990 = FixLst(b985,x989) [Made: true]
  x996 = FixSLA(b968,Const(4)) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x880 = ArgInNew(Const(0)) [Made: false]
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true)))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: true]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1307 = RegRead(x927) [Made: true]
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  x1339 = DelayLine(7,x957) [Made: true]
  b1162 [Made: true]
  x1325 = FixFMA(x1026,x1352,x1351) [Made: true]
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None) [Made: true]
  x1344 = DelayLine(2,x949) [Made: true]
  x943 = RegRead(x880) [Made: true]
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1)) [Made: true]
  x1381 = DelayLine(7,b1005) [Made: true]
  x932 = UnitPipe(Set(b925, b914),Block(Const(())),None) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371))) [Made: true]
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1)) [Made: true]
  x1198 = RegNew(Const(0)) [Made: true]
  x1396 = DelayLine(9,x1170) [Made: true]
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true)))) [Made: true]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1044 = DRAMIsAlloc(x903) [Made: true]
  x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1176 = VecApply(x1175,0) [Made: true]
  b986 [Made: true]
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373))) [Made: true]
  x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1102 = FixAdd(x1100,x1368) [Made: true]
  x922 = CounterNew(Const(0),x1306,Const(16),Const(1)) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1034 = RegRead(x1010) [Made: true]
  b1166 [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x927 = RegNew(Const(0)) [Made: true]
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1)) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  x939 = CounterChainNew(List(x938)) [Made: true]
  x1340 = DelayLine(1,x958) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  b968 [Made: true]
  x1181 = VecApply(x1180,0) [Made: true]
  x1049 = FringeDenseLoad(x903,x1019,x1021) [Made: true]
  x1003 = CounterChainNew(List(x1002)) [Made: true]
  b1025 [Made: true]
  b1070 [Made: true]
  b1156 [Made: true]
  x1225 = CounterChainNew(List(x1224)) [Made: true]
  x1400 = DelayLine(10,b914) [Made: true]
  x971 = RegNew(Const(0)) [Made: true]
  x954 = FixSLA(x953,Const(4)) [Made: true]
  x1368 = DelayLine(8,x1101) [Made: true]
  x1230 = RegRead(x1197) [Made: true]
  x1098 = FixSLA(x1097,Const(4)) [Made: true]
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969))) [Made: true]
  b1053 [Made: true]
  x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None) [Made: true]
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None) [Made: true]
  x1038 = FixSLA(x1037,Const(4)) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1317 = RegRead(x927) [Made: true]
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x951 = FixAdd(x949,x1338) [Made: true]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406))) [Made: true]
  x1336 = DelayLine(1,x943) [Made: true]
  x1220 = RegWrite(x1197,x1208,Set()) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1358 = DelayLine(2,x1033) [Made: true]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1023 = CounterChainNew(List(x1022)) [Made: true]
  x1221 = RegWrite(x1198,x1211,Set()) [Made: true]
  x1353 = DelayLine(8,x1034) [Made: true]
  b1052 [Made: true]
  x1094 = RegRead(x879) [Made: true]
  x978 = RegWrite(x971,x977,Set()) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1372 = DelayLine(10,x1111) [Made: true]
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411))) [Made: true]
  x991 = And(x988,x990) [Made: true]
  x1316 = RegRead(x1123) [Made: true]
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None) [Made: true]
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x931 = RegWrite(x927,x930,Set()) [Made: true]
  b1157 [Made: true]
  x1321 = RegRead(x1198) [Made: true]
  x976 = RegWrite(x970,x975,Set()) [Made: true]
  x903 = DRAMHostNew(List(x901, x902),Const(0)) [Made: false]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1126 = FieldApply(x1125,start) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: true]
  x1010 = RegNew(Const(0)) [Made: true]
  x1390 = DelayLine(1,b1167) [Made: true]
  x1108 = DRAMAddress(x906) [Made: true]
  x1326 = FixSLA(x1030,Const(6)) [Made: true]
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342))) [Made: true]
  x1385 = DelayLine(7,b1162) [Made: true]
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342))) [Made: true]
  x1341 = DelayLine(10,x960) [Made: true]
  x1062 = RegWrite(x1055,x1061,Set()) [Made: true]
  x946 = FixDivSRA(x1322,Const(4)) [Made: true]
  x1101 = RegRead(x1010) [Made: true]
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set())) [Made: true]
  x1030 = FixDivSRA(x1325,Const(4)) [Made: true]
  b914 [Made: false]
  x929 = FixSub(x928,b924) [Made: true]
  x1308 = RegRead(x927) [Made: true]
  x1193 = CounterChainNew(List(x1192)) [Made: true]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1309 = RegRead(x972) [Made: true]
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356))) [Made: true]
  b1161 [Made: true]
  x1116 = FringeDenseLoad(x906,x1086,x1088) [Made: true]
  x1348 = DelayLine(2,b969) [Made: true]
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None) [Made: true]
  x967 = CounterChainNew(List(x966)) [Made: true]
  x950 = RegRead(x916) [Made: true]
  x1097 = FixDivSRA(x1328,Const(4)) [Made: true]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1395 = DelayLine(10,b925) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x918 = FixSub(x917,b913) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  x1314 = RegRead(x927) [Made: true]
  x1335 = UnrolledForeach(Set(b925, b914),x1003,Block(Const(())),List(List(b1004)),List(List(b1005)),None) [Made: true]
  x1172 = VecApply(x1171,0) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1056 = RegNew(Const(0)) [Made: true]
  x1033 = FixSub(x1325,x1031) [Made: true]
  x1197 = RegNew(Const(0)) [Made: true]
  x960 = DRAMIsAlloc(x900) [Made: true]
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None) [Made: true]
  x1165 = CounterChainNew(List(x1164)) [Made: true]
  x1346 = DelayLine(1,x996) [Made: true]
  x928 = RegRead(x878) [Made: true]
  x1093 = FixAdd(b924,b1091) [Made: true]
  x1236 = FixAdd(x1407,x1233) [Made: true]
  x987 = RegRead(x970) [Made: true]
  x1352 = DelayLine(1,x1027) [Made: true]
  x1129 = RegWrite(x1122,x1128,Set()) [Made: true]
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None) [Made: true]
  x1384 = DelayLine(7,b1167) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  x1019 = StreamOutNew(BurstCmdBus) [Made: true]
  x1357 = DelayLine(10,x1044) [Made: true]
  x992 = FixSub(b985,x987) [Made: true]
  b1004 [Made: true]
  x1399 = DelayLine(10,b1157) [Made: true]
  b1120 [Made: true]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1320 = RegRead(x927) [Made: true]
  x1367 = DelayLine(1,x1094) [Made: true]
  b940 [Made: true]
  x935 = StreamOutNew(BurstCmdBus) [Made: true]
  x923 = CounterChainNew(List(x922)) [Made: true]
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x1037 = FixDivSRA(x1036,Const(4)) [Made: true]
  x1088 = StreamInNew(BurstDataBus()) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
  b1069 [Made: true]
  x1014 = RegWrite(x1010,x1013,Set()) [Made: true]
  x972 = RegNew(Const(0)) [Made: true]
Inputs for x1251 are (Set(x878, b913, x879, x906, x900, x880, x903, b914) ++ Set() ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088) ++ Set()) diff Set(b913, x1306, x916, x921, x1250, x922, b914, x923) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1322 = FixFMA(x942,x1336,x1337)
  x1036 = FixAdd(x1035,Const(15))
  x1337 = DelayLine(1,b913)
  x1411 = DelayLine(4,b1227)
  x1369 = DelayLine(7,x1108)
  x1190 = StreamOutNew(BurstFullDataBus())
  x1105 = FixSLA(x1104,Const(4))
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1031 = FixSLA(x1030,Const(4))
  x1315 = RegRead(x927)
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343)))
  x1179 = FixAdd(x1178,b1161)
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true))))
  x1200 = RegRead(x879)
  x977 = FieldApply(x974,end)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1068 = CounterChainNew(List(x1067))
  x994 = VecApply(x1345,0)
  x1401 = DelayLine(1,b1004)
  x1073 = RegRead(x1055)
  x1142 = And(x1139,x1141)
  x1041 = DRAMAddress(x903)
  x1078 = VecApply(x1360,0)
  x1310 = RegRead(x879)
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1))
  x1233 = FixSub(b1226,x1228)
  x1327 = FixSLA(x1037,Const(6))
  x1342 = DelayLine(10,b941)
  x1063 = FieldApply(x1058,size)
  x1354 = DelayLine(7,x1041)
  x1222 = UnitPipe(Set(),Block(Const(())),None)
  x930 = FixMin(Const(16),x929)
  x1196 = RegNew(Const(0))
  x1001 = UnitPipe(Set(b925, b914),Block(Const(())),None)
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191)
  x1127 = RegWrite(x1121,x1126,Set())
  x1391 = DelayLine(1,b1162)
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359)))
  x1359 = DelayLine(1,x1035)
  x1386 = DelayLine(7,b1157)
  x1366 = DelayLine(1,b1004)
  x1228 = RegRead(x1196)
  x1055 = RegNew(Const(0))
  x1409 = DelayLine(2,b1227)
  x1330 = FixSLA(x1104,Const(6))
  x1323 = FixSLA(x946,Const(6))
  x917 = RegRead(x880)
  x1313 = RegRead(x1056)
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1191 = StreamInNew(BurstAckBus)
  x1059 = FieldApply(x1058,start)
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
  x949 = FixSub(x1322,x947)
  x1379 = DelayLine(1,x1145)
  x1087 = FIFONew(Const(16))
  x1147 = FixSLA(b1119,Const(4))
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None)
  x1319 = RegRead(x916)
  x1347 = DelayLine(1,x994)
  x1013 = FixMin(Const(16),x1012)
  x1398 = DelayLine(10,b1162)
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None)
  x1362 = DelayLine(1,x1078)
  x1100 = FixSub(x1328,x1098)
  x1232 = And(x1229,x1231)
  x1373 = DelayLine(1,x1102)
  x1040 = FixToFix(x1326,TRUE,_64,_0)
  x1109 = FixAdd(x1107,x1369)
  x1334 = ParallelPipe(Set(),Block(Const(())))
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
  x937 = StreamInNew(BurstDataBus())
  x1383 = DelayLine(6,x1170)
  x1020 = FIFONew(Const(16))
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1))
  x1183 = FixAdd(x1172,x1182)
  x1051 = CounterChainNew(List(x1050))
  x981 = UnitPipe(Set(b969),Block(Const(())),None)
  x1169 = FixSLA(b1156,Const(4))
  x1377 = DelayLine(2,x1142)
  x1215 = FixAdd(x1213,x1404)
  x956 = FixToFix(x1323,TRUE,_64,_0)
  x1072 = FixLeq(x1071,b1069)
  x1394 = DelayLine(10,b1005)
  x1351 = DelayLine(1,b1004)
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348)))
  x1345 = DelayLine(1,x993)
  x988 = FixLeq(x987,b985)
  x1405 = DelayLine(1,x1215)
  x1104 = FixDivSRA(x1103,Const(4))
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1074 = FixLst(b1069,x1073)
  x1206 = FixSub(x1331,x1204)
  x920 = RegWrite(x916,x919,Set())
  x942 = FixAdd(b924,b940)
  x1306 = RegRead(x878)
  x1199 = FixAdd(b924,b1194)
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1338 = DelayLine(8,x950)
  x1311 = RegRead(x916)
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1))
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356)))
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1387 = DelayLine(7,b914)
  x957 = DRAMAddress(x900)
  x1343 = DelayLine(1,x951)
  x1021 = StreamInNew(BurstDataBus())
  x1042 = FixAdd(x1040,x1354)
  x952 = FixAdd(x951,Const(15))
  x1355 = DelayLine(1,x1042)
  x1123 = RegNew(Const(0))
  x1174 = FixAdd(x1169,b1166)
  x1217 = DRAMIsAlloc(x906)
  x1370 = DelayLine(1,x1109)
  x1238 = VecApply(x1237,0)
  x916 = RegNew(Const(0))
  x1365 = DelayLine(2,b1053)
  x1178 = FixSLA(b1166,Const(4))
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1))
  x1210 = FixDivSRA(x1209,Const(4))
  x1027 = RegRead(x879)
  x1407 = DelayLine(1,x1235)
  x1128 = FieldApply(x1125,end)
  x1392 = DelayLine(1,b1157)
  x974 = VecApply(x973,0)
  x1012 = FixSub(x1011,b1004)
  x1402 = DelayLine(1,x1200)
  x1360 = DelayLine(1,x1077)
  x1350 = DelayLine(2,x991)
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1))
  x1143 = FixSub(b1136,x1138)
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1328 = FixFMA(x1093,x1367,x1366)
  x1375 = DelayLine(1,x1144)
  x1121 = RegNew(Const(0))
  x1064 = RegWrite(x1056,x1063,Set())
  x1111 = DRAMIsAlloc(x906)
  x980 = RegWrite(x972,x979,Set())
  x1138 = RegRead(x1121)
  x1118 = CounterChainNew(List(x1117))
  x989 = RegRead(x971)
  x1397 = DelayLine(10,b1167)
  x1329 = FixSLA(x1097,Const(6))
  x1160 = CounterChainNew(List(x1159))
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1182 = FixMul(x1176,x1181)
  x1075 = And(x1072,x1074)
  x1214 = DRAMAddress(x906)
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1207 = RegRead(x1010)
  x970 = RegNew(Const(0))
  x1155 = CounterChainNew(List(x1154))
  x1324 = FixSLA(x953,Const(6))
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371)))
  x997 = FixAdd(x1346,x992)
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1382 = DelayLine(7,b925)
  x1231 = FixLst(b1226,x1230)
  x1131 = RegWrite(x1123,x1130,Set())
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1))
  x1060 = RegWrite(x1054,x1059,Set())
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1))
  x984 = CounterChainNew(List(x983))
  x1002 = CounterNew(Const(0),x1310,Const(16),Const(1))
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1393 = DelayLine(1,b914)
  x1333 = FixSLA(x1210,Const(6))
  x1318 = RegRead(x1010)
  x1086 = StreamOutNew(BurstCmdBus)
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1))
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
  x921 = UnitPipe(Set(b914),Block(Const(())),None)
  x1054 = RegNew(Const(0))
  x1170 = FixAdd(x1169,b1161)
  x1035 = FixAdd(x1033,x1353)
  x1071 = RegRead(x1054)
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None)
  x1026 = FixAdd(b913,b1024)
  x953 = FixDivSRA(x952,Const(4))
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1135 = CounterChainNew(List(x1134))
  x965 = FringeDenseLoad(x900,x935,x937)
  x1103 = FixAdd(x1102,Const(15))
  x1219 = RegWrite(x1196,x1206,Set())
  x1374 = DelayLine(2,x1100)
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1))
  x975 = FieldApply(x974,start)
  x1389 = DelayLine(1,b925)
  x1125 = VecApply(x1124,0)
  x1388 = DelayLine(1,b1005)
  x958 = FixAdd(x956,x1339)
  x1403 = DelayLine(8,x1207)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1139 = FixLeq(x1138,b1136)
  x936 = FIFONew(Const(16))
  x1371 = DelayLine(10,b1092)
  x1312 = RegRead(x916)
  x1058 = VecApply(x1057,0)
  x1107 = FixToFix(x1329,TRUE,_64,_0)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1332 = FixSLA(x1203,Const(6))
  x1090 = CounterChainNew(List(x1089))
  x919 = FixMin(Const(16),x918)
  x947 = FixSLA(x946,Const(4))
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1))
  x1356 = DelayLine(10,b1025)
  x979 = FieldApply(x974,size)
  x1209 = FixAdd(x1208,Const(15))
  x1408 = DelayLine(2,x1232)
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1))
  x1011 = RegRead(x879)
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None)
  x1349 = DelayLine(2,b986)
  x990 = FixLst(b985,x989)
  x996 = FixSLA(b968,Const(4))
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true))))
  x1122 = RegNew(Const(0))
  x1376 = DelayLine(1,x1147)
  x1307 = RegRead(x927)
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1080 = FixSLA(b1052,Const(4))
  x1339 = DelayLine(7,x957)
  x1325 = FixFMA(x1026,x1352,x1351)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None)
  x1344 = DelayLine(2,x949)
  x943 = RegRead(x880)
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1))
  x1381 = DelayLine(7,b1005)
  x932 = UnitPipe(Set(b925, b914),Block(Const(())),None)
  x1061 = FieldApply(x1058,end)
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371)))
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]])
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1))
  x1198 = RegNew(Const(0))
  x1396 = DelayLine(9,x1170)
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true))))
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1044 = DRAMIsAlloc(x903)
  x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1176 = VecApply(x1175,0)
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373)))
  x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None)
  x1364 = DelayLine(2,b1070)
  x1250 = UnrolledForeach(Set(b914),x923,Block(Const(())),List(List(b924)),List(List(b925)),None)
  x1102 = FixAdd(x1100,x1368)
  x922 = CounterNew(Const(0),x1306,Const(16),Const(1))
  x1076 = FixSub(b1069,x1071)
  x1034 = RegRead(x1010)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x927 = RegNew(Const(0))
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1))
  x1081 = FixAdd(x1361,x1076)
  x939 = CounterChainNew(List(x938))
  x1340 = DelayLine(1,x958)
  x1145 = VecApply(x1375,0)
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1181 = VecApply(x1180,0)
  x1049 = FringeDenseLoad(x903,x1019,x1021)
  x1003 = CounterChainNew(List(x1002))
  x1225 = CounterChainNew(List(x1224))
  x1400 = DelayLine(10,b914)
  x971 = RegNew(Const(0))
  x954 = FixSLA(x953,Const(4))
  x1368 = DelayLine(8,x1101)
  x1230 = RegRead(x1197)
  x1098 = FixSLA(x1097,Const(4))
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969)))
  x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None)
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None)
  x1038 = FixSLA(x1037,Const(4))
  x1235 = FixSLA(b1194,Const(4))
  x1317 = RegRead(x927)
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x951 = FixAdd(x949,x1338)
  x1130 = FieldApply(x1125,size)
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1336 = DelayLine(1,x943)
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1358 = DelayLine(2,x1033)
  x1141 = FixLst(b1136,x1140)
  x1023 = CounterChainNew(List(x1022))
  x1221 = RegWrite(x1198,x1211,Set())
  x1353 = DelayLine(8,x1034)
  x1094 = RegRead(x879)
  x978 = RegWrite(x971,x977,Set())
  x1140 = RegRead(x1122)
  x1372 = DelayLine(10,x1111)
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x991 = And(x988,x990)
  x1316 = RegRead(x1123)
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None)
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x931 = RegWrite(x927,x930,Set())
  x1321 = RegRead(x1198)
  x976 = RegWrite(x970,x975,Set())
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1126 = FieldApply(x1125,start)
  x1189 = StreamOutNew(BurstCmdBus)
  x1010 = RegNew(Const(0))
  x1390 = DelayLine(1,b1167)
  x1108 = DRAMAddress(x906)
  x1326 = FixSLA(x1030,Const(6))
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342)))
  x1385 = DelayLine(7,b1162)
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342)))
  x1341 = DelayLine(10,x960)
  x1062 = RegWrite(x1055,x1061,Set())
  x946 = FixDivSRA(x1322,Const(4))
  x1101 = RegRead(x1010)
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set()))
  x1030 = FixDivSRA(x1325,Const(4))
  x929 = FixSub(x928,b924)
  x1308 = RegRead(x927)
  x1193 = CounterChainNew(List(x1192))
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1309 = RegRead(x972)
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356)))
  x1116 = FringeDenseLoad(x906,x1086,x1088)
  x1348 = DelayLine(2,b969)
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None)
  x967 = CounterChainNew(List(x966))
  x950 = RegRead(x916)
  x1097 = FixDivSRA(x1328,Const(4))
  x1229 = FixLeq(x1228,b1226)
  x1395 = DelayLine(10,b925)
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x918 = FixSub(x917,b913)
  x1363 = DelayLine(2,x1075)
  x1314 = RegRead(x927)
  x1335 = UnrolledForeach(Set(b925, b914),x1003,Block(Const(())),List(List(b1004)),List(List(b1005)),None)
  x1172 = VecApply(x1171,0)
  x1410 = DelayLine(4,x1232)
  x1056 = RegNew(Const(0))
  x1033 = FixSub(x1325,x1031)
  x1197 = RegNew(Const(0))
  x960 = DRAMIsAlloc(x900)
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
  x1165 = CounterChainNew(List(x1164))
  x1346 = DelayLine(1,x996)
  x928 = RegRead(x878)
  x1093 = FixAdd(b924,b1091)
  x1236 = FixAdd(x1407,x1233)
  x987 = RegRead(x970)
  x1352 = DelayLine(1,x1027)
  x1129 = RegWrite(x1122,x1128,Set())
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None)
  x1384 = DelayLine(7,b1167)
  x1378 = DelayLine(2,b1137)
  x1019 = StreamOutNew(BurstCmdBus)
  x1357 = DelayLine(10,x1044)
  x992 = FixSub(b985,x987)
  x1399 = DelayLine(10,b1157)
  x1331 = FixFMA(x1199,x1402,x1401)
  x1320 = RegRead(x927)
  x1367 = DelayLine(1,x1094)
  x935 = StreamOutNew(BurstCmdBus)
  x923 = CounterChainNew(List(x922))
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1037 = FixDivSRA(x1036,Const(4))
  x1088 = StreamInNew(BurstDataBus())
  x1204 = FixSLA(x1203,Const(4))
  x1014 = RegWrite(x1010,x1013,Set())
  x972 = RegNew(Const(0))
Used:
  x1322 = FixFMA(x942,x1336,x1337) [Made: true]
  x1036 = FixAdd(x1035,Const(15)) [Made: true]
  x1337 = DelayLine(1,b913) [Made: true]
  x1411 = DelayLine(4,b1227) [Made: true]
  b1024 [Made: true]
  x1369 = DelayLine(7,x1108) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: true]
  x1105 = FixSLA(x1104,Const(4)) [Made: true]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1031 = FixSLA(x1030,Const(4)) [Made: true]
  x1315 = RegRead(x927) [Made: true]
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None) [Made: true]
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343))) [Made: true]
  b941 [Made: true]
  () [Made: false]
  x1179 = FixAdd(x1178,b1161) [Made: true]
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true)))) [Made: true]
  x1200 = RegRead(x879) [Made: true]
  x977 = FieldApply(x974,end) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  b1005 [Made: true]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1068 = CounterChainNew(List(x1067)) [Made: true]
  x994 = VecApply(x1345,0) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1073 = RegRead(x1055) [Made: true]
  x1142 = And(x1139,x1141) [Made: true]
  x878 = ArgInNew(Const(0)) [Made: false]
  x1041 = DRAMAddress(x903) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  b1137 [Made: true]
  x1310 = RegRead(x879) [Made: true]
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1)) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1327 = FixSLA(x1037,Const(6)) [Made: true]
  x1342 = DelayLine(10,b941) [Made: true]
  b913 [Made: false]
  x1063 = FieldApply(x1058,size) [Made: true]
  x1354 = DelayLine(7,x1041) [Made: true]
  x1222 = UnitPipe(Set(),Block(Const(())),None) [Made: true]
  x930 = FixMin(Const(16),x929) [Made: true]
  x1196 = RegNew(Const(0)) [Made: true]
  x1001 = UnitPipe(Set(b925, b914),Block(Const(())),None) [Made: true]
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191) [Made: true]
  x1127 = RegWrite(x1121,x1126,Set()) [Made: true]
  x1391 = DelayLine(1,b1162) [Made: true]
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359))) [Made: true]
  x1359 = DelayLine(1,x1035) [Made: true]
  x1386 = DelayLine(7,b1157) [Made: true]
  x1366 = DelayLine(1,b1004) [Made: true]
  x1228 = RegRead(x1196) [Made: true]
  x1055 = RegNew(Const(0)) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1330 = FixSLA(x1104,Const(6)) [Made: true]
  x1323 = FixSLA(x946,Const(6)) [Made: true]
  x917 = RegRead(x880) [Made: true]
  x1313 = RegRead(x1056) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1191 = StreamInNew(BurstAckBus) [Made: true]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None) [Made: true]
  x949 = FixSub(x1322,x947) [Made: true]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: true]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None) [Made: true]
  x1319 = RegRead(x916) [Made: true]
  b969 [Made: true]
  x1347 = DelayLine(1,x994) [Made: true]
  x1013 = FixMin(Const(16),x1012) [Made: true]
  x1398 = DelayLine(10,b1162) [Made: true]
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None) [Made: true]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1100 = FixSub(x1328,x1098) [Made: true]
  x1232 = And(x1229,x1231) [Made: true]
  b924 [Made: true]
  x1373 = DelayLine(1,x1102) [Made: true]
  x1040 = FixToFix(x1326,TRUE,_64,_0) [Made: true]
  x1109 = FixAdd(x1107,x1369) [Made: true]
  x1334 = ParallelPipe(Set(),Block(Const(()))) [Made: true]
  b1136 [Made: true]
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None) [Made: true]
  x937 = StreamInNew(BurstDataBus()) [Made: true]
  x1383 = DelayLine(6,x1170) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: true]
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1)) [Made: true]
  x1183 = FixAdd(x1172,x1182) [Made: true]
  x1051 = CounterChainNew(List(x1050)) [Made: true]
  x981 = UnitPipe(Set(b969),Block(Const(())),None) [Made: true]
  x1169 = FixSLA(b1156,Const(4)) [Made: true]
  x1377 = DelayLine(2,x1142) [Made: true]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x956 = FixToFix(x1323,TRUE,_64,_0) [Made: true]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  b1119 [Made: true]
  x1394 = DelayLine(10,b1005) [Made: true]
  x1351 = DelayLine(1,b1004) [Made: true]
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348))) [Made: true]
  x1345 = DelayLine(1,x993) [Made: true]
  x988 = FixLeq(x987,b985) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1104 = FixDivSRA(x1103,Const(4)) [Made: true]
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  x920 = RegWrite(x916,x919,Set()) [Made: true]
  x942 = FixAdd(b924,b940) [Made: true]
  b925 [Made: true]
  x1306 = RegRead(x878) [Made: true]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1338 = DelayLine(8,x950) [Made: true]
  x1311 = RegRead(x916) [Made: true]
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1)) [Made: true]
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356))) [Made: true]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1387 = DelayLine(7,b914) [Made: true]
  x957 = DRAMAddress(x900) [Made: true]
  b1091 [Made: true]
  x1343 = DelayLine(1,x951) [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: true]
  x1042 = FixAdd(x1040,x1354) [Made: true]
  x952 = FixAdd(x951,Const(15)) [Made: true]
  x1355 = DelayLine(1,x1042) [Made: true]
  x1123 = RegNew(Const(0)) [Made: true]
  x1174 = FixAdd(x1169,b1166) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x1370 = DelayLine(1,x1109) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x916 = RegNew(Const(0)) [Made: true]
  x1365 = DelayLine(2,b1053) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1178 = FixSLA(b1166,Const(4)) [Made: true]
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1)) [Made: true]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  x1027 = RegRead(x879) [Made: true]
  b1195 [Made: true]
  x1407 = DelayLine(1,x1235) [Made: true]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1392 = DelayLine(1,b1157) [Made: true]
  x974 = VecApply(x973,0) [Made: true]
  x1012 = FixSub(x1011,b1004) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1350 = DelayLine(2,x991) [Made: true]
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1)) [Made: true]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1328 = FixFMA(x1093,x1367,x1366) [Made: true]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: true]
  x1064 = RegWrite(x1056,x1063,Set()) [Made: true]
  x1111 = DRAMIsAlloc(x906) [Made: true]
  b1227 [Made: true]
  x980 = RegWrite(x972,x979,Set()) [Made: true]
  x1138 = RegRead(x1121) [Made: true]
  x1118 = CounterChainNew(List(x1117)) [Made: true]
  x989 = RegRead(x971) [Made: true]
  x1397 = DelayLine(10,b1167) [Made: true]
  x1329 = FixSLA(x1097,Const(6)) [Made: true]
  x1160 = CounterChainNew(List(x1159)) [Made: true]
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365))) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1182 = FixMul(x1176,x1181) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x970 = RegNew(Const(0)) [Made: true]
  x1155 = CounterChainNew(List(x1154)) [Made: true]
  x1324 = FixSLA(x953,Const(6)) [Made: true]
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371))) [Made: true]
  x997 = FixAdd(x1346,x992) [Made: true]
  b985 [Made: true]
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1382 = DelayLine(7,b925) [Made: true]
  x1231 = FixLst(b1226,x1230) [Made: true]
  x1131 = RegWrite(x1123,x1130,Set()) [Made: true]
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1)) [Made: true]
  x1060 = RegWrite(x1054,x1059,Set()) [Made: true]
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1)) [Made: true]
  x984 = CounterChainNew(List(x983)) [Made: true]
  x1002 = CounterNew(Const(0),x1310,Const(16),Const(1)) [Made: true]
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1393 = DelayLine(1,b914) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x1318 = RegRead(x1010) [Made: true]
  x1086 = StreamOutNew(BurstCmdBus) [Made: true]
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1)) [Made: true]
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None) [Made: true]
  x1054 = RegNew(Const(0)) [Made: true]
  x1170 = FixAdd(x1169,b1161) [Made: true]
  x1035 = FixAdd(x1033,x1353) [Made: true]
  x1071 = RegRead(x1054) [Made: true]
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None) [Made: true]
  x1026 = FixAdd(b913,b1024) [Made: true]
  b1167 [Made: true]
  x953 = FixDivSRA(x952,Const(4)) [Made: true]
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1135 = CounterChainNew(List(x1134)) [Made: true]
  x965 = FringeDenseLoad(x900,x935,x937) [Made: true]
  x1103 = FixAdd(x1102,Const(15)) [Made: true]
  x1219 = RegWrite(x1196,x1206,Set()) [Made: true]
  x1374 = DelayLine(2,x1100) [Made: true]
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1)) [Made: true]
  x975 = FieldApply(x974,start) [Made: true]
  x1389 = DelayLine(1,b925) [Made: true]
  x1125 = VecApply(x1124,0) [Made: true]
  x1388 = DelayLine(1,b1005) [Made: true]
  x958 = FixAdd(x956,x1339) [Made: true]
  x1403 = DelayLine(8,x1207) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  b1226 [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x936 = FIFONew(Const(16)) [Made: true]
  x1371 = DelayLine(10,b1092) [Made: true]
  x1312 = RegRead(x916) [Made: true]
  x1058 = VecApply(x1057,0) [Made: true]
  x1107 = FixToFix(x1329,TRUE,_64,_0) [Made: true]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  b1092 [Made: true]
  x1090 = CounterChainNew(List(x1089)) [Made: true]
  x919 = FixMin(Const(16),x918) [Made: true]
  x947 = FixSLA(x946,Const(4)) [Made: true]
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1)) [Made: true]
  x1356 = DelayLine(10,b1025) [Made: true]
  x979 = FieldApply(x974,size) [Made: true]
  b1194 [Made: true]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x900 = DRAMHostNew(List(x898, x899),Const(0)) [Made: false]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1)) [Made: true]
  x1011 = RegRead(x879) [Made: true]
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None) [Made: true]
  x1349 = DelayLine(2,b986) [Made: true]
  x990 = FixLst(b985,x989) [Made: true]
  x996 = FixSLA(b968,Const(4)) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x880 = ArgInNew(Const(0)) [Made: false]
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true)))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: true]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1307 = RegRead(x927) [Made: true]
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  x1339 = DelayLine(7,x957) [Made: true]
  b1162 [Made: true]
  x1325 = FixFMA(x1026,x1352,x1351) [Made: true]
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None) [Made: true]
  x1344 = DelayLine(2,x949) [Made: true]
  x943 = RegRead(x880) [Made: true]
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1)) [Made: true]
  x1381 = DelayLine(7,b1005) [Made: true]
  x932 = UnitPipe(Set(b925, b914),Block(Const(())),None) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371))) [Made: true]
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1)) [Made: true]
  x1198 = RegNew(Const(0)) [Made: true]
  x1396 = DelayLine(9,x1170) [Made: true]
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true)))) [Made: true]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1044 = DRAMIsAlloc(x903) [Made: true]
  x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1176 = VecApply(x1175,0) [Made: true]
  b986 [Made: true]
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373))) [Made: true]
  x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1102 = FixAdd(x1100,x1368) [Made: true]
  x922 = CounterNew(Const(0),x1306,Const(16),Const(1)) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1034 = RegRead(x1010) [Made: true]
  b1166 [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x927 = RegNew(Const(0)) [Made: true]
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1)) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  x939 = CounterChainNew(List(x938)) [Made: true]
  x1340 = DelayLine(1,x958) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  b968 [Made: true]
  x1181 = VecApply(x1180,0) [Made: true]
  x1049 = FringeDenseLoad(x903,x1019,x1021) [Made: true]
  x1003 = CounterChainNew(List(x1002)) [Made: true]
  b1025 [Made: true]
  b1070 [Made: true]
  b1156 [Made: true]
  x1225 = CounterChainNew(List(x1224)) [Made: true]
  x1400 = DelayLine(10,b914) [Made: true]
  x971 = RegNew(Const(0)) [Made: true]
  x954 = FixSLA(x953,Const(4)) [Made: true]
  x1368 = DelayLine(8,x1101) [Made: true]
  x1230 = RegRead(x1197) [Made: true]
  x1098 = FixSLA(x1097,Const(4)) [Made: true]
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969))) [Made: true]
  b1053 [Made: true]
  x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None) [Made: true]
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None) [Made: true]
  x1038 = FixSLA(x1037,Const(4)) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1317 = RegRead(x927) [Made: true]
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x951 = FixAdd(x949,x1338) [Made: true]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406))) [Made: true]
  x1336 = DelayLine(1,x943) [Made: true]
  x1220 = RegWrite(x1197,x1208,Set()) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1358 = DelayLine(2,x1033) [Made: true]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1023 = CounterChainNew(List(x1022)) [Made: true]
  x1221 = RegWrite(x1198,x1211,Set()) [Made: true]
  x1353 = DelayLine(8,x1034) [Made: true]
  b1052 [Made: true]
  x1094 = RegRead(x879) [Made: true]
  x978 = RegWrite(x971,x977,Set()) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1372 = DelayLine(10,x1111) [Made: true]
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411))) [Made: true]
  x991 = And(x988,x990) [Made: true]
  x1316 = RegRead(x1123) [Made: true]
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None) [Made: true]
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x931 = RegWrite(x927,x930,Set()) [Made: true]
  b1157 [Made: true]
  x1321 = RegRead(x1198) [Made: true]
  x976 = RegWrite(x970,x975,Set()) [Made: true]
  x903 = DRAMHostNew(List(x901, x902),Const(0)) [Made: false]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1126 = FieldApply(x1125,start) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: true]
  x1010 = RegNew(Const(0)) [Made: true]
  x1390 = DelayLine(1,b1167) [Made: true]
  x1108 = DRAMAddress(x906) [Made: true]
  x1326 = FixSLA(x1030,Const(6)) [Made: true]
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342))) [Made: true]
  x1385 = DelayLine(7,b1162) [Made: true]
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342))) [Made: true]
  x1341 = DelayLine(10,x960) [Made: true]
  x1062 = RegWrite(x1055,x1061,Set()) [Made: true]
  x946 = FixDivSRA(x1322,Const(4)) [Made: true]
  x1101 = RegRead(x1010) [Made: true]
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set())) [Made: true]
  x1030 = FixDivSRA(x1325,Const(4)) [Made: true]
  b914 [Made: false]
  x929 = FixSub(x928,b924) [Made: true]
  x1308 = RegRead(x927) [Made: true]
  x1193 = CounterChainNew(List(x1192)) [Made: true]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1309 = RegRead(x972) [Made: true]
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356))) [Made: true]
  b1161 [Made: true]
  x1116 = FringeDenseLoad(x906,x1086,x1088) [Made: true]
  x1348 = DelayLine(2,b969) [Made: true]
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None) [Made: true]
  x967 = CounterChainNew(List(x966)) [Made: true]
  x950 = RegRead(x916) [Made: true]
  x1097 = FixDivSRA(x1328,Const(4)) [Made: true]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1395 = DelayLine(10,b925) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x918 = FixSub(x917,b913) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  x1314 = RegRead(x927) [Made: true]
  x1335 = UnrolledForeach(Set(b925, b914),x1003,Block(Const(())),List(List(b1004)),List(List(b1005)),None) [Made: true]
  x1172 = VecApply(x1171,0) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1056 = RegNew(Const(0)) [Made: true]
  x1033 = FixSub(x1325,x1031) [Made: true]
  x1197 = RegNew(Const(0)) [Made: true]
  x960 = DRAMIsAlloc(x900) [Made: true]
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None) [Made: true]
  x1165 = CounterChainNew(List(x1164)) [Made: true]
  x1346 = DelayLine(1,x996) [Made: true]
  x928 = RegRead(x878) [Made: true]
  x1093 = FixAdd(b924,b1091) [Made: true]
  x1236 = FixAdd(x1407,x1233) [Made: true]
  x987 = RegRead(x970) [Made: true]
  x1352 = DelayLine(1,x1027) [Made: true]
  x1129 = RegWrite(x1122,x1128,Set()) [Made: true]
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None) [Made: true]
  x1384 = DelayLine(7,b1167) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  x1019 = StreamOutNew(BurstCmdBus) [Made: true]
  x1357 = DelayLine(10,x1044) [Made: true]
  x992 = FixSub(b985,x987) [Made: true]
  b1004 [Made: true]
  x1399 = DelayLine(10,b1157) [Made: true]
  b1120 [Made: true]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1320 = RegRead(x927) [Made: true]
  x1367 = DelayLine(1,x1094) [Made: true]
  b940 [Made: true]
  x935 = StreamOutNew(BurstCmdBus) [Made: true]
  x923 = CounterChainNew(List(x922)) [Made: true]
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x1037 = FixDivSRA(x1036,Const(4)) [Made: true]
  x1088 = StreamInNew(BurstDataBus()) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
  b1069 [Made: true]
  x1014 = RegWrite(x1010,x1013,Set()) [Made: true]
  x972 = RegNew(Const(0)) [Made: true]
Inputs for x1251 are (Set(x878, b913, x879, x906, x900, x880, x903, b914) ++ Set() ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088) ++ Set()) diff Set(b913, x1306, x916, x921, x1250, x922, b914, x923) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1251 = UnrolledForeach(Set(),x912,Block(Const(())),List(List(b913)),List(List(b914)),None)
 - x1190 = StreamOutNew(BurstFullDataBus())
 - x878 = ArgInNew(Const(0))
 - x1191 = StreamInNew(BurstAckBus)
 - x937 = StreamInNew(BurstDataBus())
 - x1021 = StreamInNew(BurstDataBus())
 - x879 = ArgInNew(Const(0))
 - x1086 = StreamOutNew(BurstCmdBus)
 - x906 = DRAMHostNew(List(x904, x905),Const(0))
 - x900 = DRAMHostNew(List(x898, x899),Const(0))
 - x880 = ArgInNew(Const(0))
 - x903 = DRAMHostNew(List(x901, x902),Const(0))
 - x1189 = StreamOutNew(BurstCmdBus)
 - x1019 = StreamOutNew(BurstCmdBus)
 - x935 = StreamOutNew(BurstCmdBus)
 - x1088 = StreamInNew(BurstDataBus())
 - x1190
 - x878_M
 - x1191
 - x937
 - x1021
 - x879_N
 - x1086
 - x906_c
 - x900_a
 - x880_K
 - x903_b
 - x1189
 - x1019
 - x935
 - x1088
Stms:
  x917 = RegRead(x880)
  x918 = FixSub(x917,b913)
  x919 = FixMin(Const(16),x918)
  x920 = RegWrite(x916,x919,Set())
Used:
  b913 [Made: false]
  x917 = RegRead(x880) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x919 = FixMin(Const(16),x918) [Made: true]
  x880 = ArgInNew(Const(0)) [Made: false]
  x918 = FixSub(x917,b913) [Made: true]
Inputs for x921 are (Set(b914, b913, x916, x880) ++ Set(x916) ++ Set() ++ Set()) diff Set(x917, x920) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x917 = RegRead(x880)
  x918 = FixSub(x917,b913)
  x919 = FixMin(Const(16),x918)
  x920 = RegWrite(x916,x919,Set())
Used:
  b913 [Made: false]
  x917 = RegRead(x880) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x919 = FixMin(Const(16),x918) [Made: true]
  x880 = ArgInNew(Const(0)) [Made: false]
  x918 = FixSub(x917,b913) [Made: true]
Inputs for x921 are (Set(b914, b913, x916, x880) ++ Set(x916) ++ Set() ++ Set()) diff Set(x917, x920) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x921 = UnitPipe(Set(b914),Block(Const(())),None)
 - b914
 - b913
 - x916 = RegNew(Const(0))
 - x880 = ArgInNew(Const(0))
 - b914
 - b913
 - x916_reg
 - x880_K
Stms:
  x1322 = FixFMA(x942,x1336,x1337)
  x1036 = FixAdd(x1035,Const(15))
  x1337 = DelayLine(1,b913)
  x1411 = DelayLine(4,b1227)
  x1369 = DelayLine(7,x1108)
  x1190 = StreamOutNew(BurstFullDataBus())
  x1105 = FixSLA(x1104,Const(4))
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1031 = FixSLA(x1030,Const(4))
  x1315 = RegRead(x927)
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343)))
  x1179 = FixAdd(x1178,b1161)
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true))))
  x1200 = RegRead(x879)
  x977 = FieldApply(x974,end)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1068 = CounterChainNew(List(x1067))
  x994 = VecApply(x1345,0)
  x1401 = DelayLine(1,b1004)
  x1073 = RegRead(x1055)
  x1142 = And(x1139,x1141)
  x1041 = DRAMAddress(x903)
  x1078 = VecApply(x1360,0)
  x1310 = RegRead(x879)
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1))
  x1233 = FixSub(b1226,x1228)
  x1327 = FixSLA(x1037,Const(6))
  x1342 = DelayLine(10,b941)
  x1063 = FieldApply(x1058,size)
  x1354 = DelayLine(7,x1041)
  x1222 = UnitPipe(Set(),Block(Const(())),None)
  x930 = FixMin(Const(16),x929)
  x1196 = RegNew(Const(0))
  x1001 = UnitPipe(Set(b925, b914),Block(Const(())),None)
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191)
  x1127 = RegWrite(x1121,x1126,Set())
  x1391 = DelayLine(1,b1162)
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359)))
  x1359 = DelayLine(1,x1035)
  x1386 = DelayLine(7,b1157)
  x1366 = DelayLine(1,b1004)
  x1228 = RegRead(x1196)
  x1055 = RegNew(Const(0))
  x1409 = DelayLine(2,b1227)
  x1330 = FixSLA(x1104,Const(6))
  x1323 = FixSLA(x946,Const(6))
  x1313 = RegRead(x1056)
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1191 = StreamInNew(BurstAckBus)
  x1059 = FieldApply(x1058,start)
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
  x949 = FixSub(x1322,x947)
  x1379 = DelayLine(1,x1145)
  x1087 = FIFONew(Const(16))
  x1147 = FixSLA(b1119,Const(4))
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None)
  x1319 = RegRead(x916)
  x1347 = DelayLine(1,x994)
  x1013 = FixMin(Const(16),x1012)
  x1398 = DelayLine(10,b1162)
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None)
  x1362 = DelayLine(1,x1078)
  x1100 = FixSub(x1328,x1098)
  x1232 = And(x1229,x1231)
  x1373 = DelayLine(1,x1102)
  x1040 = FixToFix(x1326,TRUE,_64,_0)
  x1109 = FixAdd(x1107,x1369)
  x1334 = ParallelPipe(Set(),Block(Const(())))
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
  x937 = StreamInNew(BurstDataBus())
  x1383 = DelayLine(6,x1170)
  x1020 = FIFONew(Const(16))
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1))
  x1183 = FixAdd(x1172,x1182)
  x1051 = CounterChainNew(List(x1050))
  x981 = UnitPipe(Set(b969),Block(Const(())),None)
  x1169 = FixSLA(b1156,Const(4))
  x1377 = DelayLine(2,x1142)
  x1215 = FixAdd(x1213,x1404)
  x956 = FixToFix(x1323,TRUE,_64,_0)
  x1072 = FixLeq(x1071,b1069)
  x1394 = DelayLine(10,b1005)
  x1351 = DelayLine(1,b1004)
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348)))
  x1345 = DelayLine(1,x993)
  x988 = FixLeq(x987,b985)
  x1405 = DelayLine(1,x1215)
  x1104 = FixDivSRA(x1103,Const(4))
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1074 = FixLst(b1069,x1073)
  x1206 = FixSub(x1331,x1204)
  x942 = FixAdd(b924,b940)
  x1199 = FixAdd(b924,b1194)
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1338 = DelayLine(8,x950)
  x1311 = RegRead(x916)
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1))
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356)))
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1387 = DelayLine(7,b914)
  x957 = DRAMAddress(x900)
  x1343 = DelayLine(1,x951)
  x1021 = StreamInNew(BurstDataBus())
  x1042 = FixAdd(x1040,x1354)
  x952 = FixAdd(x951,Const(15))
  x1355 = DelayLine(1,x1042)
  x1123 = RegNew(Const(0))
  x1174 = FixAdd(x1169,b1166)
  x1217 = DRAMIsAlloc(x906)
  x1370 = DelayLine(1,x1109)
  x1238 = VecApply(x1237,0)
  x1365 = DelayLine(2,b1053)
  x1178 = FixSLA(b1166,Const(4))
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1))
  x1210 = FixDivSRA(x1209,Const(4))
  x1027 = RegRead(x879)
  x1407 = DelayLine(1,x1235)
  x1128 = FieldApply(x1125,end)
  x1392 = DelayLine(1,b1157)
  x974 = VecApply(x973,0)
  x1012 = FixSub(x1011,b1004)
  x1402 = DelayLine(1,x1200)
  x1360 = DelayLine(1,x1077)
  x1350 = DelayLine(2,x991)
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1))
  x1143 = FixSub(b1136,x1138)
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1328 = FixFMA(x1093,x1367,x1366)
  x1375 = DelayLine(1,x1144)
  x1121 = RegNew(Const(0))
  x1064 = RegWrite(x1056,x1063,Set())
  x1111 = DRAMIsAlloc(x906)
  x980 = RegWrite(x972,x979,Set())
  x1138 = RegRead(x1121)
  x1118 = CounterChainNew(List(x1117))
  x989 = RegRead(x971)
  x1397 = DelayLine(10,b1167)
  x1329 = FixSLA(x1097,Const(6))
  x1160 = CounterChainNew(List(x1159))
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1182 = FixMul(x1176,x1181)
  x1075 = And(x1072,x1074)
  x1214 = DRAMAddress(x906)
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1207 = RegRead(x1010)
  x970 = RegNew(Const(0))
  x1155 = CounterChainNew(List(x1154))
  x1324 = FixSLA(x953,Const(6))
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371)))
  x997 = FixAdd(x1346,x992)
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1382 = DelayLine(7,b925)
  x1231 = FixLst(b1226,x1230)
  x1131 = RegWrite(x1123,x1130,Set())
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1))
  x1060 = RegWrite(x1054,x1059,Set())
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1))
  x984 = CounterChainNew(List(x983))
  x1002 = CounterNew(Const(0),x1310,Const(16),Const(1))
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1393 = DelayLine(1,b914)
  x1333 = FixSLA(x1210,Const(6))
  x1318 = RegRead(x1010)
  x1086 = StreamOutNew(BurstCmdBus)
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1))
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
  x1054 = RegNew(Const(0))
  x1170 = FixAdd(x1169,b1161)
  x1035 = FixAdd(x1033,x1353)
  x1071 = RegRead(x1054)
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None)
  x1026 = FixAdd(b913,b1024)
  x953 = FixDivSRA(x952,Const(4))
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1135 = CounterChainNew(List(x1134))
  x965 = FringeDenseLoad(x900,x935,x937)
  x1103 = FixAdd(x1102,Const(15))
  x1219 = RegWrite(x1196,x1206,Set())
  x1374 = DelayLine(2,x1100)
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1))
  x975 = FieldApply(x974,start)
  x1389 = DelayLine(1,b925)
  x1125 = VecApply(x1124,0)
  x1388 = DelayLine(1,b1005)
  x958 = FixAdd(x956,x1339)
  x1403 = DelayLine(8,x1207)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1139 = FixLeq(x1138,b1136)
  x936 = FIFONew(Const(16))
  x1371 = DelayLine(10,b1092)
  x1312 = RegRead(x916)
  x1058 = VecApply(x1057,0)
  x1107 = FixToFix(x1329,TRUE,_64,_0)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1332 = FixSLA(x1203,Const(6))
  x1090 = CounterChainNew(List(x1089))
  x947 = FixSLA(x946,Const(4))
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1))
  x1356 = DelayLine(10,b1025)
  x979 = FieldApply(x974,size)
  x1209 = FixAdd(x1208,Const(15))
  x1408 = DelayLine(2,x1232)
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1))
  x1011 = RegRead(x879)
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None)
  x1349 = DelayLine(2,b986)
  x990 = FixLst(b985,x989)
  x996 = FixSLA(b968,Const(4))
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true))))
  x1122 = RegNew(Const(0))
  x1376 = DelayLine(1,x1147)
  x1307 = RegRead(x927)
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1080 = FixSLA(b1052,Const(4))
  x1339 = DelayLine(7,x957)
  x1325 = FixFMA(x1026,x1352,x1351)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None)
  x1344 = DelayLine(2,x949)
  x943 = RegRead(x880)
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1))
  x1381 = DelayLine(7,b1005)
  x932 = UnitPipe(Set(b925, b914),Block(Const(())),None)
  x1061 = FieldApply(x1058,end)
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371)))
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]])
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1))
  x1198 = RegNew(Const(0))
  x1396 = DelayLine(9,x1170)
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true))))
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1044 = DRAMIsAlloc(x903)
  x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1176 = VecApply(x1175,0)
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373)))
  x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None)
  x1364 = DelayLine(2,b1070)
  x1102 = FixAdd(x1100,x1368)
  x1076 = FixSub(b1069,x1071)
  x1034 = RegRead(x1010)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x927 = RegNew(Const(0))
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1))
  x1081 = FixAdd(x1361,x1076)
  x939 = CounterChainNew(List(x938))
  x1340 = DelayLine(1,x958)
  x1145 = VecApply(x1375,0)
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1181 = VecApply(x1180,0)
  x1049 = FringeDenseLoad(x903,x1019,x1021)
  x1003 = CounterChainNew(List(x1002))
  x1225 = CounterChainNew(List(x1224))
  x1400 = DelayLine(10,b914)
  x971 = RegNew(Const(0))
  x954 = FixSLA(x953,Const(4))
  x1368 = DelayLine(8,x1101)
  x1230 = RegRead(x1197)
  x1098 = FixSLA(x1097,Const(4))
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969)))
  x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None)
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None)
  x1038 = FixSLA(x1037,Const(4))
  x1235 = FixSLA(b1194,Const(4))
  x1317 = RegRead(x927)
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x951 = FixAdd(x949,x1338)
  x1130 = FieldApply(x1125,size)
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1336 = DelayLine(1,x943)
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1358 = DelayLine(2,x1033)
  x1141 = FixLst(b1136,x1140)
  x1023 = CounterChainNew(List(x1022))
  x1221 = RegWrite(x1198,x1211,Set())
  x1353 = DelayLine(8,x1034)
  x1094 = RegRead(x879)
  x978 = RegWrite(x971,x977,Set())
  x1140 = RegRead(x1122)
  x1372 = DelayLine(10,x1111)
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x991 = And(x988,x990)
  x1316 = RegRead(x1123)
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None)
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x931 = RegWrite(x927,x930,Set())
  x1321 = RegRead(x1198)
  x976 = RegWrite(x970,x975,Set())
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1126 = FieldApply(x1125,start)
  x1189 = StreamOutNew(BurstCmdBus)
  x1010 = RegNew(Const(0))
  x1390 = DelayLine(1,b1167)
  x1108 = DRAMAddress(x906)
  x1326 = FixSLA(x1030,Const(6))
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342)))
  x1385 = DelayLine(7,b1162)
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342)))
  x1341 = DelayLine(10,x960)
  x1062 = RegWrite(x1055,x1061,Set())
  x946 = FixDivSRA(x1322,Const(4))
  x1101 = RegRead(x1010)
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set()))
  x1030 = FixDivSRA(x1325,Const(4))
  x929 = FixSub(x928,b924)
  x1308 = RegRead(x927)
  x1193 = CounterChainNew(List(x1192))
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1309 = RegRead(x972)
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356)))
  x1116 = FringeDenseLoad(x906,x1086,x1088)
  x1348 = DelayLine(2,b969)
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None)
  x967 = CounterChainNew(List(x966))
  x950 = RegRead(x916)
  x1097 = FixDivSRA(x1328,Const(4))
  x1229 = FixLeq(x1228,b1226)
  x1395 = DelayLine(10,b925)
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1363 = DelayLine(2,x1075)
  x1314 = RegRead(x927)
  x1335 = UnrolledForeach(Set(b925, b914),x1003,Block(Const(())),List(List(b1004)),List(List(b1005)),None)
  x1172 = VecApply(x1171,0)
  x1410 = DelayLine(4,x1232)
  x1056 = RegNew(Const(0))
  x1033 = FixSub(x1325,x1031)
  x1197 = RegNew(Const(0))
  x960 = DRAMIsAlloc(x900)
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
  x1165 = CounterChainNew(List(x1164))
  x1346 = DelayLine(1,x996)
  x928 = RegRead(x878)
  x1093 = FixAdd(b924,b1091)
  x1236 = FixAdd(x1407,x1233)
  x987 = RegRead(x970)
  x1352 = DelayLine(1,x1027)
  x1129 = RegWrite(x1122,x1128,Set())
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None)
  x1384 = DelayLine(7,b1167)
  x1378 = DelayLine(2,b1137)
  x1019 = StreamOutNew(BurstCmdBus)
  x1357 = DelayLine(10,x1044)
  x992 = FixSub(b985,x987)
  x1399 = DelayLine(10,b1157)
  x1331 = FixFMA(x1199,x1402,x1401)
  x1320 = RegRead(x927)
  x1367 = DelayLine(1,x1094)
  x935 = StreamOutNew(BurstCmdBus)
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1037 = FixDivSRA(x1036,Const(4))
  x1088 = StreamInNew(BurstDataBus())
  x1204 = FixSLA(x1203,Const(4))
  x1014 = RegWrite(x1010,x1013,Set())
  x972 = RegNew(Const(0))
Used:
  x1322 = FixFMA(x942,x1336,x1337) [Made: true]
  x1036 = FixAdd(x1035,Const(15)) [Made: true]
  x1337 = DelayLine(1,b913) [Made: true]
  x1411 = DelayLine(4,b1227) [Made: true]
  b1024 [Made: true]
  x1369 = DelayLine(7,x1108) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: true]
  x1105 = FixSLA(x1104,Const(4)) [Made: true]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1031 = FixSLA(x1030,Const(4)) [Made: true]
  x1315 = RegRead(x927) [Made: true]
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None) [Made: true]
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343))) [Made: true]
  b941 [Made: true]
  () [Made: false]
  x1179 = FixAdd(x1178,b1161) [Made: true]
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true)))) [Made: true]
  x1200 = RegRead(x879) [Made: true]
  x977 = FieldApply(x974,end) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  b1005 [Made: true]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1068 = CounterChainNew(List(x1067)) [Made: true]
  x994 = VecApply(x1345,0) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1073 = RegRead(x1055) [Made: true]
  x1142 = And(x1139,x1141) [Made: true]
  x878 = ArgInNew(Const(0)) [Made: false]
  x1041 = DRAMAddress(x903) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  b1137 [Made: true]
  x1310 = RegRead(x879) [Made: true]
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1)) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1327 = FixSLA(x1037,Const(6)) [Made: true]
  x1342 = DelayLine(10,b941) [Made: true]
  b913 [Made: false]
  x1063 = FieldApply(x1058,size) [Made: true]
  x1354 = DelayLine(7,x1041) [Made: true]
  x1222 = UnitPipe(Set(),Block(Const(())),None) [Made: true]
  x930 = FixMin(Const(16),x929) [Made: true]
  x1196 = RegNew(Const(0)) [Made: true]
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191) [Made: true]
  x1127 = RegWrite(x1121,x1126,Set()) [Made: true]
  x1391 = DelayLine(1,b1162) [Made: true]
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359))) [Made: true]
  x1359 = DelayLine(1,x1035) [Made: true]
  x1386 = DelayLine(7,b1157) [Made: true]
  x1366 = DelayLine(1,b1004) [Made: true]
  x1228 = RegRead(x1196) [Made: true]
  x1055 = RegNew(Const(0)) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1330 = FixSLA(x1104,Const(6)) [Made: true]
  x1323 = FixSLA(x946,Const(6)) [Made: true]
  x1313 = RegRead(x1056) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1191 = StreamInNew(BurstAckBus) [Made: true]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None) [Made: true]
  x949 = FixSub(x1322,x947) [Made: true]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: true]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None) [Made: true]
  x1319 = RegRead(x916) [Made: true]
  b969 [Made: true]
  x1347 = DelayLine(1,x994) [Made: true]
  x1013 = FixMin(Const(16),x1012) [Made: true]
  x1398 = DelayLine(10,b1162) [Made: true]
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None) [Made: true]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1100 = FixSub(x1328,x1098) [Made: true]
  x1232 = And(x1229,x1231) [Made: true]
  b924 [Made: false]
  x1373 = DelayLine(1,x1102) [Made: true]
  x1040 = FixToFix(x1326,TRUE,_64,_0) [Made: true]
  x1109 = FixAdd(x1107,x1369) [Made: true]
  x1334 = ParallelPipe(Set(),Block(Const(()))) [Made: true]
  b1136 [Made: true]
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None) [Made: true]
  x937 = StreamInNew(BurstDataBus()) [Made: true]
  x1383 = DelayLine(6,x1170) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: true]
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1)) [Made: true]
  x1183 = FixAdd(x1172,x1182) [Made: true]
  x1051 = CounterChainNew(List(x1050)) [Made: true]
  x981 = UnitPipe(Set(b969),Block(Const(())),None) [Made: true]
  x1169 = FixSLA(b1156,Const(4)) [Made: true]
  x1377 = DelayLine(2,x1142) [Made: true]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x956 = FixToFix(x1323,TRUE,_64,_0) [Made: true]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  b1119 [Made: true]
  x1394 = DelayLine(10,b1005) [Made: true]
  x1351 = DelayLine(1,b1004) [Made: true]
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348))) [Made: true]
  x1345 = DelayLine(1,x993) [Made: true]
  x988 = FixLeq(x987,b985) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1104 = FixDivSRA(x1103,Const(4)) [Made: true]
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  x942 = FixAdd(b924,b940) [Made: true]
  b925 [Made: false]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1338 = DelayLine(8,x950) [Made: true]
  x1311 = RegRead(x916) [Made: true]
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1)) [Made: true]
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356))) [Made: true]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1387 = DelayLine(7,b914) [Made: true]
  x957 = DRAMAddress(x900) [Made: true]
  b1091 [Made: true]
  x1343 = DelayLine(1,x951) [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: true]
  x1042 = FixAdd(x1040,x1354) [Made: true]
  x952 = FixAdd(x951,Const(15)) [Made: true]
  x1355 = DelayLine(1,x1042) [Made: true]
  x1123 = RegNew(Const(0)) [Made: true]
  x1174 = FixAdd(x1169,b1166) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x1370 = DelayLine(1,x1109) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x1365 = DelayLine(2,b1053) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1178 = FixSLA(b1166,Const(4)) [Made: true]
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1)) [Made: true]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  x1027 = RegRead(x879) [Made: true]
  b1195 [Made: true]
  x1407 = DelayLine(1,x1235) [Made: true]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1392 = DelayLine(1,b1157) [Made: true]
  x974 = VecApply(x973,0) [Made: true]
  x1012 = FixSub(x1011,b1004) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1350 = DelayLine(2,x991) [Made: true]
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1)) [Made: true]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1328 = FixFMA(x1093,x1367,x1366) [Made: true]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: true]
  x1064 = RegWrite(x1056,x1063,Set()) [Made: true]
  x1111 = DRAMIsAlloc(x906) [Made: true]
  b1227 [Made: true]
  x980 = RegWrite(x972,x979,Set()) [Made: true]
  x1138 = RegRead(x1121) [Made: true]
  x1118 = CounterChainNew(List(x1117)) [Made: true]
  x989 = RegRead(x971) [Made: true]
  x1397 = DelayLine(10,b1167) [Made: true]
  x1329 = FixSLA(x1097,Const(6)) [Made: true]
  x1160 = CounterChainNew(List(x1159)) [Made: true]
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365))) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1182 = FixMul(x1176,x1181) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x970 = RegNew(Const(0)) [Made: true]
  x1155 = CounterChainNew(List(x1154)) [Made: true]
  x1324 = FixSLA(x953,Const(6)) [Made: true]
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371))) [Made: true]
  x997 = FixAdd(x1346,x992) [Made: true]
  b985 [Made: true]
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1382 = DelayLine(7,b925) [Made: true]
  x1231 = FixLst(b1226,x1230) [Made: true]
  x1131 = RegWrite(x1123,x1130,Set()) [Made: true]
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1)) [Made: true]
  x1060 = RegWrite(x1054,x1059,Set()) [Made: true]
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1)) [Made: true]
  x984 = CounterChainNew(List(x983)) [Made: true]
  x1002 = CounterNew(Const(0),x1310,Const(16),Const(1)) [Made: true]
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1393 = DelayLine(1,b914) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x1318 = RegRead(x1010) [Made: true]
  x1086 = StreamOutNew(BurstCmdBus) [Made: true]
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1)) [Made: true]
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None) [Made: true]
  x1054 = RegNew(Const(0)) [Made: true]
  x1170 = FixAdd(x1169,b1161) [Made: true]
  x1035 = FixAdd(x1033,x1353) [Made: true]
  x1071 = RegRead(x1054) [Made: true]
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None) [Made: true]
  x1026 = FixAdd(b913,b1024) [Made: true]
  b1167 [Made: true]
  x953 = FixDivSRA(x952,Const(4)) [Made: true]
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1135 = CounterChainNew(List(x1134)) [Made: true]
  x965 = FringeDenseLoad(x900,x935,x937) [Made: true]
  x1103 = FixAdd(x1102,Const(15)) [Made: true]
  x1219 = RegWrite(x1196,x1206,Set()) [Made: true]
  x1374 = DelayLine(2,x1100) [Made: true]
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1)) [Made: true]
  x975 = FieldApply(x974,start) [Made: true]
  x1389 = DelayLine(1,b925) [Made: true]
  x1125 = VecApply(x1124,0) [Made: true]
  x1388 = DelayLine(1,b1005) [Made: true]
  x958 = FixAdd(x956,x1339) [Made: true]
  x1403 = DelayLine(8,x1207) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  b1226 [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x936 = FIFONew(Const(16)) [Made: true]
  x1371 = DelayLine(10,b1092) [Made: true]
  x1312 = RegRead(x916) [Made: true]
  x1058 = VecApply(x1057,0) [Made: true]
  x1107 = FixToFix(x1329,TRUE,_64,_0) [Made: true]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  b1092 [Made: true]
  x1090 = CounterChainNew(List(x1089)) [Made: true]
  x947 = FixSLA(x946,Const(4)) [Made: true]
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1)) [Made: true]
  x1356 = DelayLine(10,b1025) [Made: true]
  x979 = FieldApply(x974,size) [Made: true]
  b1194 [Made: true]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x900 = DRAMHostNew(List(x898, x899),Const(0)) [Made: false]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1)) [Made: true]
  x1011 = RegRead(x879) [Made: true]
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None) [Made: true]
  x1349 = DelayLine(2,b986) [Made: true]
  x990 = FixLst(b985,x989) [Made: true]
  x996 = FixSLA(b968,Const(4)) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x880 = ArgInNew(Const(0)) [Made: false]
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true)))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: true]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1307 = RegRead(x927) [Made: true]
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  x1339 = DelayLine(7,x957) [Made: true]
  b1162 [Made: true]
  x1325 = FixFMA(x1026,x1352,x1351) [Made: true]
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None) [Made: true]
  x1344 = DelayLine(2,x949) [Made: true]
  x943 = RegRead(x880) [Made: true]
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1)) [Made: true]
  x1381 = DelayLine(7,b1005) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371))) [Made: true]
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1)) [Made: true]
  x1198 = RegNew(Const(0)) [Made: true]
  x1396 = DelayLine(9,x1170) [Made: true]
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true)))) [Made: true]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1044 = DRAMIsAlloc(x903) [Made: true]
  x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1176 = VecApply(x1175,0) [Made: true]
  b986 [Made: true]
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373))) [Made: true]
  x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1102 = FixAdd(x1100,x1368) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1034 = RegRead(x1010) [Made: true]
  b1166 [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x927 = RegNew(Const(0)) [Made: true]
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1)) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  x939 = CounterChainNew(List(x938)) [Made: true]
  x1340 = DelayLine(1,x958) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  b968 [Made: true]
  x1181 = VecApply(x1180,0) [Made: true]
  x1049 = FringeDenseLoad(x903,x1019,x1021) [Made: true]
  x1003 = CounterChainNew(List(x1002)) [Made: true]
  b1025 [Made: true]
  b1070 [Made: true]
  b1156 [Made: true]
  x1225 = CounterChainNew(List(x1224)) [Made: true]
  x1400 = DelayLine(10,b914) [Made: true]
  x971 = RegNew(Const(0)) [Made: true]
  x954 = FixSLA(x953,Const(4)) [Made: true]
  x1368 = DelayLine(8,x1101) [Made: true]
  x1230 = RegRead(x1197) [Made: true]
  x1098 = FixSLA(x1097,Const(4)) [Made: true]
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969))) [Made: true]
  b1053 [Made: true]
  x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None) [Made: true]
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None) [Made: true]
  x1038 = FixSLA(x1037,Const(4)) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1317 = RegRead(x927) [Made: true]
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x951 = FixAdd(x949,x1338) [Made: true]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406))) [Made: true]
  x1336 = DelayLine(1,x943) [Made: true]
  x1220 = RegWrite(x1197,x1208,Set()) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1358 = DelayLine(2,x1033) [Made: true]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1023 = CounterChainNew(List(x1022)) [Made: true]
  x1221 = RegWrite(x1198,x1211,Set()) [Made: true]
  x1353 = DelayLine(8,x1034) [Made: true]
  b1052 [Made: true]
  x1094 = RegRead(x879) [Made: true]
  x978 = RegWrite(x971,x977,Set()) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1372 = DelayLine(10,x1111) [Made: true]
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411))) [Made: true]
  x991 = And(x988,x990) [Made: true]
  x1316 = RegRead(x1123) [Made: true]
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None) [Made: true]
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x931 = RegWrite(x927,x930,Set()) [Made: true]
  b1157 [Made: true]
  x1321 = RegRead(x1198) [Made: true]
  x976 = RegWrite(x970,x975,Set()) [Made: true]
  x903 = DRAMHostNew(List(x901, x902),Const(0)) [Made: false]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1126 = FieldApply(x1125,start) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: true]
  x1010 = RegNew(Const(0)) [Made: true]
  x1390 = DelayLine(1,b1167) [Made: true]
  x1108 = DRAMAddress(x906) [Made: true]
  x1326 = FixSLA(x1030,Const(6)) [Made: true]
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342))) [Made: true]
  x1385 = DelayLine(7,b1162) [Made: true]
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342))) [Made: true]
  x1341 = DelayLine(10,x960) [Made: true]
  x1062 = RegWrite(x1055,x1061,Set()) [Made: true]
  x946 = FixDivSRA(x1322,Const(4)) [Made: true]
  x1101 = RegRead(x1010) [Made: true]
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set())) [Made: true]
  x1030 = FixDivSRA(x1325,Const(4)) [Made: true]
  b914 [Made: false]
  x929 = FixSub(x928,b924) [Made: true]
  x1308 = RegRead(x927) [Made: true]
  x1193 = CounterChainNew(List(x1192)) [Made: true]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1309 = RegRead(x972) [Made: true]
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356))) [Made: true]
  b1161 [Made: true]
  x1116 = FringeDenseLoad(x906,x1086,x1088) [Made: true]
  x1348 = DelayLine(2,b969) [Made: true]
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None) [Made: true]
  x967 = CounterChainNew(List(x966)) [Made: true]
  x950 = RegRead(x916) [Made: true]
  x1097 = FixDivSRA(x1328,Const(4)) [Made: true]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1395 = DelayLine(10,b925) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  x1314 = RegRead(x927) [Made: true]
  x1172 = VecApply(x1171,0) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1056 = RegNew(Const(0)) [Made: true]
  x1033 = FixSub(x1325,x1031) [Made: true]
  x1197 = RegNew(Const(0)) [Made: true]
  x960 = DRAMIsAlloc(x900) [Made: true]
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None) [Made: true]
  x1165 = CounterChainNew(List(x1164)) [Made: true]
  x1346 = DelayLine(1,x996) [Made: true]
  x928 = RegRead(x878) [Made: true]
  x1093 = FixAdd(b924,b1091) [Made: true]
  x1236 = FixAdd(x1407,x1233) [Made: true]
  x987 = RegRead(x970) [Made: true]
  x1352 = DelayLine(1,x1027) [Made: true]
  x1129 = RegWrite(x1122,x1128,Set()) [Made: true]
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None) [Made: true]
  x1384 = DelayLine(7,b1167) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  x1019 = StreamOutNew(BurstCmdBus) [Made: true]
  x1357 = DelayLine(10,x1044) [Made: true]
  x992 = FixSub(b985,x987) [Made: true]
  b1004 [Made: true]
  x1399 = DelayLine(10,b1157) [Made: true]
  b1120 [Made: true]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1320 = RegRead(x927) [Made: true]
  x1367 = DelayLine(1,x1094) [Made: true]
  b940 [Made: true]
  x935 = StreamOutNew(BurstCmdBus) [Made: true]
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x1037 = FixDivSRA(x1036,Const(4)) [Made: true]
  x1088 = StreamInNew(BurstDataBus()) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
  b1069 [Made: true]
  x1014 = RegWrite(x1010,x1013,Set()) [Made: true]
  x972 = RegNew(Const(0)) [Made: true]
Inputs for x1250 are (Set(x878, b913, b924, b925, x916, x879, x906, x900, x880, x903, b914) ++ Set(x916) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088) ++ Set()) diff Set(x1310, x1001, x934, b924, b925, x1002, x932, x927, x1003, x1335) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1322 = FixFMA(x942,x1336,x1337)
  x1036 = FixAdd(x1035,Const(15))
  x1337 = DelayLine(1,b913)
  x1411 = DelayLine(4,b1227)
  x1369 = DelayLine(7,x1108)
  x1190 = StreamOutNew(BurstFullDataBus())
  x1105 = FixSLA(x1104,Const(4))
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1031 = FixSLA(x1030,Const(4))
  x1315 = RegRead(x927)
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343)))
  x1179 = FixAdd(x1178,b1161)
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true))))
  x1200 = RegRead(x879)
  x977 = FieldApply(x974,end)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1068 = CounterChainNew(List(x1067))
  x994 = VecApply(x1345,0)
  x1401 = DelayLine(1,b1004)
  x1073 = RegRead(x1055)
  x1142 = And(x1139,x1141)
  x1041 = DRAMAddress(x903)
  x1078 = VecApply(x1360,0)
  x1310 = RegRead(x879)
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1))
  x1233 = FixSub(b1226,x1228)
  x1327 = FixSLA(x1037,Const(6))
  x1342 = DelayLine(10,b941)
  x1063 = FieldApply(x1058,size)
  x1354 = DelayLine(7,x1041)
  x1222 = UnitPipe(Set(),Block(Const(())),None)
  x930 = FixMin(Const(16),x929)
  x1196 = RegNew(Const(0))
  x1001 = UnitPipe(Set(b925, b914),Block(Const(())),None)
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191)
  x1127 = RegWrite(x1121,x1126,Set())
  x1391 = DelayLine(1,b1162)
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359)))
  x1359 = DelayLine(1,x1035)
  x1386 = DelayLine(7,b1157)
  x1366 = DelayLine(1,b1004)
  x1228 = RegRead(x1196)
  x1055 = RegNew(Const(0))
  x1409 = DelayLine(2,b1227)
  x1330 = FixSLA(x1104,Const(6))
  x1323 = FixSLA(x946,Const(6))
  x1313 = RegRead(x1056)
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1191 = StreamInNew(BurstAckBus)
  x1059 = FieldApply(x1058,start)
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
  x949 = FixSub(x1322,x947)
  x1379 = DelayLine(1,x1145)
  x1087 = FIFONew(Const(16))
  x1147 = FixSLA(b1119,Const(4))
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None)
  x1319 = RegRead(x916)
  x1347 = DelayLine(1,x994)
  x1013 = FixMin(Const(16),x1012)
  x1398 = DelayLine(10,b1162)
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None)
  x1362 = DelayLine(1,x1078)
  x1100 = FixSub(x1328,x1098)
  x1232 = And(x1229,x1231)
  x1373 = DelayLine(1,x1102)
  x1040 = FixToFix(x1326,TRUE,_64,_0)
  x1109 = FixAdd(x1107,x1369)
  x1334 = ParallelPipe(Set(),Block(Const(())))
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
  x937 = StreamInNew(BurstDataBus())
  x1383 = DelayLine(6,x1170)
  x1020 = FIFONew(Const(16))
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1))
  x1183 = FixAdd(x1172,x1182)
  x1051 = CounterChainNew(List(x1050))
  x981 = UnitPipe(Set(b969),Block(Const(())),None)
  x1169 = FixSLA(b1156,Const(4))
  x1377 = DelayLine(2,x1142)
  x1215 = FixAdd(x1213,x1404)
  x956 = FixToFix(x1323,TRUE,_64,_0)
  x1072 = FixLeq(x1071,b1069)
  x1394 = DelayLine(10,b1005)
  x1351 = DelayLine(1,b1004)
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348)))
  x1345 = DelayLine(1,x993)
  x988 = FixLeq(x987,b985)
  x1405 = DelayLine(1,x1215)
  x1104 = FixDivSRA(x1103,Const(4))
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1074 = FixLst(b1069,x1073)
  x1206 = FixSub(x1331,x1204)
  x942 = FixAdd(b924,b940)
  x1199 = FixAdd(b924,b1194)
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1338 = DelayLine(8,x950)
  x1311 = RegRead(x916)
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1))
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356)))
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1387 = DelayLine(7,b914)
  x957 = DRAMAddress(x900)
  x1343 = DelayLine(1,x951)
  x1021 = StreamInNew(BurstDataBus())
  x1042 = FixAdd(x1040,x1354)
  x952 = FixAdd(x951,Const(15))
  x1355 = DelayLine(1,x1042)
  x1123 = RegNew(Const(0))
  x1174 = FixAdd(x1169,b1166)
  x1217 = DRAMIsAlloc(x906)
  x1370 = DelayLine(1,x1109)
  x1238 = VecApply(x1237,0)
  x1365 = DelayLine(2,b1053)
  x1178 = FixSLA(b1166,Const(4))
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1))
  x1210 = FixDivSRA(x1209,Const(4))
  x1027 = RegRead(x879)
  x1407 = DelayLine(1,x1235)
  x1128 = FieldApply(x1125,end)
  x1392 = DelayLine(1,b1157)
  x974 = VecApply(x973,0)
  x1012 = FixSub(x1011,b1004)
  x1402 = DelayLine(1,x1200)
  x1360 = DelayLine(1,x1077)
  x1350 = DelayLine(2,x991)
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1))
  x1143 = FixSub(b1136,x1138)
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1328 = FixFMA(x1093,x1367,x1366)
  x1375 = DelayLine(1,x1144)
  x1121 = RegNew(Const(0))
  x1064 = RegWrite(x1056,x1063,Set())
  x1111 = DRAMIsAlloc(x906)
  x980 = RegWrite(x972,x979,Set())
  x1138 = RegRead(x1121)
  x1118 = CounterChainNew(List(x1117))
  x989 = RegRead(x971)
  x1397 = DelayLine(10,b1167)
  x1329 = FixSLA(x1097,Const(6))
  x1160 = CounterChainNew(List(x1159))
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1182 = FixMul(x1176,x1181)
  x1075 = And(x1072,x1074)
  x1214 = DRAMAddress(x906)
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1207 = RegRead(x1010)
  x970 = RegNew(Const(0))
  x1155 = CounterChainNew(List(x1154))
  x1324 = FixSLA(x953,Const(6))
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371)))
  x997 = FixAdd(x1346,x992)
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1382 = DelayLine(7,b925)
  x1231 = FixLst(b1226,x1230)
  x1131 = RegWrite(x1123,x1130,Set())
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1))
  x1060 = RegWrite(x1054,x1059,Set())
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1))
  x984 = CounterChainNew(List(x983))
  x1002 = CounterNew(Const(0),x1310,Const(16),Const(1))
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1393 = DelayLine(1,b914)
  x1333 = FixSLA(x1210,Const(6))
  x1318 = RegRead(x1010)
  x1086 = StreamOutNew(BurstCmdBus)
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1))
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
  x1054 = RegNew(Const(0))
  x1170 = FixAdd(x1169,b1161)
  x1035 = FixAdd(x1033,x1353)
  x1071 = RegRead(x1054)
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None)
  x1026 = FixAdd(b913,b1024)
  x953 = FixDivSRA(x952,Const(4))
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1135 = CounterChainNew(List(x1134))
  x965 = FringeDenseLoad(x900,x935,x937)
  x1103 = FixAdd(x1102,Const(15))
  x1219 = RegWrite(x1196,x1206,Set())
  x1374 = DelayLine(2,x1100)
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1))
  x975 = FieldApply(x974,start)
  x1389 = DelayLine(1,b925)
  x1125 = VecApply(x1124,0)
  x1388 = DelayLine(1,b1005)
  x958 = FixAdd(x956,x1339)
  x1403 = DelayLine(8,x1207)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1139 = FixLeq(x1138,b1136)
  x936 = FIFONew(Const(16))
  x1371 = DelayLine(10,b1092)
  x1312 = RegRead(x916)
  x1058 = VecApply(x1057,0)
  x1107 = FixToFix(x1329,TRUE,_64,_0)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1332 = FixSLA(x1203,Const(6))
  x1090 = CounterChainNew(List(x1089))
  x947 = FixSLA(x946,Const(4))
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1))
  x1356 = DelayLine(10,b1025)
  x979 = FieldApply(x974,size)
  x1209 = FixAdd(x1208,Const(15))
  x1408 = DelayLine(2,x1232)
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1))
  x1011 = RegRead(x879)
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None)
  x1349 = DelayLine(2,b986)
  x990 = FixLst(b985,x989)
  x996 = FixSLA(b968,Const(4))
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true))))
  x1122 = RegNew(Const(0))
  x1376 = DelayLine(1,x1147)
  x1307 = RegRead(x927)
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1080 = FixSLA(b1052,Const(4))
  x1339 = DelayLine(7,x957)
  x1325 = FixFMA(x1026,x1352,x1351)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None)
  x1344 = DelayLine(2,x949)
  x943 = RegRead(x880)
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1))
  x1381 = DelayLine(7,b1005)
  x932 = UnitPipe(Set(b925, b914),Block(Const(())),None)
  x1061 = FieldApply(x1058,end)
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371)))
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]])
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1))
  x1198 = RegNew(Const(0))
  x1396 = DelayLine(9,x1170)
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true))))
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1044 = DRAMIsAlloc(x903)
  x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1176 = VecApply(x1175,0)
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373)))
  x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None)
  x1364 = DelayLine(2,b1070)
  x1102 = FixAdd(x1100,x1368)
  x1076 = FixSub(b1069,x1071)
  x1034 = RegRead(x1010)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x927 = RegNew(Const(0))
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1))
  x1081 = FixAdd(x1361,x1076)
  x939 = CounterChainNew(List(x938))
  x1340 = DelayLine(1,x958)
  x1145 = VecApply(x1375,0)
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1181 = VecApply(x1180,0)
  x1049 = FringeDenseLoad(x903,x1019,x1021)
  x1003 = CounterChainNew(List(x1002))
  x1225 = CounterChainNew(List(x1224))
  x1400 = DelayLine(10,b914)
  x971 = RegNew(Const(0))
  x954 = FixSLA(x953,Const(4))
  x1368 = DelayLine(8,x1101)
  x1230 = RegRead(x1197)
  x1098 = FixSLA(x1097,Const(4))
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969)))
  x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None)
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None)
  x1038 = FixSLA(x1037,Const(4))
  x1235 = FixSLA(b1194,Const(4))
  x1317 = RegRead(x927)
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x951 = FixAdd(x949,x1338)
  x1130 = FieldApply(x1125,size)
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1336 = DelayLine(1,x943)
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1358 = DelayLine(2,x1033)
  x1141 = FixLst(b1136,x1140)
  x1023 = CounterChainNew(List(x1022))
  x1221 = RegWrite(x1198,x1211,Set())
  x1353 = DelayLine(8,x1034)
  x1094 = RegRead(x879)
  x978 = RegWrite(x971,x977,Set())
  x1140 = RegRead(x1122)
  x1372 = DelayLine(10,x1111)
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x991 = And(x988,x990)
  x1316 = RegRead(x1123)
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None)
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x931 = RegWrite(x927,x930,Set())
  x1321 = RegRead(x1198)
  x976 = RegWrite(x970,x975,Set())
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1126 = FieldApply(x1125,start)
  x1189 = StreamOutNew(BurstCmdBus)
  x1010 = RegNew(Const(0))
  x1390 = DelayLine(1,b1167)
  x1108 = DRAMAddress(x906)
  x1326 = FixSLA(x1030,Const(6))
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342)))
  x1385 = DelayLine(7,b1162)
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342)))
  x1341 = DelayLine(10,x960)
  x1062 = RegWrite(x1055,x1061,Set())
  x946 = FixDivSRA(x1322,Const(4))
  x1101 = RegRead(x1010)
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set()))
  x1030 = FixDivSRA(x1325,Const(4))
  x929 = FixSub(x928,b924)
  x1308 = RegRead(x927)
  x1193 = CounterChainNew(List(x1192))
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1309 = RegRead(x972)
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356)))
  x1116 = FringeDenseLoad(x906,x1086,x1088)
  x1348 = DelayLine(2,b969)
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None)
  x967 = CounterChainNew(List(x966))
  x950 = RegRead(x916)
  x1097 = FixDivSRA(x1328,Const(4))
  x1229 = FixLeq(x1228,b1226)
  x1395 = DelayLine(10,b925)
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1363 = DelayLine(2,x1075)
  x1314 = RegRead(x927)
  x1335 = UnrolledForeach(Set(b925, b914),x1003,Block(Const(())),List(List(b1004)),List(List(b1005)),None)
  x1172 = VecApply(x1171,0)
  x1410 = DelayLine(4,x1232)
  x1056 = RegNew(Const(0))
  x1033 = FixSub(x1325,x1031)
  x1197 = RegNew(Const(0))
  x960 = DRAMIsAlloc(x900)
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
  x1165 = CounterChainNew(List(x1164))
  x1346 = DelayLine(1,x996)
  x928 = RegRead(x878)
  x1093 = FixAdd(b924,b1091)
  x1236 = FixAdd(x1407,x1233)
  x987 = RegRead(x970)
  x1352 = DelayLine(1,x1027)
  x1129 = RegWrite(x1122,x1128,Set())
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None)
  x1384 = DelayLine(7,b1167)
  x1378 = DelayLine(2,b1137)
  x1019 = StreamOutNew(BurstCmdBus)
  x1357 = DelayLine(10,x1044)
  x992 = FixSub(b985,x987)
  x1399 = DelayLine(10,b1157)
  x1331 = FixFMA(x1199,x1402,x1401)
  x1320 = RegRead(x927)
  x1367 = DelayLine(1,x1094)
  x935 = StreamOutNew(BurstCmdBus)
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1037 = FixDivSRA(x1036,Const(4))
  x1088 = StreamInNew(BurstDataBus())
  x1204 = FixSLA(x1203,Const(4))
  x1014 = RegWrite(x1010,x1013,Set())
  x972 = RegNew(Const(0))
Used:
  x1322 = FixFMA(x942,x1336,x1337) [Made: true]
  x1036 = FixAdd(x1035,Const(15)) [Made: true]
  x1337 = DelayLine(1,b913) [Made: true]
  x1411 = DelayLine(4,b1227) [Made: true]
  b1024 [Made: true]
  x1369 = DelayLine(7,x1108) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: true]
  x1105 = FixSLA(x1104,Const(4)) [Made: true]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1031 = FixSLA(x1030,Const(4)) [Made: true]
  x1315 = RegRead(x927) [Made: true]
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None) [Made: true]
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343))) [Made: true]
  b941 [Made: true]
  () [Made: false]
  x1179 = FixAdd(x1178,b1161) [Made: true]
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true)))) [Made: true]
  x1200 = RegRead(x879) [Made: true]
  x977 = FieldApply(x974,end) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  b1005 [Made: true]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1068 = CounterChainNew(List(x1067)) [Made: true]
  x994 = VecApply(x1345,0) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1073 = RegRead(x1055) [Made: true]
  x1142 = And(x1139,x1141) [Made: true]
  x878 = ArgInNew(Const(0)) [Made: false]
  x1041 = DRAMAddress(x903) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  b1137 [Made: true]
  x1310 = RegRead(x879) [Made: true]
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1)) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1327 = FixSLA(x1037,Const(6)) [Made: true]
  x1342 = DelayLine(10,b941) [Made: true]
  b913 [Made: false]
  x1063 = FieldApply(x1058,size) [Made: true]
  x1354 = DelayLine(7,x1041) [Made: true]
  x1222 = UnitPipe(Set(),Block(Const(())),None) [Made: true]
  x930 = FixMin(Const(16),x929) [Made: true]
  x1196 = RegNew(Const(0)) [Made: true]
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191) [Made: true]
  x1127 = RegWrite(x1121,x1126,Set()) [Made: true]
  x1391 = DelayLine(1,b1162) [Made: true]
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359))) [Made: true]
  x1359 = DelayLine(1,x1035) [Made: true]
  x1386 = DelayLine(7,b1157) [Made: true]
  x1366 = DelayLine(1,b1004) [Made: true]
  x1228 = RegRead(x1196) [Made: true]
  x1055 = RegNew(Const(0)) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1330 = FixSLA(x1104,Const(6)) [Made: true]
  x1323 = FixSLA(x946,Const(6)) [Made: true]
  x1313 = RegRead(x1056) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1191 = StreamInNew(BurstAckBus) [Made: true]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None) [Made: true]
  x949 = FixSub(x1322,x947) [Made: true]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: true]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None) [Made: true]
  x1319 = RegRead(x916) [Made: true]
  b969 [Made: true]
  x1347 = DelayLine(1,x994) [Made: true]
  x1013 = FixMin(Const(16),x1012) [Made: true]
  x1398 = DelayLine(10,b1162) [Made: true]
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None) [Made: true]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1100 = FixSub(x1328,x1098) [Made: true]
  x1232 = And(x1229,x1231) [Made: true]
  b924 [Made: false]
  x1373 = DelayLine(1,x1102) [Made: true]
  x1040 = FixToFix(x1326,TRUE,_64,_0) [Made: true]
  x1109 = FixAdd(x1107,x1369) [Made: true]
  x1334 = ParallelPipe(Set(),Block(Const(()))) [Made: true]
  b1136 [Made: true]
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None) [Made: true]
  x937 = StreamInNew(BurstDataBus()) [Made: true]
  x1383 = DelayLine(6,x1170) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: true]
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1)) [Made: true]
  x1183 = FixAdd(x1172,x1182) [Made: true]
  x1051 = CounterChainNew(List(x1050)) [Made: true]
  x981 = UnitPipe(Set(b969),Block(Const(())),None) [Made: true]
  x1169 = FixSLA(b1156,Const(4)) [Made: true]
  x1377 = DelayLine(2,x1142) [Made: true]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x956 = FixToFix(x1323,TRUE,_64,_0) [Made: true]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  b1119 [Made: true]
  x1394 = DelayLine(10,b1005) [Made: true]
  x1351 = DelayLine(1,b1004) [Made: true]
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348))) [Made: true]
  x1345 = DelayLine(1,x993) [Made: true]
  x988 = FixLeq(x987,b985) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1104 = FixDivSRA(x1103,Const(4)) [Made: true]
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  x942 = FixAdd(b924,b940) [Made: true]
  b925 [Made: false]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1338 = DelayLine(8,x950) [Made: true]
  x1311 = RegRead(x916) [Made: true]
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1)) [Made: true]
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356))) [Made: true]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1387 = DelayLine(7,b914) [Made: true]
  x957 = DRAMAddress(x900) [Made: true]
  b1091 [Made: true]
  x1343 = DelayLine(1,x951) [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: true]
  x1042 = FixAdd(x1040,x1354) [Made: true]
  x952 = FixAdd(x951,Const(15)) [Made: true]
  x1355 = DelayLine(1,x1042) [Made: true]
  x1123 = RegNew(Const(0)) [Made: true]
  x1174 = FixAdd(x1169,b1166) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x1370 = DelayLine(1,x1109) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x1365 = DelayLine(2,b1053) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1178 = FixSLA(b1166,Const(4)) [Made: true]
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1)) [Made: true]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  x1027 = RegRead(x879) [Made: true]
  b1195 [Made: true]
  x1407 = DelayLine(1,x1235) [Made: true]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1392 = DelayLine(1,b1157) [Made: true]
  x974 = VecApply(x973,0) [Made: true]
  x1012 = FixSub(x1011,b1004) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1350 = DelayLine(2,x991) [Made: true]
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1)) [Made: true]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1328 = FixFMA(x1093,x1367,x1366) [Made: true]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: true]
  x1064 = RegWrite(x1056,x1063,Set()) [Made: true]
  x1111 = DRAMIsAlloc(x906) [Made: true]
  b1227 [Made: true]
  x980 = RegWrite(x972,x979,Set()) [Made: true]
  x1138 = RegRead(x1121) [Made: true]
  x1118 = CounterChainNew(List(x1117)) [Made: true]
  x989 = RegRead(x971) [Made: true]
  x1397 = DelayLine(10,b1167) [Made: true]
  x1329 = FixSLA(x1097,Const(6)) [Made: true]
  x1160 = CounterChainNew(List(x1159)) [Made: true]
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365))) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1182 = FixMul(x1176,x1181) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x970 = RegNew(Const(0)) [Made: true]
  x1155 = CounterChainNew(List(x1154)) [Made: true]
  x1324 = FixSLA(x953,Const(6)) [Made: true]
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371))) [Made: true]
  x997 = FixAdd(x1346,x992) [Made: true]
  b985 [Made: true]
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1382 = DelayLine(7,b925) [Made: true]
  x1231 = FixLst(b1226,x1230) [Made: true]
  x1131 = RegWrite(x1123,x1130,Set()) [Made: true]
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1)) [Made: true]
  x1060 = RegWrite(x1054,x1059,Set()) [Made: true]
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1)) [Made: true]
  x984 = CounterChainNew(List(x983)) [Made: true]
  x1002 = CounterNew(Const(0),x1310,Const(16),Const(1)) [Made: true]
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1393 = DelayLine(1,b914) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x1318 = RegRead(x1010) [Made: true]
  x1086 = StreamOutNew(BurstCmdBus) [Made: true]
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1)) [Made: true]
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None) [Made: true]
  x1054 = RegNew(Const(0)) [Made: true]
  x1170 = FixAdd(x1169,b1161) [Made: true]
  x1035 = FixAdd(x1033,x1353) [Made: true]
  x1071 = RegRead(x1054) [Made: true]
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None) [Made: true]
  x1026 = FixAdd(b913,b1024) [Made: true]
  b1167 [Made: true]
  x953 = FixDivSRA(x952,Const(4)) [Made: true]
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1135 = CounterChainNew(List(x1134)) [Made: true]
  x965 = FringeDenseLoad(x900,x935,x937) [Made: true]
  x1103 = FixAdd(x1102,Const(15)) [Made: true]
  x1219 = RegWrite(x1196,x1206,Set()) [Made: true]
  x1374 = DelayLine(2,x1100) [Made: true]
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1)) [Made: true]
  x975 = FieldApply(x974,start) [Made: true]
  x1389 = DelayLine(1,b925) [Made: true]
  x1125 = VecApply(x1124,0) [Made: true]
  x1388 = DelayLine(1,b1005) [Made: true]
  x958 = FixAdd(x956,x1339) [Made: true]
  x1403 = DelayLine(8,x1207) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  b1226 [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x936 = FIFONew(Const(16)) [Made: true]
  x1371 = DelayLine(10,b1092) [Made: true]
  x1312 = RegRead(x916) [Made: true]
  x1058 = VecApply(x1057,0) [Made: true]
  x1107 = FixToFix(x1329,TRUE,_64,_0) [Made: true]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  b1092 [Made: true]
  x1090 = CounterChainNew(List(x1089)) [Made: true]
  x947 = FixSLA(x946,Const(4)) [Made: true]
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1)) [Made: true]
  x1356 = DelayLine(10,b1025) [Made: true]
  x979 = FieldApply(x974,size) [Made: true]
  b1194 [Made: true]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x900 = DRAMHostNew(List(x898, x899),Const(0)) [Made: false]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1)) [Made: true]
  x1011 = RegRead(x879) [Made: true]
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None) [Made: true]
  x1349 = DelayLine(2,b986) [Made: true]
  x990 = FixLst(b985,x989) [Made: true]
  x996 = FixSLA(b968,Const(4)) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x880 = ArgInNew(Const(0)) [Made: false]
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true)))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: true]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1307 = RegRead(x927) [Made: true]
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  x1339 = DelayLine(7,x957) [Made: true]
  b1162 [Made: true]
  x1325 = FixFMA(x1026,x1352,x1351) [Made: true]
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None) [Made: true]
  x1344 = DelayLine(2,x949) [Made: true]
  x943 = RegRead(x880) [Made: true]
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1)) [Made: true]
  x1381 = DelayLine(7,b1005) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371))) [Made: true]
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1)) [Made: true]
  x1198 = RegNew(Const(0)) [Made: true]
  x1396 = DelayLine(9,x1170) [Made: true]
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true)))) [Made: true]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1044 = DRAMIsAlloc(x903) [Made: true]
  x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1176 = VecApply(x1175,0) [Made: true]
  b986 [Made: true]
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373))) [Made: true]
  x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1102 = FixAdd(x1100,x1368) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1034 = RegRead(x1010) [Made: true]
  b1166 [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x927 = RegNew(Const(0)) [Made: true]
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1)) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  x939 = CounterChainNew(List(x938)) [Made: true]
  x1340 = DelayLine(1,x958) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  b968 [Made: true]
  x1181 = VecApply(x1180,0) [Made: true]
  x1049 = FringeDenseLoad(x903,x1019,x1021) [Made: true]
  x1003 = CounterChainNew(List(x1002)) [Made: true]
  b1025 [Made: true]
  b1070 [Made: true]
  b1156 [Made: true]
  x1225 = CounterChainNew(List(x1224)) [Made: true]
  x1400 = DelayLine(10,b914) [Made: true]
  x971 = RegNew(Const(0)) [Made: true]
  x954 = FixSLA(x953,Const(4)) [Made: true]
  x1368 = DelayLine(8,x1101) [Made: true]
  x1230 = RegRead(x1197) [Made: true]
  x1098 = FixSLA(x1097,Const(4)) [Made: true]
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969))) [Made: true]
  b1053 [Made: true]
  x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None) [Made: true]
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None) [Made: true]
  x1038 = FixSLA(x1037,Const(4)) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1317 = RegRead(x927) [Made: true]
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x951 = FixAdd(x949,x1338) [Made: true]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406))) [Made: true]
  x1336 = DelayLine(1,x943) [Made: true]
  x1220 = RegWrite(x1197,x1208,Set()) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1358 = DelayLine(2,x1033) [Made: true]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1023 = CounterChainNew(List(x1022)) [Made: true]
  x1221 = RegWrite(x1198,x1211,Set()) [Made: true]
  x1353 = DelayLine(8,x1034) [Made: true]
  b1052 [Made: true]
  x1094 = RegRead(x879) [Made: true]
  x978 = RegWrite(x971,x977,Set()) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1372 = DelayLine(10,x1111) [Made: true]
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411))) [Made: true]
  x991 = And(x988,x990) [Made: true]
  x1316 = RegRead(x1123) [Made: true]
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None) [Made: true]
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x931 = RegWrite(x927,x930,Set()) [Made: true]
  b1157 [Made: true]
  x1321 = RegRead(x1198) [Made: true]
  x976 = RegWrite(x970,x975,Set()) [Made: true]
  x903 = DRAMHostNew(List(x901, x902),Const(0)) [Made: false]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1126 = FieldApply(x1125,start) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: true]
  x1010 = RegNew(Const(0)) [Made: true]
  x1390 = DelayLine(1,b1167) [Made: true]
  x1108 = DRAMAddress(x906) [Made: true]
  x1326 = FixSLA(x1030,Const(6)) [Made: true]
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342))) [Made: true]
  x1385 = DelayLine(7,b1162) [Made: true]
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342))) [Made: true]
  x1341 = DelayLine(10,x960) [Made: true]
  x1062 = RegWrite(x1055,x1061,Set()) [Made: true]
  x946 = FixDivSRA(x1322,Const(4)) [Made: true]
  x1101 = RegRead(x1010) [Made: true]
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set())) [Made: true]
  x1030 = FixDivSRA(x1325,Const(4)) [Made: true]
  b914 [Made: false]
  x929 = FixSub(x928,b924) [Made: true]
  x1308 = RegRead(x927) [Made: true]
  x1193 = CounterChainNew(List(x1192)) [Made: true]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1309 = RegRead(x972) [Made: true]
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356))) [Made: true]
  b1161 [Made: true]
  x1116 = FringeDenseLoad(x906,x1086,x1088) [Made: true]
  x1348 = DelayLine(2,b969) [Made: true]
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None) [Made: true]
  x967 = CounterChainNew(List(x966)) [Made: true]
  x950 = RegRead(x916) [Made: true]
  x1097 = FixDivSRA(x1328,Const(4)) [Made: true]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1395 = DelayLine(10,b925) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  x1314 = RegRead(x927) [Made: true]
  x1172 = VecApply(x1171,0) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1056 = RegNew(Const(0)) [Made: true]
  x1033 = FixSub(x1325,x1031) [Made: true]
  x1197 = RegNew(Const(0)) [Made: true]
  x960 = DRAMIsAlloc(x900) [Made: true]
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None) [Made: true]
  x1165 = CounterChainNew(List(x1164)) [Made: true]
  x1346 = DelayLine(1,x996) [Made: true]
  x928 = RegRead(x878) [Made: true]
  x1093 = FixAdd(b924,b1091) [Made: true]
  x1236 = FixAdd(x1407,x1233) [Made: true]
  x987 = RegRead(x970) [Made: true]
  x1352 = DelayLine(1,x1027) [Made: true]
  x1129 = RegWrite(x1122,x1128,Set()) [Made: true]
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None) [Made: true]
  x1384 = DelayLine(7,b1167) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  x1019 = StreamOutNew(BurstCmdBus) [Made: true]
  x1357 = DelayLine(10,x1044) [Made: true]
  x992 = FixSub(b985,x987) [Made: true]
  b1004 [Made: true]
  x1399 = DelayLine(10,b1157) [Made: true]
  b1120 [Made: true]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1320 = RegRead(x927) [Made: true]
  x1367 = DelayLine(1,x1094) [Made: true]
  b940 [Made: true]
  x935 = StreamOutNew(BurstCmdBus) [Made: true]
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x1037 = FixDivSRA(x1036,Const(4)) [Made: true]
  x1088 = StreamInNew(BurstDataBus()) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
  b1069 [Made: true]
  x1014 = RegWrite(x1010,x1013,Set()) [Made: true]
  x972 = RegNew(Const(0)) [Made: true]
Inputs for x1250 are (Set(x878, b913, b924, b925, x916, x879, x906, x900, x880, x903, b914) ++ Set(x916) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088) ++ Set()) diff Set(x1310, x1001, x934, b924, b925, x1002, x932, x927, x1003, x1335) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1250 = UnrolledForeach(Set(b914),x923,Block(Const(())),List(List(b924)),List(List(b925)),None)
 - x1190 = StreamOutNew(BurstFullDataBus())
 - x878 = ArgInNew(Const(0))
 - b913
 - x1191 = StreamInNew(BurstAckBus)
 - x937 = StreamInNew(BurstDataBus())
 - x1021 = StreamInNew(BurstDataBus())
 - x916 = RegNew(Const(0))
 - x879 = ArgInNew(Const(0))
 - x1086 = StreamOutNew(BurstCmdBus)
 - x906 = DRAMHostNew(List(x904, x905),Const(0))
 - x900 = DRAMHostNew(List(x898, x899),Const(0))
 - x880 = ArgInNew(Const(0))
 - x903 = DRAMHostNew(List(x901, x902),Const(0))
 - x1189 = StreamOutNew(BurstCmdBus)
 - b914
 - x1019 = StreamOutNew(BurstCmdBus)
 - x935 = StreamOutNew(BurstCmdBus)
 - x1088 = StreamInNew(BurstDataBus())
 - x1190
 - x878_M
 - b913_chain_read_1
 - x1191
 - x937
 - x1021
 - x916_reg
 - x879_N
 - x1086
 - x906_c
 - x900_a
 - x880_K
 - x903_b
 - x1189
 - b914_chain_read_1
 - x1019
 - x935
 - x1088
Stms:
  x928 = RegRead(x878)
  x929 = FixSub(x928,b924)
  x930 = FixMin(Const(16),x929)
  x931 = RegWrite(x927,x930,Set())
Used:
  x878 = ArgInNew(Const(0)) [Made: false]
  x930 = FixMin(Const(16),x929) [Made: true]
  b924 [Made: false]
  x927 = RegNew(Const(0)) [Made: false]
  x929 = FixSub(x928,b924) [Made: true]
  x928 = RegRead(x878) [Made: true]
Inputs for x932 are (Set(x878, b924, b925, x927, b914) ++ Set(x927) ++ Set() ++ Set()) diff Set(x928, x931) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x928 = RegRead(x878)
  x929 = FixSub(x928,b924)
  x930 = FixMin(Const(16),x929)
  x931 = RegWrite(x927,x930,Set())
Used:
  x878 = ArgInNew(Const(0)) [Made: false]
  x930 = FixMin(Const(16),x929) [Made: true]
  b924 [Made: false]
  x927 = RegNew(Const(0)) [Made: false]
  x929 = FixSub(x928,b924) [Made: true]
  x928 = RegRead(x878) [Made: true]
Inputs for x932 are (Set(x878, b924, b925, x927, b914) ++ Set(x927) ++ Set() ++ Set()) diff Set(x928, x931) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x932 = UnitPipe(Set(b925, b914),Block(Const(())),None)
 - x878 = ArgInNew(Const(0))
 - b924
 - b925
 - x927 = RegNew(Const(0))
 - b914
 - x878_M
 - b924
 - b925
 - x927_reg
 - b914
Stms:
  x1322 = FixFMA(x942,x1336,x1337)
  x1337 = DelayLine(1,b913)
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343)))
  x977 = FieldApply(x974,end)
  x994 = VecApply(x1345,0)
  x1342 = DelayLine(10,b941)
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1323 = FixSLA(x946,Const(6))
  x949 = FixSub(x1322,x947)
  x1347 = DelayLine(1,x994)
  x937 = StreamInNew(BurstDataBus())
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1))
  x981 = UnitPipe(Set(b969),Block(Const(())),None)
  x956 = FixToFix(x1323,TRUE,_64,_0)
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348)))
  x1345 = DelayLine(1,x993)
  x988 = FixLeq(x987,b985)
  x942 = FixAdd(b924,b940)
  x1338 = DelayLine(8,x950)
  x957 = DRAMAddress(x900)
  x1343 = DelayLine(1,x951)
  x952 = FixAdd(x951,Const(15))
  x974 = VecApply(x973,0)
  x1350 = DelayLine(2,x991)
  x980 = RegWrite(x972,x979,Set())
  x989 = RegRead(x971)
  x970 = RegNew(Const(0))
  x1324 = FixSLA(x953,Const(6))
  x997 = FixAdd(x1346,x992)
  x984 = CounterChainNew(List(x983))
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1))
  x953 = FixDivSRA(x952,Const(4))
  x965 = FringeDenseLoad(x900,x935,x937)
  x975 = FieldApply(x974,start)
  x958 = FixAdd(x956,x1339)
  x936 = FIFONew(Const(16))
  x947 = FixSLA(x946,Const(4))
  x979 = FieldApply(x974,size)
  x1349 = DelayLine(2,b986)
  x990 = FixLst(b985,x989)
  x996 = FixSLA(b968,Const(4))
  x1307 = RegRead(x927)
  x1339 = DelayLine(7,x957)
  x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None)
  x1344 = DelayLine(2,x949)
  x943 = RegRead(x880)
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1))
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true))))
  x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None)
  x939 = CounterChainNew(List(x938))
  x1340 = DelayLine(1,x958)
  x971 = RegNew(Const(0))
  x954 = FixSLA(x953,Const(4))
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969)))
  x951 = FixAdd(x949,x1338)
  x1336 = DelayLine(1,x943)
  x978 = RegWrite(x971,x977,Set())
  x991 = And(x988,x990)
  x976 = RegWrite(x970,x975,Set())
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342)))
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342)))
  x1341 = DelayLine(10,x960)
  x946 = FixDivSRA(x1322,Const(4))
  x1308 = RegRead(x927)
  x1309 = RegRead(x972)
  x1348 = DelayLine(2,b969)
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None)
  x967 = CounterChainNew(List(x966))
  x950 = RegRead(x916)
  x960 = DRAMIsAlloc(x900)
  x1346 = DelayLine(1,x996)
  x987 = RegRead(x970)
  x992 = FixSub(b985,x987)
  x935 = StreamOutNew(BurstCmdBus)
  x972 = RegNew(Const(0))
Used:
  x1322 = FixFMA(x942,x1336,x1337) [Made: true]
  x1337 = DelayLine(1,b913) [Made: true]
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343))) [Made: true]
  b941 [Made: true]
  () [Made: false]
  x977 = FieldApply(x974,end) [Made: true]
  x994 = VecApply(x1345,0) [Made: true]
  x1342 = DelayLine(10,b941) [Made: true]
  b913 [Made: false]
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1323 = FixSLA(x946,Const(6)) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x949 = FixSub(x1322,x947) [Made: true]
  b969 [Made: true]
  x1347 = DelayLine(1,x994) [Made: true]
  b924 [Made: false]
  x937 = StreamInNew(BurstDataBus()) [Made: true]
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1)) [Made: true]
  x981 = UnitPipe(Set(b969),Block(Const(())),None) [Made: true]
  x956 = FixToFix(x1323,TRUE,_64,_0) [Made: true]
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348))) [Made: true]
  x1345 = DelayLine(1,x993) [Made: true]
  x988 = FixLeq(x987,b985) [Made: true]
  x942 = FixAdd(b924,b940) [Made: true]
  x1338 = DelayLine(8,x950) [Made: true]
  x957 = DRAMAddress(x900) [Made: true]
  x1343 = DelayLine(1,x951) [Made: true]
  x952 = FixAdd(x951,Const(15)) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x974 = VecApply(x973,0) [Made: true]
  x1350 = DelayLine(2,x991) [Made: true]
  x980 = RegWrite(x972,x979,Set()) [Made: true]
  x989 = RegRead(x971) [Made: true]
  x970 = RegNew(Const(0)) [Made: true]
  x1324 = FixSLA(x953,Const(6)) [Made: true]
  x997 = FixAdd(x1346,x992) [Made: true]
  b985 [Made: true]
  x984 = CounterChainNew(List(x983)) [Made: true]
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1)) [Made: true]
  x953 = FixDivSRA(x952,Const(4)) [Made: true]
  x975 = FieldApply(x974,start) [Made: true]
  x958 = FixAdd(x956,x1339) [Made: true]
  x936 = FIFONew(Const(16)) [Made: true]
  x947 = FixSLA(x946,Const(4)) [Made: true]
  x979 = FieldApply(x974,size) [Made: true]
  x900 = DRAMHostNew(List(x898, x899),Const(0)) [Made: false]
  x1349 = DelayLine(2,b986) [Made: true]
  x990 = FixLst(b985,x989) [Made: true]
  x996 = FixSLA(b968,Const(4)) [Made: true]
  x880 = ArgInNew(Const(0)) [Made: false]
  x1307 = RegRead(x927) [Made: true]
  x1339 = DelayLine(7,x957) [Made: true]
  x1344 = DelayLine(2,x949) [Made: true]
  x943 = RegRead(x880) [Made: true]
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1)) [Made: true]
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true)))) [Made: true]
  b986 [Made: true]
  x927 = RegNew(Const(0)) [Made: false]
  x939 = CounterChainNew(List(x938)) [Made: true]
  x1340 = DelayLine(1,x958) [Made: true]
  b968 [Made: true]
  x971 = RegNew(Const(0)) [Made: true]
  x954 = FixSLA(x953,Const(4)) [Made: true]
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969))) [Made: true]
  x951 = FixAdd(x949,x1338) [Made: true]
  x1336 = DelayLine(1,x943) [Made: true]
  x978 = RegWrite(x971,x977,Set()) [Made: true]
  x991 = And(x988,x990) [Made: true]
  x976 = RegWrite(x970,x975,Set()) [Made: true]
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342))) [Made: true]
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342))) [Made: true]
  x1341 = DelayLine(10,x960) [Made: true]
  x946 = FixDivSRA(x1322,Const(4)) [Made: true]
  x1308 = RegRead(x927) [Made: true]
  x1309 = RegRead(x972) [Made: true]
  x1348 = DelayLine(2,b969) [Made: true]
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None) [Made: true]
  x967 = CounterChainNew(List(x966)) [Made: true]
  x950 = RegRead(x916) [Made: true]
  x960 = DRAMIsAlloc(x900) [Made: true]
  x1346 = DelayLine(1,x996) [Made: true]
  x987 = RegRead(x970) [Made: true]
  x992 = FixSub(b985,x987) [Made: true]
  b940 [Made: true]
  x935 = StreamOutNew(BurstCmdBus) [Made: true]
  x972 = RegNew(Const(0)) [Made: true]
Inputs for x1001 are (Set(b913, x934, b924, b925, x916, x900, x880, x927, b914) ++ Set(x927, x934) ++ Set(x937, x900, x935) ++ Set()) diff Set(x966, x938, x965, x936, x1307, x964, x1000, x939, x1308, x967) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1322 = FixFMA(x942,x1336,x1337)
  x1337 = DelayLine(1,b913)
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343)))
  x977 = FieldApply(x974,end)
  x994 = VecApply(x1345,0)
  x1342 = DelayLine(10,b941)
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1323 = FixSLA(x946,Const(6))
  x949 = FixSub(x1322,x947)
  x1347 = DelayLine(1,x994)
  x937 = StreamInNew(BurstDataBus())
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1))
  x981 = UnitPipe(Set(b969),Block(Const(())),None)
  x956 = FixToFix(x1323,TRUE,_64,_0)
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348)))
  x1345 = DelayLine(1,x993)
  x988 = FixLeq(x987,b985)
  x942 = FixAdd(b924,b940)
  x1338 = DelayLine(8,x950)
  x957 = DRAMAddress(x900)
  x1343 = DelayLine(1,x951)
  x952 = FixAdd(x951,Const(15))
  x974 = VecApply(x973,0)
  x1350 = DelayLine(2,x991)
  x980 = RegWrite(x972,x979,Set())
  x989 = RegRead(x971)
  x970 = RegNew(Const(0))
  x1324 = FixSLA(x953,Const(6))
  x997 = FixAdd(x1346,x992)
  x984 = CounterChainNew(List(x983))
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1))
  x953 = FixDivSRA(x952,Const(4))
  x965 = FringeDenseLoad(x900,x935,x937)
  x975 = FieldApply(x974,start)
  x958 = FixAdd(x956,x1339)
  x936 = FIFONew(Const(16))
  x947 = FixSLA(x946,Const(4))
  x979 = FieldApply(x974,size)
  x1349 = DelayLine(2,b986)
  x990 = FixLst(b985,x989)
  x996 = FixSLA(b968,Const(4))
  x1307 = RegRead(x927)
  x1339 = DelayLine(7,x957)
  x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None)
  x1344 = DelayLine(2,x949)
  x943 = RegRead(x880)
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1))
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true))))
  x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None)
  x939 = CounterChainNew(List(x938))
  x1340 = DelayLine(1,x958)
  x971 = RegNew(Const(0))
  x954 = FixSLA(x953,Const(4))
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969)))
  x951 = FixAdd(x949,x1338)
  x1336 = DelayLine(1,x943)
  x978 = RegWrite(x971,x977,Set())
  x991 = And(x988,x990)
  x976 = RegWrite(x970,x975,Set())
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342)))
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342)))
  x1341 = DelayLine(10,x960)
  x946 = FixDivSRA(x1322,Const(4))
  x1308 = RegRead(x927)
  x1309 = RegRead(x972)
  x1348 = DelayLine(2,b969)
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None)
  x967 = CounterChainNew(List(x966))
  x950 = RegRead(x916)
  x960 = DRAMIsAlloc(x900)
  x1346 = DelayLine(1,x996)
  x987 = RegRead(x970)
  x992 = FixSub(b985,x987)
  x935 = StreamOutNew(BurstCmdBus)
  x972 = RegNew(Const(0))
Used:
  x1322 = FixFMA(x942,x1336,x1337) [Made: true]
  x1337 = DelayLine(1,b913) [Made: true]
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343))) [Made: true]
  b941 [Made: true]
  () [Made: false]
  x977 = FieldApply(x974,end) [Made: true]
  x994 = VecApply(x1345,0) [Made: true]
  x1342 = DelayLine(10,b941) [Made: true]
  b913 [Made: false]
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1323 = FixSLA(x946,Const(6)) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x949 = FixSub(x1322,x947) [Made: true]
  b969 [Made: true]
  x1347 = DelayLine(1,x994) [Made: true]
  b924 [Made: false]
  x937 = StreamInNew(BurstDataBus()) [Made: true]
  x966 = CounterNew(Const(0),x1308,Const(1),Const(1)) [Made: true]
  x981 = UnitPipe(Set(b969),Block(Const(())),None) [Made: true]
  x956 = FixToFix(x1323,TRUE,_64,_0) [Made: true]
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348))) [Made: true]
  x1345 = DelayLine(1,x993) [Made: true]
  x988 = FixLeq(x987,b985) [Made: true]
  x942 = FixAdd(b924,b940) [Made: true]
  x1338 = DelayLine(8,x950) [Made: true]
  x957 = DRAMAddress(x900) [Made: true]
  x1343 = DelayLine(1,x951) [Made: true]
  x952 = FixAdd(x951,Const(15)) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x974 = VecApply(x973,0) [Made: true]
  x1350 = DelayLine(2,x991) [Made: true]
  x980 = RegWrite(x972,x979,Set()) [Made: true]
  x989 = RegRead(x971) [Made: true]
  x970 = RegNew(Const(0)) [Made: true]
  x1324 = FixSLA(x953,Const(6)) [Made: true]
  x997 = FixAdd(x1346,x992) [Made: true]
  b985 [Made: true]
  x984 = CounterChainNew(List(x983)) [Made: true]
  x938 = CounterNew(Const(0),x1307,Const(1),Const(1)) [Made: true]
  x953 = FixDivSRA(x952,Const(4)) [Made: true]
  x975 = FieldApply(x974,start) [Made: true]
  x958 = FixAdd(x956,x1339) [Made: true]
  x936 = FIFONew(Const(16)) [Made: true]
  x947 = FixSLA(x946,Const(4)) [Made: true]
  x979 = FieldApply(x974,size) [Made: true]
  x900 = DRAMHostNew(List(x898, x899),Const(0)) [Made: false]
  x1349 = DelayLine(2,b986) [Made: true]
  x990 = FixLst(b985,x989) [Made: true]
  x996 = FixSLA(b968,Const(4)) [Made: true]
  x880 = ArgInNew(Const(0)) [Made: false]
  x1307 = RegRead(x927) [Made: true]
  x1339 = DelayLine(7,x957) [Made: true]
  x1344 = DelayLine(2,x949) [Made: true]
  x943 = RegRead(x880) [Made: true]
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1)) [Made: true]
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true)))) [Made: true]
  b986 [Made: true]
  x927 = RegNew(Const(0)) [Made: false]
  x939 = CounterChainNew(List(x938)) [Made: true]
  x1340 = DelayLine(1,x958) [Made: true]
  b968 [Made: true]
  x971 = RegNew(Const(0)) [Made: true]
  x954 = FixSLA(x953,Const(4)) [Made: true]
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969))) [Made: true]
  x951 = FixAdd(x949,x1338) [Made: true]
  x1336 = DelayLine(1,x943) [Made: true]
  x978 = RegWrite(x971,x977,Set()) [Made: true]
  x991 = And(x988,x990) [Made: true]
  x976 = RegWrite(x970,x975,Set()) [Made: true]
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342))) [Made: true]
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342))) [Made: true]
  x1341 = DelayLine(10,x960) [Made: true]
  x946 = FixDivSRA(x1322,Const(4)) [Made: true]
  x1308 = RegRead(x927) [Made: true]
  x1309 = RegRead(x972) [Made: true]
  x1348 = DelayLine(2,b969) [Made: true]
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None) [Made: true]
  x967 = CounterChainNew(List(x966)) [Made: true]
  x950 = RegRead(x916) [Made: true]
  x960 = DRAMIsAlloc(x900) [Made: true]
  x1346 = DelayLine(1,x996) [Made: true]
  x987 = RegRead(x970) [Made: true]
  x992 = FixSub(b985,x987) [Made: true]
  b940 [Made: true]
  x935 = StreamOutNew(BurstCmdBus) [Made: true]
  x972 = RegNew(Const(0)) [Made: true]
Inputs for x1001 are (Set(b913, x934, b924, b925, x916, x900, x880, x927, b914) ++ Set(x927, x934) ++ Set(x937, x900, x935) ++ Set()) diff Set(x966, x938, x965, x936, x1307, x964, x1000, x939, x1308, x967) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1001 = UnitPipe(Set(b925, b914),Block(Const(())),None)
 - b913
 - x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - b924
 - x937 = StreamInNew(BurstDataBus())
 - b925
 - x916 = RegNew(Const(0))
 - x900 = DRAMHostNew(List(x898, x899),Const(0))
 - x880 = ArgInNew(Const(0))
 - x927 = RegNew(Const(0))
 - b914
 - x935 = StreamOutNew(BurstCmdBus)
 - b913
 - x934_tileA_sram_0
 - b924_chain_read_1
 - x937
 - b925_chain_read_1
 - x916_reg
 - x900_a
 - x880_K
 - x927_reg
 - b914
 - x935
Stms:
  x1322 = FixFMA(x942,x1336,x1337)
  x1337 = DelayLine(1,b913)
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343)))
  x1342 = DelayLine(10,b941)
  x1323 = FixSLA(x946,Const(6))
  x949 = FixSub(x1322,x947)
  x956 = FixToFix(x1323,TRUE,_64,_0)
  x942 = FixAdd(b924,b940)
  x1338 = DelayLine(8,x950)
  x957 = DRAMAddress(x900)
  x1343 = DelayLine(1,x951)
  x952 = FixAdd(x951,Const(15))
  x1324 = FixSLA(x953,Const(6))
  x953 = FixDivSRA(x952,Const(4))
  x958 = FixAdd(x956,x1339)
  x947 = FixSLA(x946,Const(4))
  x1339 = DelayLine(7,x957)
  x1344 = DelayLine(2,x949)
  x943 = RegRead(x880)
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true))))
  x1340 = DelayLine(1,x958)
  x954 = FixSLA(x953,Const(4))
  x951 = FixAdd(x949,x1338)
  x1336 = DelayLine(1,x943)
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342)))
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342)))
  x1341 = DelayLine(10,x960)
  x946 = FixDivSRA(x1322,Const(4))
  x950 = RegRead(x916)
  x960 = DRAMIsAlloc(x900)
Used:
  x1322 = FixFMA(x942,x1336,x1337) [Made: true]
  x1337 = DelayLine(1,b913) [Made: true]
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343))) [Made: true]
  b941 [Made: false]
  x1342 = DelayLine(10,b941) [Made: true]
  b913 [Made: false]
  x1323 = FixSLA(x946,Const(6)) [Made: true]
  x949 = FixSub(x1322,x947) [Made: true]
  b924 [Made: false]
  x956 = FixToFix(x1323,TRUE,_64,_0) [Made: true]
  x942 = FixAdd(b924,b940) [Made: true]
  x1338 = DelayLine(8,x950) [Made: true]
  x957 = DRAMAddress(x900) [Made: true]
  x1343 = DelayLine(1,x951) [Made: true]
  x952 = FixAdd(x951,Const(15)) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x1324 = FixSLA(x953,Const(6)) [Made: true]
  x953 = FixDivSRA(x952,Const(4)) [Made: true]
  x958 = FixAdd(x956,x1339) [Made: true]
  x936 = FIFONew(Const(16)) [Made: false]
  x947 = FixSLA(x946,Const(4)) [Made: true]
  x900 = DRAMHostNew(List(x898, x899),Const(0)) [Made: false]
  x880 = ArgInNew(Const(0)) [Made: false]
  x1339 = DelayLine(7,x957) [Made: true]
  x1344 = DelayLine(2,x949) [Made: true]
  x943 = RegRead(x880) [Made: true]
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true)))) [Made: true]
  x1340 = DelayLine(1,x958) [Made: true]
  x954 = FixSLA(x953,Const(4)) [Made: true]
  x951 = FixAdd(x949,x1338) [Made: true]
  x1336 = DelayLine(1,x943) [Made: true]
  x1341 = DelayLine(10,x960) [Made: true]
  x946 = FixDivSRA(x1322,Const(4)) [Made: true]
  x950 = RegRead(x916) [Made: true]
  x960 = DRAMIsAlloc(x900) [Made: true]
  b940 [Made: false]
  x935 = StreamOutNew(BurstCmdBus) [Made: false]
Inputs for x964 are (Set(b941, b913, b924, x916, x936, x900, x880, b940, x935) ++ Set() ++ Set(x900, x935) ++ Set(x936, x935)) diff Set(b941, x957, x943, x961, x963, x950, x960, b940) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1322 = FixFMA(x942,x1336,x1337)
  x1337 = DelayLine(1,b913)
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343)))
  x1342 = DelayLine(10,b941)
  x1323 = FixSLA(x946,Const(6))
  x949 = FixSub(x1322,x947)
  x956 = FixToFix(x1323,TRUE,_64,_0)
  x942 = FixAdd(b924,b940)
  x1338 = DelayLine(8,x950)
  x957 = DRAMAddress(x900)
  x1343 = DelayLine(1,x951)
  x952 = FixAdd(x951,Const(15))
  x1324 = FixSLA(x953,Const(6))
  x953 = FixDivSRA(x952,Const(4))
  x958 = FixAdd(x956,x1339)
  x947 = FixSLA(x946,Const(4))
  x1339 = DelayLine(7,x957)
  x1344 = DelayLine(2,x949)
  x943 = RegRead(x880)
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true))))
  x1340 = DelayLine(1,x958)
  x954 = FixSLA(x953,Const(4))
  x951 = FixAdd(x949,x1338)
  x1336 = DelayLine(1,x943)
  x961 = StreamOutBankedWrite(x935,ArrayBuffer(x959),ArrayBuffer(Set(x1341, x1342)))
  x963 = FIFOBankedEnq(x936,ArrayBuffer(x962),ArrayBuffer(Set(Const(true), x1342)))
  x1341 = DelayLine(10,x960)
  x946 = FixDivSRA(x1322,Const(4))
  x950 = RegRead(x916)
  x960 = DRAMIsAlloc(x900)
Used:
  x1322 = FixFMA(x942,x1336,x1337) [Made: true]
  x1337 = DelayLine(1,b913) [Made: true]
  x962 = SimpleStruct(ArrayBuffer((size,x954), (start,x1344), (end,x1343))) [Made: true]
  b941 [Made: false]
  x1342 = DelayLine(10,b941) [Made: true]
  b913 [Made: false]
  x1323 = FixSLA(x946,Const(6)) [Made: true]
  x949 = FixSub(x1322,x947) [Made: true]
  b924 [Made: false]
  x956 = FixToFix(x1323,TRUE,_64,_0) [Made: true]
  x942 = FixAdd(b924,b940) [Made: true]
  x1338 = DelayLine(8,x950) [Made: true]
  x957 = DRAMAddress(x900) [Made: true]
  x1343 = DelayLine(1,x951) [Made: true]
  x952 = FixAdd(x951,Const(15)) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x1324 = FixSLA(x953,Const(6)) [Made: true]
  x953 = FixDivSRA(x952,Const(4)) [Made: true]
  x958 = FixAdd(x956,x1339) [Made: true]
  x936 = FIFONew(Const(16)) [Made: false]
  x947 = FixSLA(x946,Const(4)) [Made: true]
  x900 = DRAMHostNew(List(x898, x899),Const(0)) [Made: false]
  x880 = ArgInNew(Const(0)) [Made: false]
  x1339 = DelayLine(7,x957) [Made: true]
  x1344 = DelayLine(2,x949) [Made: true]
  x943 = RegRead(x880) [Made: true]
  x959 = SimpleStruct(ArrayBuffer((offset,x1340), (size,x1324), (isLoad,Const(true)))) [Made: true]
  x1340 = DelayLine(1,x958) [Made: true]
  x954 = FixSLA(x953,Const(4)) [Made: true]
  x951 = FixAdd(x949,x1338) [Made: true]
  x1336 = DelayLine(1,x943) [Made: true]
  x1341 = DelayLine(10,x960) [Made: true]
  x946 = FixDivSRA(x1322,Const(4)) [Made: true]
  x950 = RegRead(x916) [Made: true]
  x960 = DRAMIsAlloc(x900) [Made: true]
  b940 [Made: false]
  x935 = StreamOutNew(BurstCmdBus) [Made: false]
Inputs for x964 are (Set(b941, b913, b924, x916, x936, x900, x880, b940, x935) ++ Set() ++ Set(x900, x935) ++ Set(x936, x935)) diff Set(b941, x957, x943, x961, x963, x950, x960, b940) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None)
 - b913
 - b924
 - x916 = RegNew(Const(0))
 - x936 = FIFONew(Const(16))
 - x900 = DRAMHostNew(List(x898, x899),Const(0))
 - x880 = ArgInNew(Const(0))
 - x935 = StreamOutNew(BurstCmdBus)
 - b913
 - b924
 - x916_reg
 - x936_fifo
 - x900_a
 - x880_K
 - x935
Stms:
  x977 = FieldApply(x974,end)
  x994 = VecApply(x1345,0)
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1347 = DelayLine(1,x994)
  x981 = UnitPipe(Set(b969),Block(Const(())),None)
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348)))
  x1345 = DelayLine(1,x993)
  x988 = FixLeq(x987,b985)
  x974 = VecApply(x973,0)
  x1350 = DelayLine(2,x991)
  x980 = RegWrite(x972,x979,Set())
  x989 = RegRead(x971)
  x970 = RegNew(Const(0))
  x997 = FixAdd(x1346,x992)
  x984 = CounterChainNew(List(x983))
  x975 = FieldApply(x974,start)
  x979 = FieldApply(x974,size)
  x1349 = DelayLine(2,b986)
  x990 = FixLst(b985,x989)
  x996 = FixSLA(b968,Const(4))
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1))
  x971 = RegNew(Const(0))
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969)))
  x978 = RegWrite(x971,x977,Set())
  x991 = And(x988,x990)
  x976 = RegWrite(x970,x975,Set())
  x1309 = RegRead(x972)
  x1348 = DelayLine(2,b969)
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None)
  x1346 = DelayLine(1,x996)
  x987 = RegRead(x970)
  x992 = FixSub(b985,x987)
  x972 = RegNew(Const(0))
Used:
  () [Made: false]
  x977 = FieldApply(x974,end) [Made: true]
  x994 = VecApply(x1345,0) [Made: true]
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  b969 [Made: false]
  x1347 = DelayLine(1,x994) [Made: true]
  x937 = StreamInNew(BurstDataBus()) [Made: false]
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348))) [Made: true]
  x1345 = DelayLine(1,x993) [Made: true]
  x988 = FixLeq(x987,b985) [Made: true]
  x974 = VecApply(x973,0) [Made: true]
  x1350 = DelayLine(2,x991) [Made: true]
  x980 = RegWrite(x972,x979,Set()) [Made: true]
  x989 = RegRead(x971) [Made: true]
  x970 = RegNew(Const(0)) [Made: true]
  x997 = FixAdd(x1346,x992) [Made: true]
  b985 [Made: true]
  x984 = CounterChainNew(List(x983)) [Made: true]
  x975 = FieldApply(x974,start) [Made: true]
  x936 = FIFONew(Const(16)) [Made: false]
  x979 = FieldApply(x974,size) [Made: true]
  x1349 = DelayLine(2,b986) [Made: true]
  x990 = FixLst(b985,x989) [Made: true]
  x996 = FixSLA(b968,Const(4)) [Made: true]
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1)) [Made: true]
  b986 [Made: true]
  b968 [Made: false]
  x971 = RegNew(Const(0)) [Made: true]
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969))) [Made: true]
  x978 = RegWrite(x971,x977,Set()) [Made: true]
  x991 = And(x988,x990) [Made: true]
  x976 = RegWrite(x970,x975,Set()) [Made: true]
  x1309 = RegRead(x972) [Made: true]
  x1348 = DelayLine(2,b969) [Made: true]
  x1346 = DelayLine(1,x996) [Made: true]
  x987 = RegRead(x970) [Made: true]
  x992 = FixSub(b985,x987) [Made: true]
  x972 = RegNew(Const(0)) [Made: true]
Inputs for x1000 are (Set(x934, b969, x937, x936, b968, x972) ++ Set() ++ Set(x937) ++ Set()) diff Set(b969, x981, x970, x984, x983, b968, x971, x1309, x999, x972) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x977 = FieldApply(x974,end)
  x994 = VecApply(x1345,0)
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1347 = DelayLine(1,x994)
  x981 = UnitPipe(Set(b969),Block(Const(())),None)
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348)))
  x1345 = DelayLine(1,x993)
  x988 = FixLeq(x987,b985)
  x974 = VecApply(x973,0)
  x1350 = DelayLine(2,x991)
  x980 = RegWrite(x972,x979,Set())
  x989 = RegRead(x971)
  x970 = RegNew(Const(0))
  x997 = FixAdd(x1346,x992)
  x984 = CounterChainNew(List(x983))
  x975 = FieldApply(x974,start)
  x979 = FieldApply(x974,size)
  x1349 = DelayLine(2,b986)
  x990 = FixLst(b985,x989)
  x996 = FixSLA(b968,Const(4))
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1))
  x971 = RegNew(Const(0))
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969)))
  x978 = RegWrite(x971,x977,Set())
  x991 = And(x988,x990)
  x976 = RegWrite(x970,x975,Set())
  x1309 = RegRead(x972)
  x1348 = DelayLine(2,b969)
  x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None)
  x1346 = DelayLine(1,x996)
  x987 = RegRead(x970)
  x992 = FixSub(b985,x987)
  x972 = RegNew(Const(0))
Used:
  () [Made: false]
  x977 = FieldApply(x974,end) [Made: true]
  x994 = VecApply(x1345,0) [Made: true]
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  b969 [Made: false]
  x1347 = DelayLine(1,x994) [Made: true]
  x937 = StreamInNew(BurstDataBus()) [Made: false]
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348))) [Made: true]
  x1345 = DelayLine(1,x993) [Made: true]
  x988 = FixLeq(x987,b985) [Made: true]
  x974 = VecApply(x973,0) [Made: true]
  x1350 = DelayLine(2,x991) [Made: true]
  x980 = RegWrite(x972,x979,Set()) [Made: true]
  x989 = RegRead(x971) [Made: true]
  x970 = RegNew(Const(0)) [Made: true]
  x997 = FixAdd(x1346,x992) [Made: true]
  b985 [Made: true]
  x984 = CounterChainNew(List(x983)) [Made: true]
  x975 = FieldApply(x974,start) [Made: true]
  x936 = FIFONew(Const(16)) [Made: false]
  x979 = FieldApply(x974,size) [Made: true]
  x1349 = DelayLine(2,b986) [Made: true]
  x990 = FixLst(b985,x989) [Made: true]
  x996 = FixSLA(b968,Const(4)) [Made: true]
  x983 = CounterNew(Const(0),x1309,Const(1),Const(1)) [Made: true]
  b986 [Made: true]
  b968 [Made: false]
  x971 = RegNew(Const(0)) [Made: true]
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969))) [Made: true]
  x978 = RegWrite(x971,x977,Set()) [Made: true]
  x991 = And(x988,x990) [Made: true]
  x976 = RegWrite(x970,x975,Set()) [Made: true]
  x1309 = RegRead(x972) [Made: true]
  x1348 = DelayLine(2,b969) [Made: true]
  x1346 = DelayLine(1,x996) [Made: true]
  x987 = RegRead(x970) [Made: true]
  x992 = FixSub(b985,x987) [Made: true]
  x972 = RegNew(Const(0)) [Made: true]
Inputs for x1000 are (Set(x934, b969, x937, x936, b968, x972) ++ Set() ++ Set(x937) ++ Set()) diff Set(b969, x981, x970, x984, x983, b968, x971, x1309, x999, x972) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1000 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None)
 - x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x937 = StreamInNew(BurstDataBus())
 - x936 = FIFONew(Const(16))
 - x934_tileA_sram_0
 - x937
 - x936_fifo
Stms:
  x977 = FieldApply(x974,end)
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x974 = VecApply(x973,0)
  x980 = RegWrite(x972,x979,Set())
  x975 = FieldApply(x974,start)
  x979 = FieldApply(x974,size)
  x978 = RegWrite(x971,x977,Set())
  x976 = RegWrite(x970,x975,Set())
Used:
  x977 = FieldApply(x974,end) [Made: true]
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x974 = VecApply(x973,0) [Made: true]
  x970 = RegNew(Const(0)) [Made: false]
  x975 = FieldApply(x974,start) [Made: true]
  x936 = FIFONew(Const(16)) [Made: false]
  x979 = FieldApply(x974,size) [Made: true]
  x971 = RegNew(Const(0)) [Made: false]
  x972 = RegNew(Const(0)) [Made: false]
Inputs for x981 are (Set(b969, x970, x936, x971, x972) ++ Set() ++ Set() ++ Set(x936)) diff Set(x973, x976, x978, x980) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x977 = FieldApply(x974,end)
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x974 = VecApply(x973,0)
  x980 = RegWrite(x972,x979,Set())
  x975 = FieldApply(x974,start)
  x979 = FieldApply(x974,size)
  x978 = RegWrite(x971,x977,Set())
  x976 = RegWrite(x970,x975,Set())
Used:
  x977 = FieldApply(x974,end) [Made: true]
  x973 = FIFOBankedDeq(x936,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x974 = VecApply(x973,0) [Made: true]
  x970 = RegNew(Const(0)) [Made: false]
  x975 = FieldApply(x974,start) [Made: true]
  x936 = FIFONew(Const(16)) [Made: false]
  x979 = FieldApply(x974,size) [Made: true]
  x971 = RegNew(Const(0)) [Made: false]
  x972 = RegNew(Const(0)) [Made: false]
Inputs for x981 are (Set(b969, x970, x936, x971, x972) ++ Set() ++ Set() ++ Set(x936)) diff Set(x973, x976, x978, x980) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x981 = UnitPipe(Set(b969),Block(Const(())),None)
 - b969
 - x970 = RegNew(Const(0))
 - x936 = FIFONew(Const(16))
 - x971 = RegNew(Const(0))
 - x972 = RegNew(Const(0))
 - b969
 - x970_reg
 - x936_fifo
 - x971_reg
 - x972_reg
Stms:
  x994 = VecApply(x1345,0)
  x1347 = DelayLine(1,x994)
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348)))
  x1345 = DelayLine(1,x993)
  x988 = FixLeq(x987,b985)
  x1350 = DelayLine(2,x991)
  x989 = RegRead(x971)
  x997 = FixAdd(x1346,x992)
  x1349 = DelayLine(2,b986)
  x990 = FixLst(b985,x989)
  x996 = FixSLA(b968,Const(4))
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969)))
  x991 = And(x988,x990)
  x1348 = DelayLine(2,b969)
  x1346 = DelayLine(1,x996)
  x987 = RegRead(x970)
  x992 = FixSub(b985,x987)
Used:
  x994 = VecApply(x1345,0) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  b969 [Made: false]
  x1347 = DelayLine(1,x994) [Made: true]
  x937 = StreamInNew(BurstDataBus()) [Made: false]
  x1345 = DelayLine(1,x993) [Made: true]
  x988 = FixLeq(x987,b985) [Made: true]
  x1350 = DelayLine(2,x991) [Made: true]
  x989 = RegRead(x971) [Made: true]
  x970 = RegNew(Const(0)) [Made: false]
  x997 = FixAdd(x1346,x992) [Made: true]
  b985 [Made: false]
  x1349 = DelayLine(2,b986) [Made: true]
  x990 = FixLst(b985,x989) [Made: true]
  x996 = FixSLA(b968,Const(4)) [Made: true]
  b986 [Made: false]
  b968 [Made: false]
  x971 = RegNew(Const(0)) [Made: false]
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969))) [Made: true]
  x991 = And(x988,x990) [Made: true]
  x1348 = DelayLine(2,b969) [Made: true]
  x1346 = DelayLine(1,x996) [Made: true]
  x987 = RegRead(x970) [Made: true]
  x992 = FixSub(b985,x987) [Made: true]
Inputs for x999 are (Set(x934, b969, x937, x970, b985, b986, b968, x971) ++ Set() ++ Set(x937) ++ Set(x937)) diff Set(x998, x989, b985, b986, x993, x987) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x994 = VecApply(x1345,0)
  x1347 = DelayLine(1,x994)
  x998 = SRAMBankedWrite(x934,Vector(x1347),Vector(List(Const(0))),Vector(x997),Vector(Set(x1350, x1349, x1348)))
  x1345 = DelayLine(1,x993)
  x988 = FixLeq(x987,b985)
  x1350 = DelayLine(2,x991)
  x989 = RegRead(x971)
  x997 = FixAdd(x1346,x992)
  x1349 = DelayLine(2,b986)
  x990 = FixLst(b985,x989)
  x996 = FixSLA(b968,Const(4))
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969)))
  x991 = And(x988,x990)
  x1348 = DelayLine(2,b969)
  x1346 = DelayLine(1,x996)
  x987 = RegRead(x970)
  x992 = FixSub(b985,x987)
Used:
  x994 = VecApply(x1345,0) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  b969 [Made: false]
  x1347 = DelayLine(1,x994) [Made: true]
  x937 = StreamInNew(BurstDataBus()) [Made: false]
  x1345 = DelayLine(1,x993) [Made: true]
  x988 = FixLeq(x987,b985) [Made: true]
  x1350 = DelayLine(2,x991) [Made: true]
  x989 = RegRead(x971) [Made: true]
  x970 = RegNew(Const(0)) [Made: false]
  x997 = FixAdd(x1346,x992) [Made: true]
  b985 [Made: false]
  x1349 = DelayLine(2,b986) [Made: true]
  x990 = FixLst(b985,x989) [Made: true]
  x996 = FixSLA(b968,Const(4)) [Made: true]
  b986 [Made: false]
  b968 [Made: false]
  x971 = RegNew(Const(0)) [Made: false]
  x993 = StreamInBankedRead(x937,ArrayBuffer(Set(b986, b969))) [Made: true]
  x991 = And(x988,x990) [Made: true]
  x1348 = DelayLine(2,b969) [Made: true]
  x1346 = DelayLine(1,x996) [Made: true]
  x987 = RegRead(x970) [Made: true]
  x992 = FixSub(b985,x987) [Made: true]
Inputs for x999 are (Set(x934, b969, x937, x970, b985, b986, b968, x971) ++ Set() ++ Set(x937) ++ Set(x937)) diff Set(x998, x989, b985, b986, x993, x987) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x999 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None)
 - x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - b969
 - x937 = StreamInNew(BurstDataBus())
 - x970 = RegNew(Const(0))
 - b968
 - x971 = RegNew(Const(0))
 - x934_tileA_sram_0
 - b969
 - x937
 - x970_reg
 - b968
 - x971_reg
Stms:
  x1036 = FixAdd(x1035,Const(15))
  x1411 = DelayLine(4,b1227)
  x1369 = DelayLine(7,x1108)
  x1190 = StreamOutNew(BurstFullDataBus())
  x1105 = FixSLA(x1104,Const(4))
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1031 = FixSLA(x1030,Const(4))
  x1315 = RegRead(x927)
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
  x1179 = FixAdd(x1178,b1161)
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true))))
  x1200 = RegRead(x879)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1068 = CounterChainNew(List(x1067))
  x1401 = DelayLine(1,b1004)
  x1073 = RegRead(x1055)
  x1142 = And(x1139,x1141)
  x1041 = DRAMAddress(x903)
  x1078 = VecApply(x1360,0)
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1))
  x1233 = FixSub(b1226,x1228)
  x1327 = FixSLA(x1037,Const(6))
  x1063 = FieldApply(x1058,size)
  x1354 = DelayLine(7,x1041)
  x1222 = UnitPipe(Set(),Block(Const(())),None)
  x1196 = RegNew(Const(0))
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191)
  x1127 = RegWrite(x1121,x1126,Set())
  x1391 = DelayLine(1,b1162)
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359)))
  x1359 = DelayLine(1,x1035)
  x1386 = DelayLine(7,b1157)
  x1366 = DelayLine(1,b1004)
  x1228 = RegRead(x1196)
  x1055 = RegNew(Const(0))
  x1409 = DelayLine(2,b1227)
  x1330 = FixSLA(x1104,Const(6))
  x1313 = RegRead(x1056)
  x1191 = StreamInNew(BurstAckBus)
  x1059 = FieldApply(x1058,start)
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
  x1379 = DelayLine(1,x1145)
  x1087 = FIFONew(Const(16))
  x1147 = FixSLA(b1119,Const(4))
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None)
  x1319 = RegRead(x916)
  x1013 = FixMin(Const(16),x1012)
  x1398 = DelayLine(10,b1162)
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None)
  x1362 = DelayLine(1,x1078)
  x1100 = FixSub(x1328,x1098)
  x1232 = And(x1229,x1231)
  x1373 = DelayLine(1,x1102)
  x1040 = FixToFix(x1326,TRUE,_64,_0)
  x1109 = FixAdd(x1107,x1369)
  x1334 = ParallelPipe(Set(),Block(Const(())))
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
  x1383 = DelayLine(6,x1170)
  x1020 = FIFONew(Const(16))
  x1183 = FixAdd(x1172,x1182)
  x1051 = CounterChainNew(List(x1050))
  x1169 = FixSLA(b1156,Const(4))
  x1377 = DelayLine(2,x1142)
  x1215 = FixAdd(x1213,x1404)
  x1072 = FixLeq(x1071,b1069)
  x1394 = DelayLine(10,b1005)
  x1351 = DelayLine(1,b1004)
  x1405 = DelayLine(1,x1215)
  x1104 = FixDivSRA(x1103,Const(4))
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1074 = FixLst(b1069,x1073)
  x1206 = FixSub(x1331,x1204)
  x1199 = FixAdd(b924,b1194)
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1311 = RegRead(x916)
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1))
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356)))
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1387 = DelayLine(7,b914)
  x1021 = StreamInNew(BurstDataBus())
  x1042 = FixAdd(x1040,x1354)
  x1355 = DelayLine(1,x1042)
  x1123 = RegNew(Const(0))
  x1174 = FixAdd(x1169,b1166)
  x1217 = DRAMIsAlloc(x906)
  x1370 = DelayLine(1,x1109)
  x1238 = VecApply(x1237,0)
  x1365 = DelayLine(2,b1053)
  x1178 = FixSLA(b1166,Const(4))
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1))
  x1210 = FixDivSRA(x1209,Const(4))
  x1027 = RegRead(x879)
  x1407 = DelayLine(1,x1235)
  x1128 = FieldApply(x1125,end)
  x1392 = DelayLine(1,b1157)
  x1012 = FixSub(x1011,b1004)
  x1402 = DelayLine(1,x1200)
  x1360 = DelayLine(1,x1077)
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1))
  x1143 = FixSub(b1136,x1138)
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1328 = FixFMA(x1093,x1367,x1366)
  x1375 = DelayLine(1,x1144)
  x1121 = RegNew(Const(0))
  x1064 = RegWrite(x1056,x1063,Set())
  x1111 = DRAMIsAlloc(x906)
  x1138 = RegRead(x1121)
  x1118 = CounterChainNew(List(x1117))
  x1397 = DelayLine(10,b1167)
  x1329 = FixSLA(x1097,Const(6))
  x1160 = CounterChainNew(List(x1159))
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1182 = FixMul(x1176,x1181)
  x1075 = And(x1072,x1074)
  x1214 = DRAMAddress(x906)
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1207 = RegRead(x1010)
  x1155 = CounterChainNew(List(x1154))
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371)))
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1382 = DelayLine(7,b925)
  x1231 = FixLst(b1226,x1230)
  x1131 = RegWrite(x1123,x1130,Set())
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1))
  x1060 = RegWrite(x1054,x1059,Set())
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1))
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1393 = DelayLine(1,b914)
  x1333 = FixSLA(x1210,Const(6))
  x1318 = RegRead(x1010)
  x1086 = StreamOutNew(BurstCmdBus)
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
  x1054 = RegNew(Const(0))
  x1170 = FixAdd(x1169,b1161)
  x1035 = FixAdd(x1033,x1353)
  x1071 = RegRead(x1054)
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None)
  x1026 = FixAdd(b913,b1024)
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1135 = CounterChainNew(List(x1134))
  x1103 = FixAdd(x1102,Const(15))
  x1219 = RegWrite(x1196,x1206,Set())
  x1374 = DelayLine(2,x1100)
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1))
  x1389 = DelayLine(1,b925)
  x1125 = VecApply(x1124,0)
  x1388 = DelayLine(1,b1005)
  x1403 = DelayLine(8,x1207)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1139 = FixLeq(x1138,b1136)
  x1371 = DelayLine(10,b1092)
  x1312 = RegRead(x916)
  x1058 = VecApply(x1057,0)
  x1107 = FixToFix(x1329,TRUE,_64,_0)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1332 = FixSLA(x1203,Const(6))
  x1090 = CounterChainNew(List(x1089))
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1))
  x1356 = DelayLine(10,b1025)
  x1209 = FixAdd(x1208,Const(15))
  x1408 = DelayLine(2,x1232)
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1))
  x1011 = RegRead(x879)
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None)
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true))))
  x1122 = RegNew(Const(0))
  x1376 = DelayLine(1,x1147)
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1080 = FixSLA(b1052,Const(4))
  x1325 = FixFMA(x1026,x1352,x1351)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1))
  x1381 = DelayLine(7,b1005)
  x1061 = FieldApply(x1058,end)
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371)))
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]])
  x1198 = RegNew(Const(0))
  x1396 = DelayLine(9,x1170)
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1044 = DRAMIsAlloc(x903)
  x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1176 = VecApply(x1175,0)
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373)))
  x1364 = DelayLine(2,b1070)
  x1102 = FixAdd(x1100,x1368)
  x1076 = FixSub(b1069,x1071)
  x1034 = RegRead(x1010)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1))
  x1081 = FixAdd(x1361,x1076)
  x1145 = VecApply(x1375,0)
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1181 = VecApply(x1180,0)
  x1049 = FringeDenseLoad(x903,x1019,x1021)
  x1225 = CounterChainNew(List(x1224))
  x1400 = DelayLine(10,b914)
  x1368 = DelayLine(8,x1101)
  x1230 = RegRead(x1197)
  x1098 = FixSLA(x1097,Const(4))
  x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None)
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None)
  x1038 = FixSLA(x1037,Const(4))
  x1235 = FixSLA(b1194,Const(4))
  x1317 = RegRead(x927)
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1130 = FieldApply(x1125,size)
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1358 = DelayLine(2,x1033)
  x1141 = FixLst(b1136,x1140)
  x1023 = CounterChainNew(List(x1022))
  x1221 = RegWrite(x1198,x1211,Set())
  x1353 = DelayLine(8,x1034)
  x1094 = RegRead(x879)
  x1140 = RegRead(x1122)
  x1372 = DelayLine(10,x1111)
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x1316 = RegRead(x1123)
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None)
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1321 = RegRead(x1198)
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1126 = FieldApply(x1125,start)
  x1189 = StreamOutNew(BurstCmdBus)
  x1010 = RegNew(Const(0))
  x1390 = DelayLine(1,b1167)
  x1108 = DRAMAddress(x906)
  x1326 = FixSLA(x1030,Const(6))
  x1385 = DelayLine(7,b1162)
  x1062 = RegWrite(x1055,x1061,Set())
  x1101 = RegRead(x1010)
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set()))
  x1030 = FixDivSRA(x1325,Const(4))
  x1193 = CounterChainNew(List(x1192))
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356)))
  x1116 = FringeDenseLoad(x906,x1086,x1088)
  x1097 = FixDivSRA(x1328,Const(4))
  x1229 = FixLeq(x1228,b1226)
  x1395 = DelayLine(10,b925)
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1363 = DelayLine(2,x1075)
  x1314 = RegRead(x927)
  x1172 = VecApply(x1171,0)
  x1410 = DelayLine(4,x1232)
  x1056 = RegNew(Const(0))
  x1033 = FixSub(x1325,x1031)
  x1197 = RegNew(Const(0))
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
  x1165 = CounterChainNew(List(x1164))
  x1093 = FixAdd(b924,b1091)
  x1236 = FixAdd(x1407,x1233)
  x1352 = DelayLine(1,x1027)
  x1129 = RegWrite(x1122,x1128,Set())
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None)
  x1384 = DelayLine(7,b1167)
  x1378 = DelayLine(2,b1137)
  x1019 = StreamOutNew(BurstCmdBus)
  x1357 = DelayLine(10,x1044)
  x1399 = DelayLine(10,b1157)
  x1331 = FixFMA(x1199,x1402,x1401)
  x1320 = RegRead(x927)
  x1367 = DelayLine(1,x1094)
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1037 = FixDivSRA(x1036,Const(4))
  x1088 = StreamInNew(BurstDataBus())
  x1204 = FixSLA(x1203,Const(4))
  x1014 = RegWrite(x1010,x1013,Set())
Used:
  x1036 = FixAdd(x1035,Const(15)) [Made: true]
  x1411 = DelayLine(4,b1227) [Made: true]
  b1024 [Made: true]
  x1369 = DelayLine(7,x1108) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: true]
  x1105 = FixSLA(x1104,Const(4)) [Made: true]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1031 = FixSLA(x1030,Const(4)) [Made: true]
  x1315 = RegRead(x927) [Made: true]
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None) [Made: true]
  () [Made: false]
  x1179 = FixAdd(x1178,b1161) [Made: true]
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true)))) [Made: true]
  x1200 = RegRead(x879) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  b1005 [Made: false]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1068 = CounterChainNew(List(x1067)) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1073 = RegRead(x1055) [Made: true]
  x1142 = And(x1139,x1141) [Made: true]
  x1041 = DRAMAddress(x903) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  b1137 [Made: true]
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1)) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1327 = FixSLA(x1037,Const(6)) [Made: true]
  b913 [Made: false]
  x1063 = FieldApply(x1058,size) [Made: true]
  x1354 = DelayLine(7,x1041) [Made: true]
  x1222 = UnitPipe(Set(),Block(Const(())),None) [Made: true]
  x1196 = RegNew(Const(0)) [Made: true]
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191) [Made: true]
  x1127 = RegWrite(x1121,x1126,Set()) [Made: true]
  x1391 = DelayLine(1,b1162) [Made: true]
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359))) [Made: true]
  x1359 = DelayLine(1,x1035) [Made: true]
  x1386 = DelayLine(7,b1157) [Made: true]
  x1366 = DelayLine(1,b1004) [Made: true]
  x1228 = RegRead(x1196) [Made: true]
  x1055 = RegNew(Const(0)) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1330 = FixSLA(x1104,Const(6)) [Made: true]
  x1313 = RegRead(x1056) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1191 = StreamInNew(BurstAckBus) [Made: true]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None) [Made: true]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: true]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None) [Made: true]
  x1319 = RegRead(x916) [Made: true]
  x1013 = FixMin(Const(16),x1012) [Made: true]
  x1398 = DelayLine(10,b1162) [Made: true]
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None) [Made: true]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1100 = FixSub(x1328,x1098) [Made: true]
  x1232 = And(x1229,x1231) [Made: true]
  b924 [Made: false]
  x1373 = DelayLine(1,x1102) [Made: true]
  x1040 = FixToFix(x1326,TRUE,_64,_0) [Made: true]
  x1109 = FixAdd(x1107,x1369) [Made: true]
  b1136 [Made: true]
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None) [Made: true]
  x1383 = DelayLine(6,x1170) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: true]
  x1183 = FixAdd(x1172,x1182) [Made: true]
  x1051 = CounterChainNew(List(x1050)) [Made: true]
  x1169 = FixSLA(b1156,Const(4)) [Made: true]
  x1377 = DelayLine(2,x1142) [Made: true]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  b1119 [Made: true]
  x1394 = DelayLine(10,b1005) [Made: true]
  x1351 = DelayLine(1,b1004) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1104 = FixDivSRA(x1103,Const(4)) [Made: true]
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  b925 [Made: false]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1311 = RegRead(x916) [Made: true]
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1)) [Made: true]
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356))) [Made: true]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1387 = DelayLine(7,b914) [Made: true]
  b1091 [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: true]
  x1042 = FixAdd(x1040,x1354) [Made: true]
  x1355 = DelayLine(1,x1042) [Made: true]
  x1123 = RegNew(Const(0)) [Made: true]
  x1174 = FixAdd(x1169,b1166) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x1370 = DelayLine(1,x1109) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x1365 = DelayLine(2,b1053) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1178 = FixSLA(b1166,Const(4)) [Made: true]
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1)) [Made: true]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  x1027 = RegRead(x879) [Made: true]
  b1195 [Made: true]
  x1407 = DelayLine(1,x1235) [Made: true]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1392 = DelayLine(1,b1157) [Made: true]
  x1012 = FixSub(x1011,b1004) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1)) [Made: true]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1328 = FixFMA(x1093,x1367,x1366) [Made: true]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: true]
  x1064 = RegWrite(x1056,x1063,Set()) [Made: true]
  x1111 = DRAMIsAlloc(x906) [Made: true]
  b1227 [Made: true]
  x1138 = RegRead(x1121) [Made: true]
  x1118 = CounterChainNew(List(x1117)) [Made: true]
  x1397 = DelayLine(10,b1167) [Made: true]
  x1329 = FixSLA(x1097,Const(6)) [Made: true]
  x1160 = CounterChainNew(List(x1159)) [Made: true]
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365))) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1182 = FixMul(x1176,x1181) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x1155 = CounterChainNew(List(x1154)) [Made: true]
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371))) [Made: true]
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1382 = DelayLine(7,b925) [Made: true]
  x1231 = FixLst(b1226,x1230) [Made: true]
  x1131 = RegWrite(x1123,x1130,Set()) [Made: true]
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1)) [Made: true]
  x1060 = RegWrite(x1054,x1059,Set()) [Made: true]
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1)) [Made: true]
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1393 = DelayLine(1,b914) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x1318 = RegRead(x1010) [Made: true]
  x1086 = StreamOutNew(BurstCmdBus) [Made: true]
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None) [Made: true]
  x1054 = RegNew(Const(0)) [Made: true]
  x1170 = FixAdd(x1169,b1161) [Made: true]
  x1035 = FixAdd(x1033,x1353) [Made: true]
  x1071 = RegRead(x1054) [Made: true]
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None) [Made: true]
  x1026 = FixAdd(b913,b1024) [Made: true]
  b1167 [Made: true]
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1135 = CounterChainNew(List(x1134)) [Made: true]
  x1103 = FixAdd(x1102,Const(15)) [Made: true]
  x1219 = RegWrite(x1196,x1206,Set()) [Made: true]
  x1374 = DelayLine(2,x1100) [Made: true]
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1)) [Made: true]
  x1389 = DelayLine(1,b925) [Made: true]
  x1125 = VecApply(x1124,0) [Made: true]
  x1388 = DelayLine(1,b1005) [Made: true]
  x1403 = DelayLine(8,x1207) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  b1226 [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x1371 = DelayLine(10,b1092) [Made: true]
  x1312 = RegRead(x916) [Made: true]
  x1058 = VecApply(x1057,0) [Made: true]
  x1107 = FixToFix(x1329,TRUE,_64,_0) [Made: true]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  b1092 [Made: true]
  x1090 = CounterChainNew(List(x1089)) [Made: true]
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1)) [Made: true]
  x1356 = DelayLine(10,b1025) [Made: true]
  b1194 [Made: true]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1)) [Made: true]
  x1011 = RegRead(x879) [Made: true]
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true)))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: true]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  b1162 [Made: true]
  x1325 = FixFMA(x1026,x1352,x1351) [Made: true]
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1)) [Made: true]
  x1381 = DelayLine(7,b1005) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371))) [Made: true]
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1198 = RegNew(Const(0)) [Made: true]
  x1396 = DelayLine(9,x1170) [Made: true]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1044 = DRAMIsAlloc(x903) [Made: true]
  x1176 = VecApply(x1175,0) [Made: true]
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373))) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1102 = FixAdd(x1100,x1368) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1034 = RegRead(x1010) [Made: true]
  b1166 [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x927 = RegNew(Const(0)) [Made: false]
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1)) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1181 = VecApply(x1180,0) [Made: true]
  x1049 = FringeDenseLoad(x903,x1019,x1021) [Made: true]
  b1025 [Made: true]
  b1070 [Made: true]
  b1156 [Made: true]
  x1225 = CounterChainNew(List(x1224)) [Made: true]
  x1400 = DelayLine(10,b914) [Made: true]
  x1368 = DelayLine(8,x1101) [Made: true]
  x1230 = RegRead(x1197) [Made: true]
  x1098 = FixSLA(x1097,Const(4)) [Made: true]
  b1053 [Made: true]
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None) [Made: true]
  x1038 = FixSLA(x1037,Const(4)) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1317 = RegRead(x927) [Made: true]
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406))) [Made: true]
  x1220 = RegWrite(x1197,x1208,Set()) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1358 = DelayLine(2,x1033) [Made: true]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1023 = CounterChainNew(List(x1022)) [Made: true]
  x1221 = RegWrite(x1198,x1211,Set()) [Made: true]
  x1353 = DelayLine(8,x1034) [Made: true]
  b1052 [Made: true]
  x1094 = RegRead(x879) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1372 = DelayLine(10,x1111) [Made: true]
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411))) [Made: true]
  x1316 = RegRead(x1123) [Made: true]
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None) [Made: true]
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  b1157 [Made: true]
  x1321 = RegRead(x1198) [Made: true]
  x903 = DRAMHostNew(List(x901, x902),Const(0)) [Made: false]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1126 = FieldApply(x1125,start) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: true]
  x1010 = RegNew(Const(0)) [Made: true]
  x1390 = DelayLine(1,b1167) [Made: true]
  x1108 = DRAMAddress(x906) [Made: true]
  x1326 = FixSLA(x1030,Const(6)) [Made: true]
  x1385 = DelayLine(7,b1162) [Made: true]
  x1062 = RegWrite(x1055,x1061,Set()) [Made: true]
  x1101 = RegRead(x1010) [Made: true]
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set())) [Made: true]
  x1030 = FixDivSRA(x1325,Const(4)) [Made: true]
  b914 [Made: false]
  x1193 = CounterChainNew(List(x1192)) [Made: true]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356))) [Made: true]
  b1161 [Made: true]
  x1116 = FringeDenseLoad(x906,x1086,x1088) [Made: true]
  x1097 = FixDivSRA(x1328,Const(4)) [Made: true]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1395 = DelayLine(10,b925) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  x1314 = RegRead(x927) [Made: true]
  x1172 = VecApply(x1171,0) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1056 = RegNew(Const(0)) [Made: true]
  x1033 = FixSub(x1325,x1031) [Made: true]
  x1197 = RegNew(Const(0)) [Made: true]
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None) [Made: true]
  x1165 = CounterChainNew(List(x1164)) [Made: true]
  x1093 = FixAdd(b924,b1091) [Made: true]
  x1236 = FixAdd(x1407,x1233) [Made: true]
  x1352 = DelayLine(1,x1027) [Made: true]
  x1129 = RegWrite(x1122,x1128,Set()) [Made: true]
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None) [Made: true]
  x1384 = DelayLine(7,b1167) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  x1019 = StreamOutNew(BurstCmdBus) [Made: true]
  x1357 = DelayLine(10,x1044) [Made: true]
  b1004 [Made: false]
  x1399 = DelayLine(10,b1157) [Made: true]
  b1120 [Made: true]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1320 = RegRead(x927) [Made: true]
  x1367 = DelayLine(1,x1094) [Made: true]
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x1037 = FixDivSRA(x1036,Const(4)) [Made: true]
  x1088 = StreamInNew(BurstDataBus()) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
  b1069 [Made: true]
  x1014 = RegWrite(x1010,x1013,Set()) [Made: true]
Inputs for x1335 are (Set(b1005, b913, x934, b924, b925, x916, x879, x906, x927, x903, b914, b1004) ++ Set(x927, x934) ++ Set(x1190, x1191, x1021, x1086, x906, x903, x1189, x1019, x1088) ++ Set()) diff Set(b1005, x1334, x1017, x1016, x1155, x1154, x1015, x1018, x1188, x1317, x1010, x1248, b1004) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1036 = FixAdd(x1035,Const(15))
  x1411 = DelayLine(4,b1227)
  x1369 = DelayLine(7,x1108)
  x1190 = StreamOutNew(BurstFullDataBus())
  x1105 = FixSLA(x1104,Const(4))
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1031 = FixSLA(x1030,Const(4))
  x1315 = RegRead(x927)
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
  x1179 = FixAdd(x1178,b1161)
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true))))
  x1200 = RegRead(x879)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1068 = CounterChainNew(List(x1067))
  x1401 = DelayLine(1,b1004)
  x1073 = RegRead(x1055)
  x1142 = And(x1139,x1141)
  x1041 = DRAMAddress(x903)
  x1078 = VecApply(x1360,0)
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1))
  x1233 = FixSub(b1226,x1228)
  x1327 = FixSLA(x1037,Const(6))
  x1063 = FieldApply(x1058,size)
  x1354 = DelayLine(7,x1041)
  x1222 = UnitPipe(Set(),Block(Const(())),None)
  x1196 = RegNew(Const(0))
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191)
  x1127 = RegWrite(x1121,x1126,Set())
  x1391 = DelayLine(1,b1162)
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359)))
  x1359 = DelayLine(1,x1035)
  x1386 = DelayLine(7,b1157)
  x1366 = DelayLine(1,b1004)
  x1228 = RegRead(x1196)
  x1055 = RegNew(Const(0))
  x1409 = DelayLine(2,b1227)
  x1330 = FixSLA(x1104,Const(6))
  x1313 = RegRead(x1056)
  x1191 = StreamInNew(BurstAckBus)
  x1059 = FieldApply(x1058,start)
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
  x1379 = DelayLine(1,x1145)
  x1087 = FIFONew(Const(16))
  x1147 = FixSLA(b1119,Const(4))
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None)
  x1319 = RegRead(x916)
  x1013 = FixMin(Const(16),x1012)
  x1398 = DelayLine(10,b1162)
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None)
  x1362 = DelayLine(1,x1078)
  x1100 = FixSub(x1328,x1098)
  x1232 = And(x1229,x1231)
  x1373 = DelayLine(1,x1102)
  x1040 = FixToFix(x1326,TRUE,_64,_0)
  x1109 = FixAdd(x1107,x1369)
  x1334 = ParallelPipe(Set(),Block(Const(())))
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
  x1383 = DelayLine(6,x1170)
  x1020 = FIFONew(Const(16))
  x1183 = FixAdd(x1172,x1182)
  x1051 = CounterChainNew(List(x1050))
  x1169 = FixSLA(b1156,Const(4))
  x1377 = DelayLine(2,x1142)
  x1215 = FixAdd(x1213,x1404)
  x1072 = FixLeq(x1071,b1069)
  x1394 = DelayLine(10,b1005)
  x1351 = DelayLine(1,b1004)
  x1405 = DelayLine(1,x1215)
  x1104 = FixDivSRA(x1103,Const(4))
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1074 = FixLst(b1069,x1073)
  x1206 = FixSub(x1331,x1204)
  x1199 = FixAdd(b924,b1194)
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1311 = RegRead(x916)
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1))
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356)))
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1387 = DelayLine(7,b914)
  x1021 = StreamInNew(BurstDataBus())
  x1042 = FixAdd(x1040,x1354)
  x1355 = DelayLine(1,x1042)
  x1123 = RegNew(Const(0))
  x1174 = FixAdd(x1169,b1166)
  x1217 = DRAMIsAlloc(x906)
  x1370 = DelayLine(1,x1109)
  x1238 = VecApply(x1237,0)
  x1365 = DelayLine(2,b1053)
  x1178 = FixSLA(b1166,Const(4))
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1))
  x1210 = FixDivSRA(x1209,Const(4))
  x1027 = RegRead(x879)
  x1407 = DelayLine(1,x1235)
  x1128 = FieldApply(x1125,end)
  x1392 = DelayLine(1,b1157)
  x1012 = FixSub(x1011,b1004)
  x1402 = DelayLine(1,x1200)
  x1360 = DelayLine(1,x1077)
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1))
  x1143 = FixSub(b1136,x1138)
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1328 = FixFMA(x1093,x1367,x1366)
  x1375 = DelayLine(1,x1144)
  x1121 = RegNew(Const(0))
  x1064 = RegWrite(x1056,x1063,Set())
  x1111 = DRAMIsAlloc(x906)
  x1138 = RegRead(x1121)
  x1118 = CounterChainNew(List(x1117))
  x1397 = DelayLine(10,b1167)
  x1329 = FixSLA(x1097,Const(6))
  x1160 = CounterChainNew(List(x1159))
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1182 = FixMul(x1176,x1181)
  x1075 = And(x1072,x1074)
  x1214 = DRAMAddress(x906)
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1207 = RegRead(x1010)
  x1155 = CounterChainNew(List(x1154))
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371)))
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1382 = DelayLine(7,b925)
  x1231 = FixLst(b1226,x1230)
  x1131 = RegWrite(x1123,x1130,Set())
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1))
  x1060 = RegWrite(x1054,x1059,Set())
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1))
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1393 = DelayLine(1,b914)
  x1333 = FixSLA(x1210,Const(6))
  x1318 = RegRead(x1010)
  x1086 = StreamOutNew(BurstCmdBus)
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
  x1054 = RegNew(Const(0))
  x1170 = FixAdd(x1169,b1161)
  x1035 = FixAdd(x1033,x1353)
  x1071 = RegRead(x1054)
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None)
  x1026 = FixAdd(b913,b1024)
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1135 = CounterChainNew(List(x1134))
  x1103 = FixAdd(x1102,Const(15))
  x1219 = RegWrite(x1196,x1206,Set())
  x1374 = DelayLine(2,x1100)
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1))
  x1389 = DelayLine(1,b925)
  x1125 = VecApply(x1124,0)
  x1388 = DelayLine(1,b1005)
  x1403 = DelayLine(8,x1207)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1139 = FixLeq(x1138,b1136)
  x1371 = DelayLine(10,b1092)
  x1312 = RegRead(x916)
  x1058 = VecApply(x1057,0)
  x1107 = FixToFix(x1329,TRUE,_64,_0)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1332 = FixSLA(x1203,Const(6))
  x1090 = CounterChainNew(List(x1089))
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1))
  x1356 = DelayLine(10,b1025)
  x1209 = FixAdd(x1208,Const(15))
  x1408 = DelayLine(2,x1232)
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1))
  x1011 = RegRead(x879)
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None)
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true))))
  x1122 = RegNew(Const(0))
  x1376 = DelayLine(1,x1147)
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1080 = FixSLA(b1052,Const(4))
  x1325 = FixFMA(x1026,x1352,x1351)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1))
  x1381 = DelayLine(7,b1005)
  x1061 = FieldApply(x1058,end)
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371)))
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]])
  x1198 = RegNew(Const(0))
  x1396 = DelayLine(9,x1170)
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1044 = DRAMIsAlloc(x903)
  x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1176 = VecApply(x1175,0)
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373)))
  x1364 = DelayLine(2,b1070)
  x1102 = FixAdd(x1100,x1368)
  x1076 = FixSub(b1069,x1071)
  x1034 = RegRead(x1010)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1))
  x1081 = FixAdd(x1361,x1076)
  x1145 = VecApply(x1375,0)
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
  x1181 = VecApply(x1180,0)
  x1049 = FringeDenseLoad(x903,x1019,x1021)
  x1225 = CounterChainNew(List(x1224))
  x1400 = DelayLine(10,b914)
  x1368 = DelayLine(8,x1101)
  x1230 = RegRead(x1197)
  x1098 = FixSLA(x1097,Const(4))
  x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None)
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None)
  x1038 = FixSLA(x1037,Const(4))
  x1235 = FixSLA(b1194,Const(4))
  x1317 = RegRead(x927)
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1130 = FieldApply(x1125,size)
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1358 = DelayLine(2,x1033)
  x1141 = FixLst(b1136,x1140)
  x1023 = CounterChainNew(List(x1022))
  x1221 = RegWrite(x1198,x1211,Set())
  x1353 = DelayLine(8,x1034)
  x1094 = RegRead(x879)
  x1140 = RegRead(x1122)
  x1372 = DelayLine(10,x1111)
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x1316 = RegRead(x1123)
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None)
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1321 = RegRead(x1198)
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1126 = FieldApply(x1125,start)
  x1189 = StreamOutNew(BurstCmdBus)
  x1010 = RegNew(Const(0))
  x1390 = DelayLine(1,b1167)
  x1108 = DRAMAddress(x906)
  x1326 = FixSLA(x1030,Const(6))
  x1385 = DelayLine(7,b1162)
  x1062 = RegWrite(x1055,x1061,Set())
  x1101 = RegRead(x1010)
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set()))
  x1030 = FixDivSRA(x1325,Const(4))
  x1193 = CounterChainNew(List(x1192))
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356)))
  x1116 = FringeDenseLoad(x906,x1086,x1088)
  x1097 = FixDivSRA(x1328,Const(4))
  x1229 = FixLeq(x1228,b1226)
  x1395 = DelayLine(10,b925)
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1363 = DelayLine(2,x1075)
  x1314 = RegRead(x927)
  x1172 = VecApply(x1171,0)
  x1410 = DelayLine(4,x1232)
  x1056 = RegNew(Const(0))
  x1033 = FixSub(x1325,x1031)
  x1197 = RegNew(Const(0))
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
  x1165 = CounterChainNew(List(x1164))
  x1093 = FixAdd(b924,b1091)
  x1236 = FixAdd(x1407,x1233)
  x1352 = DelayLine(1,x1027)
  x1129 = RegWrite(x1122,x1128,Set())
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None)
  x1384 = DelayLine(7,b1167)
  x1378 = DelayLine(2,b1137)
  x1019 = StreamOutNew(BurstCmdBus)
  x1357 = DelayLine(10,x1044)
  x1399 = DelayLine(10,b1157)
  x1331 = FixFMA(x1199,x1402,x1401)
  x1320 = RegRead(x927)
  x1367 = DelayLine(1,x1094)
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1037 = FixDivSRA(x1036,Const(4))
  x1088 = StreamInNew(BurstDataBus())
  x1204 = FixSLA(x1203,Const(4))
  x1014 = RegWrite(x1010,x1013,Set())
Used:
  x1036 = FixAdd(x1035,Const(15)) [Made: true]
  x1411 = DelayLine(4,b1227) [Made: true]
  b1024 [Made: true]
  x1369 = DelayLine(7,x1108) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: true]
  x1105 = FixSLA(x1104,Const(4)) [Made: true]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1031 = FixSLA(x1030,Const(4)) [Made: true]
  x1315 = RegRead(x927) [Made: true]
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None) [Made: true]
  () [Made: false]
  x1179 = FixAdd(x1178,b1161) [Made: true]
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true)))) [Made: true]
  x1200 = RegRead(x879) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  b1005 [Made: false]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1068 = CounterChainNew(List(x1067)) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1073 = RegRead(x1055) [Made: true]
  x1142 = And(x1139,x1141) [Made: true]
  x1041 = DRAMAddress(x903) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  b1137 [Made: true]
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1)) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1327 = FixSLA(x1037,Const(6)) [Made: true]
  b913 [Made: false]
  x1063 = FieldApply(x1058,size) [Made: true]
  x1354 = DelayLine(7,x1041) [Made: true]
  x1222 = UnitPipe(Set(),Block(Const(())),None) [Made: true]
  x1196 = RegNew(Const(0)) [Made: true]
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191) [Made: true]
  x1127 = RegWrite(x1121,x1126,Set()) [Made: true]
  x1391 = DelayLine(1,b1162) [Made: true]
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359))) [Made: true]
  x1359 = DelayLine(1,x1035) [Made: true]
  x1386 = DelayLine(7,b1157) [Made: true]
  x1366 = DelayLine(1,b1004) [Made: true]
  x1228 = RegRead(x1196) [Made: true]
  x1055 = RegNew(Const(0)) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1330 = FixSLA(x1104,Const(6)) [Made: true]
  x1313 = RegRead(x1056) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1191 = StreamInNew(BurstAckBus) [Made: true]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None) [Made: true]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: true]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None) [Made: true]
  x1319 = RegRead(x916) [Made: true]
  x1013 = FixMin(Const(16),x1012) [Made: true]
  x1398 = DelayLine(10,b1162) [Made: true]
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None) [Made: true]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1100 = FixSub(x1328,x1098) [Made: true]
  x1232 = And(x1229,x1231) [Made: true]
  b924 [Made: false]
  x1373 = DelayLine(1,x1102) [Made: true]
  x1040 = FixToFix(x1326,TRUE,_64,_0) [Made: true]
  x1109 = FixAdd(x1107,x1369) [Made: true]
  b1136 [Made: true]
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None) [Made: true]
  x1383 = DelayLine(6,x1170) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: true]
  x1183 = FixAdd(x1172,x1182) [Made: true]
  x1051 = CounterChainNew(List(x1050)) [Made: true]
  x1169 = FixSLA(b1156,Const(4)) [Made: true]
  x1377 = DelayLine(2,x1142) [Made: true]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  b1119 [Made: true]
  x1394 = DelayLine(10,b1005) [Made: true]
  x1351 = DelayLine(1,b1004) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1104 = FixDivSRA(x1103,Const(4)) [Made: true]
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  b925 [Made: false]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1311 = RegRead(x916) [Made: true]
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1)) [Made: true]
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356))) [Made: true]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1387 = DelayLine(7,b914) [Made: true]
  b1091 [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: true]
  x1042 = FixAdd(x1040,x1354) [Made: true]
  x1355 = DelayLine(1,x1042) [Made: true]
  x1123 = RegNew(Const(0)) [Made: true]
  x1174 = FixAdd(x1169,b1166) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x1370 = DelayLine(1,x1109) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x1365 = DelayLine(2,b1053) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1178 = FixSLA(b1166,Const(4)) [Made: true]
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1)) [Made: true]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  x1027 = RegRead(x879) [Made: true]
  b1195 [Made: true]
  x1407 = DelayLine(1,x1235) [Made: true]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1392 = DelayLine(1,b1157) [Made: true]
  x1012 = FixSub(x1011,b1004) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1)) [Made: true]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1328 = FixFMA(x1093,x1367,x1366) [Made: true]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: true]
  x1064 = RegWrite(x1056,x1063,Set()) [Made: true]
  x1111 = DRAMIsAlloc(x906) [Made: true]
  b1227 [Made: true]
  x1138 = RegRead(x1121) [Made: true]
  x1118 = CounterChainNew(List(x1117)) [Made: true]
  x1397 = DelayLine(10,b1167) [Made: true]
  x1329 = FixSLA(x1097,Const(6)) [Made: true]
  x1160 = CounterChainNew(List(x1159)) [Made: true]
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365))) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1182 = FixMul(x1176,x1181) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x1155 = CounterChainNew(List(x1154)) [Made: true]
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371))) [Made: true]
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1382 = DelayLine(7,b925) [Made: true]
  x1231 = FixLst(b1226,x1230) [Made: true]
  x1131 = RegWrite(x1123,x1130,Set()) [Made: true]
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1)) [Made: true]
  x1060 = RegWrite(x1054,x1059,Set()) [Made: true]
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1)) [Made: true]
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1393 = DelayLine(1,b914) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x1318 = RegRead(x1010) [Made: true]
  x1086 = StreamOutNew(BurstCmdBus) [Made: true]
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None) [Made: true]
  x1054 = RegNew(Const(0)) [Made: true]
  x1170 = FixAdd(x1169,b1161) [Made: true]
  x1035 = FixAdd(x1033,x1353) [Made: true]
  x1071 = RegRead(x1054) [Made: true]
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None) [Made: true]
  x1026 = FixAdd(b913,b1024) [Made: true]
  b1167 [Made: true]
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1135 = CounterChainNew(List(x1134)) [Made: true]
  x1103 = FixAdd(x1102,Const(15)) [Made: true]
  x1219 = RegWrite(x1196,x1206,Set()) [Made: true]
  x1374 = DelayLine(2,x1100) [Made: true]
  x1154 = CounterNew(Const(0),x1317,Const(1),Const(1)) [Made: true]
  x1389 = DelayLine(1,b925) [Made: true]
  x1125 = VecApply(x1124,0) [Made: true]
  x1388 = DelayLine(1,b1005) [Made: true]
  x1403 = DelayLine(8,x1207) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  b1226 [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x1371 = DelayLine(10,b1092) [Made: true]
  x1312 = RegRead(x916) [Made: true]
  x1058 = VecApply(x1057,0) [Made: true]
  x1107 = FixToFix(x1329,TRUE,_64,_0) [Made: true]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  b1092 [Made: true]
  x1090 = CounterChainNew(List(x1089)) [Made: true]
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1)) [Made: true]
  x1356 = DelayLine(10,b1025) [Made: true]
  b1194 [Made: true]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1)) [Made: true]
  x1011 = RegRead(x879) [Made: true]
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true)))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: true]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  b1162 [Made: true]
  x1325 = FixFMA(x1026,x1352,x1351) [Made: true]
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1)) [Made: true]
  x1381 = DelayLine(7,b1005) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371))) [Made: true]
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1198 = RegNew(Const(0)) [Made: true]
  x1396 = DelayLine(9,x1170) [Made: true]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1044 = DRAMIsAlloc(x903) [Made: true]
  x1176 = VecApply(x1175,0) [Made: true]
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373))) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1102 = FixAdd(x1100,x1368) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1034 = RegRead(x1010) [Made: true]
  b1166 [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x927 = RegNew(Const(0)) [Made: false]
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1)) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: true]
  x1181 = VecApply(x1180,0) [Made: true]
  x1049 = FringeDenseLoad(x903,x1019,x1021) [Made: true]
  b1025 [Made: true]
  b1070 [Made: true]
  b1156 [Made: true]
  x1225 = CounterChainNew(List(x1224)) [Made: true]
  x1400 = DelayLine(10,b914) [Made: true]
  x1368 = DelayLine(8,x1101) [Made: true]
  x1230 = RegRead(x1197) [Made: true]
  x1098 = FixSLA(x1097,Const(4)) [Made: true]
  b1053 [Made: true]
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None) [Made: true]
  x1038 = FixSLA(x1037,Const(4)) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1317 = RegRead(x927) [Made: true]
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None) [Made: true]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406))) [Made: true]
  x1220 = RegWrite(x1197,x1208,Set()) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1358 = DelayLine(2,x1033) [Made: true]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1023 = CounterChainNew(List(x1022)) [Made: true]
  x1221 = RegWrite(x1198,x1211,Set()) [Made: true]
  x1353 = DelayLine(8,x1034) [Made: true]
  b1052 [Made: true]
  x1094 = RegRead(x879) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1372 = DelayLine(10,x1111) [Made: true]
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411))) [Made: true]
  x1316 = RegRead(x1123) [Made: true]
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None) [Made: true]
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  b1157 [Made: true]
  x1321 = RegRead(x1198) [Made: true]
  x903 = DRAMHostNew(List(x901, x902),Const(0)) [Made: false]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1126 = FieldApply(x1125,start) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: true]
  x1010 = RegNew(Const(0)) [Made: true]
  x1390 = DelayLine(1,b1167) [Made: true]
  x1108 = DRAMAddress(x906) [Made: true]
  x1326 = FixSLA(x1030,Const(6)) [Made: true]
  x1385 = DelayLine(7,b1162) [Made: true]
  x1062 = RegWrite(x1055,x1061,Set()) [Made: true]
  x1101 = RegRead(x1010) [Made: true]
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set())) [Made: true]
  x1030 = FixDivSRA(x1325,Const(4)) [Made: true]
  b914 [Made: false]
  x1193 = CounterChainNew(List(x1192)) [Made: true]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356))) [Made: true]
  b1161 [Made: true]
  x1116 = FringeDenseLoad(x906,x1086,x1088) [Made: true]
  x1097 = FixDivSRA(x1328,Const(4)) [Made: true]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1395 = DelayLine(10,b925) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  x1314 = RegRead(x927) [Made: true]
  x1172 = VecApply(x1171,0) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1056 = RegNew(Const(0)) [Made: true]
  x1033 = FixSub(x1325,x1031) [Made: true]
  x1197 = RegNew(Const(0)) [Made: true]
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None) [Made: true]
  x1165 = CounterChainNew(List(x1164)) [Made: true]
  x1093 = FixAdd(b924,b1091) [Made: true]
  x1236 = FixAdd(x1407,x1233) [Made: true]
  x1352 = DelayLine(1,x1027) [Made: true]
  x1129 = RegWrite(x1122,x1128,Set()) [Made: true]
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None) [Made: true]
  x1384 = DelayLine(7,b1167) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  x1019 = StreamOutNew(BurstCmdBus) [Made: true]
  x1357 = DelayLine(10,x1044) [Made: true]
  b1004 [Made: false]
  x1399 = DelayLine(10,b1157) [Made: true]
  b1120 [Made: true]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1320 = RegRead(x927) [Made: true]
  x1367 = DelayLine(1,x1094) [Made: true]
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x1037 = FixDivSRA(x1036,Const(4)) [Made: true]
  x1088 = StreamInNew(BurstDataBus()) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
  b1069 [Made: true]
  x1014 = RegWrite(x1010,x1013,Set()) [Made: true]
Inputs for x1335 are (Set(b1005, b913, x934, b924, b925, x916, x879, x906, x927, x903, b914, b1004) ++ Set(x927, x934) ++ Set(x1190, x1191, x1021, x1086, x906, x903, x1189, x1019, x1088) ++ Set()) diff Set(b1005, x1334, x1017, x1016, x1155, x1154, x1015, x1018, x1188, x1317, x1010, x1248, b1004) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1335 = UnrolledForeach(Set(b925, b914),x1003,Block(Const(())),List(List(b1004)),List(List(b1005)),None)
 - x1190 = StreamOutNew(BurstFullDataBus())
 - b913
 - x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1191 = StreamInNew(BurstAckBus)
 - b924
 - b925
 - x1021 = StreamInNew(BurstDataBus())
 - x916 = RegNew(Const(0))
 - x879 = ArgInNew(Const(0))
 - x1086 = StreamOutNew(BurstCmdBus)
 - x906 = DRAMHostNew(List(x904, x905),Const(0))
 - x927 = RegNew(Const(0))
 - x903 = DRAMHostNew(List(x901, x902),Const(0))
 - x1189 = StreamOutNew(BurstCmdBus)
 - b914
 - x1019 = StreamOutNew(BurstCmdBus)
 - x1088 = StreamInNew(BurstDataBus())
 - x1190
 - b913
 - x934_tileA_sram_0
 - x1191
 - b924_chain_read_2
 - b925_chain_read_2
 - x1021
 - x916_reg
 - x879_N
 - x1086
 - x906_c
 - x927_reg
 - x903_b
 - x1189
 - b914
 - x1019
 - x1088
Stms:
  x1011 = RegRead(x879)
  x1012 = FixSub(x1011,b1004)
  x1013 = FixMin(Const(16),x1012)
  x1014 = RegWrite(x1010,x1013,Set())
Used:
  x1013 = FixMin(Const(16),x1012) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1012 = FixSub(x1011,b1004) [Made: true]
  x1011 = RegRead(x879) [Made: true]
  x1010 = RegNew(Const(0)) [Made: false]
  b1004 [Made: false]
Inputs for x1015 are (Set(b1005, b925, x879, x1010, b914, b1004) ++ Set(x1010) ++ Set() ++ Set()) diff Set(x1011, x1014) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1011 = RegRead(x879)
  x1012 = FixSub(x1011,b1004)
  x1013 = FixMin(Const(16),x1012)
  x1014 = RegWrite(x1010,x1013,Set())
Used:
  x1013 = FixMin(Const(16),x1012) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1012 = FixSub(x1011,b1004) [Made: true]
  x1011 = RegRead(x879) [Made: true]
  x1010 = RegNew(Const(0)) [Made: false]
  b1004 [Made: false]
Inputs for x1015 are (Set(b1005, b925, x879, x1010, b914, b1004) ++ Set(x1010) ++ Set() ++ Set()) diff Set(x1011, x1014) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1015 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
 - b1005
 - b925
 - x879 = ArgInNew(Const(0))
 - x1010 = RegNew(Const(0))
 - b914
 - b1004
 - b1005
 - b925
 - x879_N
 - x1010_reg
 - b914
 - b1004
Stms:
  x1036 = FixAdd(x1035,Const(15))
  x1369 = DelayLine(7,x1108)
  x1105 = FixSLA(x1104,Const(4))
  x1031 = FixSLA(x1030,Const(4))
  x1315 = RegRead(x927)
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true))))
  x1068 = CounterChainNew(List(x1067))
  x1073 = RegRead(x1055)
  x1142 = And(x1139,x1141)
  x1041 = DRAMAddress(x903)
  x1078 = VecApply(x1360,0)
  x1327 = FixSLA(x1037,Const(6))
  x1063 = FieldApply(x1058,size)
  x1354 = DelayLine(7,x1041)
  x1127 = RegWrite(x1121,x1126,Set())
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359)))
  x1359 = DelayLine(1,x1035)
  x1366 = DelayLine(1,b1004)
  x1055 = RegNew(Const(0))
  x1330 = FixSLA(x1104,Const(6))
  x1313 = RegRead(x1056)
  x1059 = FieldApply(x1058,start)
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
  x1379 = DelayLine(1,x1145)
  x1087 = FIFONew(Const(16))
  x1147 = FixSLA(b1119,Const(4))
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None)
  x1362 = DelayLine(1,x1078)
  x1100 = FixSub(x1328,x1098)
  x1373 = DelayLine(1,x1102)
  x1040 = FixToFix(x1326,TRUE,_64,_0)
  x1109 = FixAdd(x1107,x1369)
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
  x1020 = FIFONew(Const(16))
  x1051 = CounterChainNew(List(x1050))
  x1377 = DelayLine(2,x1142)
  x1072 = FixLeq(x1071,b1069)
  x1351 = DelayLine(1,b1004)
  x1104 = FixDivSRA(x1103,Const(4))
  x1074 = FixLst(b1069,x1073)
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1311 = RegRead(x916)
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1))
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356)))
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1021 = StreamInNew(BurstDataBus())
  x1042 = FixAdd(x1040,x1354)
  x1355 = DelayLine(1,x1042)
  x1123 = RegNew(Const(0))
  x1370 = DelayLine(1,x1109)
  x1365 = DelayLine(2,b1053)
  x1027 = RegRead(x879)
  x1128 = FieldApply(x1125,end)
  x1360 = DelayLine(1,x1077)
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1))
  x1143 = FixSub(b1136,x1138)
  x1328 = FixFMA(x1093,x1367,x1366)
  x1375 = DelayLine(1,x1144)
  x1121 = RegNew(Const(0))
  x1064 = RegWrite(x1056,x1063,Set())
  x1111 = DRAMIsAlloc(x906)
  x1138 = RegRead(x1121)
  x1118 = CounterChainNew(List(x1117))
  x1329 = FixSLA(x1097,Const(6))
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1075 = And(x1072,x1074)
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371)))
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1131 = RegWrite(x1123,x1130,Set())
  x1060 = RegWrite(x1054,x1059,Set())
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1))
  x1086 = StreamOutNew(BurstCmdBus)
  x1054 = RegNew(Const(0))
  x1035 = FixAdd(x1033,x1353)
  x1071 = RegRead(x1054)
  x1026 = FixAdd(b913,b1024)
  x1135 = CounterChainNew(List(x1134))
  x1103 = FixAdd(x1102,Const(15))
  x1374 = DelayLine(2,x1100)
  x1125 = VecApply(x1124,0)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1139 = FixLeq(x1138,b1136)
  x1371 = DelayLine(10,b1092)
  x1312 = RegRead(x916)
  x1058 = VecApply(x1057,0)
  x1107 = FixToFix(x1329,TRUE,_64,_0)
  x1090 = CounterChainNew(List(x1089))
  x1356 = DelayLine(10,b1025)
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1))
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None)
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true))))
  x1122 = RegNew(Const(0))
  x1376 = DelayLine(1,x1147)
  x1080 = FixSLA(b1052,Const(4))
  x1325 = FixFMA(x1026,x1352,x1351)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1))
  x1061 = FieldApply(x1058,end)
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371)))
  x1044 = DRAMIsAlloc(x903)
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373)))
  x1364 = DelayLine(2,b1070)
  x1102 = FixAdd(x1100,x1368)
  x1076 = FixSub(b1069,x1071)
  x1034 = RegRead(x1010)
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1))
  x1081 = FixAdd(x1361,x1076)
  x1145 = VecApply(x1375,0)
  x1049 = FringeDenseLoad(x903,x1019,x1021)
  x1368 = DelayLine(8,x1101)
  x1098 = FixSLA(x1097,Const(4))
  x1038 = FixSLA(x1037,Const(4))
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1130 = FieldApply(x1125,size)
  x1358 = DelayLine(2,x1033)
  x1141 = FixLst(b1136,x1140)
  x1023 = CounterChainNew(List(x1022))
  x1353 = DelayLine(8,x1034)
  x1094 = RegRead(x879)
  x1140 = RegRead(x1122)
  x1372 = DelayLine(10,x1111)
  x1316 = RegRead(x1123)
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None)
  x1126 = FieldApply(x1125,start)
  x1108 = DRAMAddress(x906)
  x1326 = FixSLA(x1030,Const(6))
  x1062 = RegWrite(x1055,x1061,Set())
  x1101 = RegRead(x1010)
  x1030 = FixDivSRA(x1325,Const(4))
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356)))
  x1116 = FringeDenseLoad(x906,x1086,x1088)
  x1097 = FixDivSRA(x1328,Const(4))
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1363 = DelayLine(2,x1075)
  x1314 = RegRead(x927)
  x1056 = RegNew(Const(0))
  x1033 = FixSub(x1325,x1031)
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
  x1093 = FixAdd(b924,b1091)
  x1352 = DelayLine(1,x1027)
  x1129 = RegWrite(x1122,x1128,Set())
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None)
  x1378 = DelayLine(2,b1137)
  x1019 = StreamOutNew(BurstCmdBus)
  x1357 = DelayLine(10,x1044)
  x1367 = DelayLine(1,x1094)
  x1037 = FixDivSRA(x1036,Const(4))
  x1088 = StreamInNew(BurstDataBus())
Used:
  x1036 = FixAdd(x1035,Const(15)) [Made: true]
  b1024 [Made: true]
  x1369 = DelayLine(7,x1108) [Made: true]
  x1105 = FixSLA(x1104,Const(4)) [Made: true]
  x1031 = FixSLA(x1030,Const(4)) [Made: true]
  x1315 = RegRead(x927) [Made: true]
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None) [Made: true]
  () [Made: false]
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true)))) [Made: true]
  b1005 [Made: false]
  x1068 = CounterChainNew(List(x1067)) [Made: true]
  x1073 = RegRead(x1055) [Made: true]
  x1142 = And(x1139,x1141) [Made: true]
  x1041 = DRAMAddress(x903) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  b1137 [Made: true]
  x1327 = FixSLA(x1037,Const(6)) [Made: true]
  b913 [Made: false]
  x1063 = FieldApply(x1058,size) [Made: true]
  x1354 = DelayLine(7,x1041) [Made: true]
  x1127 = RegWrite(x1121,x1126,Set()) [Made: true]
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359))) [Made: true]
  x1359 = DelayLine(1,x1035) [Made: true]
  x1366 = DelayLine(1,b1004) [Made: true]
  x1055 = RegNew(Const(0)) [Made: true]
  x1330 = FixSLA(x1104,Const(6)) [Made: true]
  x1313 = RegRead(x1056) [Made: true]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None) [Made: true]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: true]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None) [Made: true]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1100 = FixSub(x1328,x1098) [Made: true]
  b924 [Made: false]
  x1373 = DelayLine(1,x1102) [Made: true]
  x1040 = FixToFix(x1326,TRUE,_64,_0) [Made: true]
  x1109 = FixAdd(x1107,x1369) [Made: true]
  b1136 [Made: true]
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: true]
  x1051 = CounterChainNew(List(x1050)) [Made: true]
  x1377 = DelayLine(2,x1142) [Made: true]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  b1119 [Made: true]
  x1351 = DelayLine(1,b1004) [Made: true]
  x1104 = FixDivSRA(x1103,Const(4)) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  b925 [Made: false]
  x1311 = RegRead(x916) [Made: true]
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1)) [Made: true]
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356))) [Made: true]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  b1091 [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: true]
  x1042 = FixAdd(x1040,x1354) [Made: true]
  x1355 = DelayLine(1,x1042) [Made: true]
  x1123 = RegNew(Const(0)) [Made: true]
  x1370 = DelayLine(1,x1109) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x1365 = DelayLine(2,b1053) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1027 = RegRead(x879) [Made: true]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1)) [Made: true]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1328 = FixFMA(x1093,x1367,x1366) [Made: true]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: true]
  x1064 = RegWrite(x1056,x1063,Set()) [Made: true]
  x1111 = DRAMIsAlloc(x906) [Made: true]
  x1138 = RegRead(x1121) [Made: true]
  x1118 = CounterChainNew(List(x1117)) [Made: true]
  x1329 = FixSLA(x1097,Const(6)) [Made: true]
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365))) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371))) [Made: true]
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1131 = RegWrite(x1123,x1130,Set()) [Made: true]
  x1060 = RegWrite(x1054,x1059,Set()) [Made: true]
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1)) [Made: true]
  x1086 = StreamOutNew(BurstCmdBus) [Made: true]
  x1054 = RegNew(Const(0)) [Made: true]
  x1035 = FixAdd(x1033,x1353) [Made: true]
  x1071 = RegRead(x1054) [Made: true]
  x1026 = FixAdd(b913,b1024) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1135 = CounterChainNew(List(x1134)) [Made: true]
  x1103 = FixAdd(x1102,Const(15)) [Made: true]
  x1374 = DelayLine(2,x1100) [Made: true]
  x1125 = VecApply(x1124,0) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x1371 = DelayLine(10,b1092) [Made: true]
  x1312 = RegRead(x916) [Made: true]
  x1058 = VecApply(x1057,0) [Made: true]
  x1107 = FixToFix(x1329,TRUE,_64,_0) [Made: true]
  b1092 [Made: true]
  x1090 = CounterChainNew(List(x1089)) [Made: true]
  x1356 = DelayLine(10,b1025) [Made: true]
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1)) [Made: true]
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true)))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: true]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  x1325 = FixFMA(x1026,x1352,x1351) [Made: true]
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1)) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371))) [Made: true]
  x1044 = DRAMIsAlloc(x903) [Made: true]
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373))) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1102 = FixAdd(x1100,x1368) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1034 = RegRead(x1010) [Made: true]
  x927 = RegNew(Const(0)) [Made: false]
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1)) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1049 = FringeDenseLoad(x903,x1019,x1021) [Made: true]
  b1025 [Made: true]
  b1070 [Made: true]
  x1368 = DelayLine(8,x1101) [Made: true]
  x1098 = FixSLA(x1097,Const(4)) [Made: true]
  b1053 [Made: true]
  x1038 = FixSLA(x1037,Const(4)) [Made: true]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1358 = DelayLine(2,x1033) [Made: true]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1023 = CounterChainNew(List(x1022)) [Made: true]
  x1353 = DelayLine(8,x1034) [Made: true]
  b1052 [Made: true]
  x1094 = RegRead(x879) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1372 = DelayLine(10,x1111) [Made: true]
  x1316 = RegRead(x1123) [Made: true]
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None) [Made: true]
  x903 = DRAMHostNew(List(x901, x902),Const(0)) [Made: false]
  x1126 = FieldApply(x1125,start) [Made: true]
  x1010 = RegNew(Const(0)) [Made: false]
  x1108 = DRAMAddress(x906) [Made: true]
  x1326 = FixSLA(x1030,Const(6)) [Made: true]
  x1062 = RegWrite(x1055,x1061,Set()) [Made: true]
  x1101 = RegRead(x1010) [Made: true]
  x1030 = FixDivSRA(x1325,Const(4)) [Made: true]
  b914 [Made: false]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356))) [Made: true]
  x1116 = FringeDenseLoad(x906,x1086,x1088) [Made: true]
  x1097 = FixDivSRA(x1328,Const(4)) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  x1314 = RegRead(x927) [Made: true]
  x1056 = RegNew(Const(0)) [Made: true]
  x1033 = FixSub(x1325,x1031) [Made: true]
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None) [Made: true]
  x1093 = FixAdd(b924,b1091) [Made: true]
  x1352 = DelayLine(1,x1027) [Made: true]
  x1129 = RegWrite(x1122,x1128,Set()) [Made: true]
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  x1019 = StreamOutNew(BurstCmdBus) [Made: true]
  x1357 = DelayLine(10,x1044) [Made: true]
  b1004 [Made: false]
  b1120 [Made: true]
  x1367 = DelayLine(1,x1094) [Made: true]
  x1037 = FixDivSRA(x1036,Const(4)) [Made: true]
  x1088 = StreamInNew(BurstDataBus()) [Made: true]
  b1069 [Made: true]
Inputs for x1334 are (Set(b1005, b913, b924, b925, x916, x879, x1017, x1016, x906, x927, x1018, x903, x1010, b914, b1004) ++ Set(x1010, x1016, x1017, x1018) ++ Set(x1021, x1086, x906, x903, x1019, x1088) ++ Set()) diff Set(x1085, x1153) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1036 = FixAdd(x1035,Const(15))
  x1369 = DelayLine(7,x1108)
  x1105 = FixSLA(x1104,Const(4))
  x1031 = FixSLA(x1030,Const(4))
  x1315 = RegRead(x927)
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true))))
  x1068 = CounterChainNew(List(x1067))
  x1073 = RegRead(x1055)
  x1142 = And(x1139,x1141)
  x1041 = DRAMAddress(x903)
  x1078 = VecApply(x1360,0)
  x1327 = FixSLA(x1037,Const(6))
  x1063 = FieldApply(x1058,size)
  x1354 = DelayLine(7,x1041)
  x1127 = RegWrite(x1121,x1126,Set())
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359)))
  x1359 = DelayLine(1,x1035)
  x1366 = DelayLine(1,b1004)
  x1055 = RegNew(Const(0))
  x1330 = FixSLA(x1104,Const(6))
  x1313 = RegRead(x1056)
  x1059 = FieldApply(x1058,start)
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
  x1379 = DelayLine(1,x1145)
  x1087 = FIFONew(Const(16))
  x1147 = FixSLA(b1119,Const(4))
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None)
  x1362 = DelayLine(1,x1078)
  x1100 = FixSub(x1328,x1098)
  x1373 = DelayLine(1,x1102)
  x1040 = FixToFix(x1326,TRUE,_64,_0)
  x1109 = FixAdd(x1107,x1369)
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
  x1020 = FIFONew(Const(16))
  x1051 = CounterChainNew(List(x1050))
  x1377 = DelayLine(2,x1142)
  x1072 = FixLeq(x1071,b1069)
  x1351 = DelayLine(1,b1004)
  x1104 = FixDivSRA(x1103,Const(4))
  x1074 = FixLst(b1069,x1073)
  x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1311 = RegRead(x916)
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1))
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356)))
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1021 = StreamInNew(BurstDataBus())
  x1042 = FixAdd(x1040,x1354)
  x1355 = DelayLine(1,x1042)
  x1123 = RegNew(Const(0))
  x1370 = DelayLine(1,x1109)
  x1365 = DelayLine(2,b1053)
  x1027 = RegRead(x879)
  x1128 = FieldApply(x1125,end)
  x1360 = DelayLine(1,x1077)
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1))
  x1143 = FixSub(b1136,x1138)
  x1328 = FixFMA(x1093,x1367,x1366)
  x1375 = DelayLine(1,x1144)
  x1121 = RegNew(Const(0))
  x1064 = RegWrite(x1056,x1063,Set())
  x1111 = DRAMIsAlloc(x906)
  x1138 = RegRead(x1121)
  x1118 = CounterChainNew(List(x1117))
  x1329 = FixSLA(x1097,Const(6))
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1075 = And(x1072,x1074)
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371)))
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1131 = RegWrite(x1123,x1130,Set())
  x1060 = RegWrite(x1054,x1059,Set())
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1))
  x1086 = StreamOutNew(BurstCmdBus)
  x1054 = RegNew(Const(0))
  x1035 = FixAdd(x1033,x1353)
  x1071 = RegRead(x1054)
  x1026 = FixAdd(b913,b1024)
  x1135 = CounterChainNew(List(x1134))
  x1103 = FixAdd(x1102,Const(15))
  x1374 = DelayLine(2,x1100)
  x1125 = VecApply(x1124,0)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1139 = FixLeq(x1138,b1136)
  x1371 = DelayLine(10,b1092)
  x1312 = RegRead(x916)
  x1058 = VecApply(x1057,0)
  x1107 = FixToFix(x1329,TRUE,_64,_0)
  x1090 = CounterChainNew(List(x1089))
  x1356 = DelayLine(10,b1025)
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1))
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None)
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true))))
  x1122 = RegNew(Const(0))
  x1376 = DelayLine(1,x1147)
  x1080 = FixSLA(b1052,Const(4))
  x1325 = FixFMA(x1026,x1352,x1351)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1))
  x1061 = FieldApply(x1058,end)
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371)))
  x1044 = DRAMIsAlloc(x903)
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373)))
  x1364 = DelayLine(2,b1070)
  x1102 = FixAdd(x1100,x1368)
  x1076 = FixSub(b1069,x1071)
  x1034 = RegRead(x1010)
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1))
  x1081 = FixAdd(x1361,x1076)
  x1145 = VecApply(x1375,0)
  x1049 = FringeDenseLoad(x903,x1019,x1021)
  x1368 = DelayLine(8,x1101)
  x1098 = FixSLA(x1097,Const(4))
  x1038 = FixSLA(x1037,Const(4))
  x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
  x1130 = FieldApply(x1125,size)
  x1358 = DelayLine(2,x1033)
  x1141 = FixLst(b1136,x1140)
  x1023 = CounterChainNew(List(x1022))
  x1353 = DelayLine(8,x1034)
  x1094 = RegRead(x879)
  x1140 = RegRead(x1122)
  x1372 = DelayLine(10,x1111)
  x1316 = RegRead(x1123)
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None)
  x1126 = FieldApply(x1125,start)
  x1108 = DRAMAddress(x906)
  x1326 = FixSLA(x1030,Const(6))
  x1062 = RegWrite(x1055,x1061,Set())
  x1101 = RegRead(x1010)
  x1030 = FixDivSRA(x1325,Const(4))
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356)))
  x1116 = FringeDenseLoad(x906,x1086,x1088)
  x1097 = FixDivSRA(x1328,Const(4))
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1363 = DelayLine(2,x1075)
  x1314 = RegRead(x927)
  x1056 = RegNew(Const(0))
  x1033 = FixSub(x1325,x1031)
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
  x1093 = FixAdd(b924,b1091)
  x1352 = DelayLine(1,x1027)
  x1129 = RegWrite(x1122,x1128,Set())
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None)
  x1378 = DelayLine(2,b1137)
  x1019 = StreamOutNew(BurstCmdBus)
  x1357 = DelayLine(10,x1044)
  x1367 = DelayLine(1,x1094)
  x1037 = FixDivSRA(x1036,Const(4))
  x1088 = StreamInNew(BurstDataBus())
Used:
  x1036 = FixAdd(x1035,Const(15)) [Made: true]
  b1024 [Made: true]
  x1369 = DelayLine(7,x1108) [Made: true]
  x1105 = FixSLA(x1104,Const(4)) [Made: true]
  x1031 = FixSLA(x1030,Const(4)) [Made: true]
  x1315 = RegRead(x927) [Made: true]
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None) [Made: true]
  () [Made: false]
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true)))) [Made: true]
  b1005 [Made: false]
  x1068 = CounterChainNew(List(x1067)) [Made: true]
  x1073 = RegRead(x1055) [Made: true]
  x1142 = And(x1139,x1141) [Made: true]
  x1041 = DRAMAddress(x903) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  b1137 [Made: true]
  x1327 = FixSLA(x1037,Const(6)) [Made: true]
  b913 [Made: false]
  x1063 = FieldApply(x1058,size) [Made: true]
  x1354 = DelayLine(7,x1041) [Made: true]
  x1127 = RegWrite(x1121,x1126,Set()) [Made: true]
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359))) [Made: true]
  x1359 = DelayLine(1,x1035) [Made: true]
  x1366 = DelayLine(1,b1004) [Made: true]
  x1055 = RegNew(Const(0)) [Made: true]
  x1330 = FixSLA(x1104,Const(6)) [Made: true]
  x1313 = RegRead(x1056) [Made: true]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None) [Made: true]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: true]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None) [Made: true]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1100 = FixSub(x1328,x1098) [Made: true]
  b924 [Made: false]
  x1373 = DelayLine(1,x1102) [Made: true]
  x1040 = FixToFix(x1326,TRUE,_64,_0) [Made: true]
  x1109 = FixAdd(x1107,x1369) [Made: true]
  b1136 [Made: true]
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: true]
  x1051 = CounterChainNew(List(x1050)) [Made: true]
  x1377 = DelayLine(2,x1142) [Made: true]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  b1119 [Made: true]
  x1351 = DelayLine(1,b1004) [Made: true]
  x1104 = FixDivSRA(x1103,Const(4)) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  b925 [Made: false]
  x1311 = RegRead(x916) [Made: true]
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1)) [Made: true]
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356))) [Made: true]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  b1091 [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: true]
  x1042 = FixAdd(x1040,x1354) [Made: true]
  x1355 = DelayLine(1,x1042) [Made: true]
  x1123 = RegNew(Const(0)) [Made: true]
  x1370 = DelayLine(1,x1109) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x1365 = DelayLine(2,b1053) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1027 = RegRead(x879) [Made: true]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1)) [Made: true]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1328 = FixFMA(x1093,x1367,x1366) [Made: true]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: true]
  x1064 = RegWrite(x1056,x1063,Set()) [Made: true]
  x1111 = DRAMIsAlloc(x906) [Made: true]
  x1138 = RegRead(x1121) [Made: true]
  x1118 = CounterChainNew(List(x1117)) [Made: true]
  x1329 = FixSLA(x1097,Const(6)) [Made: true]
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365))) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371))) [Made: true]
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1131 = RegWrite(x1123,x1130,Set()) [Made: true]
  x1060 = RegWrite(x1054,x1059,Set()) [Made: true]
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1)) [Made: true]
  x1086 = StreamOutNew(BurstCmdBus) [Made: true]
  x1054 = RegNew(Const(0)) [Made: true]
  x1035 = FixAdd(x1033,x1353) [Made: true]
  x1071 = RegRead(x1054) [Made: true]
  x1026 = FixAdd(b913,b1024) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1135 = CounterChainNew(List(x1134)) [Made: true]
  x1103 = FixAdd(x1102,Const(15)) [Made: true]
  x1374 = DelayLine(2,x1100) [Made: true]
  x1125 = VecApply(x1124,0) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x1371 = DelayLine(10,b1092) [Made: true]
  x1312 = RegRead(x916) [Made: true]
  x1058 = VecApply(x1057,0) [Made: true]
  x1107 = FixToFix(x1329,TRUE,_64,_0) [Made: true]
  b1092 [Made: true]
  x1090 = CounterChainNew(List(x1089)) [Made: true]
  x1356 = DelayLine(10,b1025) [Made: true]
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1)) [Made: true]
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true)))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: true]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  x1325 = FixFMA(x1026,x1352,x1351) [Made: true]
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1)) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371))) [Made: true]
  x1044 = DRAMIsAlloc(x903) [Made: true]
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373))) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1102 = FixAdd(x1100,x1368) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1034 = RegRead(x1010) [Made: true]
  x927 = RegNew(Const(0)) [Made: false]
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1)) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1049 = FringeDenseLoad(x903,x1019,x1021) [Made: true]
  b1025 [Made: true]
  b1070 [Made: true]
  x1368 = DelayLine(8,x1101) [Made: true]
  x1098 = FixSLA(x1097,Const(4)) [Made: true]
  b1053 [Made: true]
  x1038 = FixSLA(x1037,Const(4)) [Made: true]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1358 = DelayLine(2,x1033) [Made: true]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1023 = CounterChainNew(List(x1022)) [Made: true]
  x1353 = DelayLine(8,x1034) [Made: true]
  b1052 [Made: true]
  x1094 = RegRead(x879) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1372 = DelayLine(10,x1111) [Made: true]
  x1316 = RegRead(x1123) [Made: true]
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None) [Made: true]
  x903 = DRAMHostNew(List(x901, x902),Const(0)) [Made: false]
  x1126 = FieldApply(x1125,start) [Made: true]
  x1010 = RegNew(Const(0)) [Made: false]
  x1108 = DRAMAddress(x906) [Made: true]
  x1326 = FixSLA(x1030,Const(6)) [Made: true]
  x1062 = RegWrite(x1055,x1061,Set()) [Made: true]
  x1101 = RegRead(x1010) [Made: true]
  x1030 = FixDivSRA(x1325,Const(4)) [Made: true]
  b914 [Made: false]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356))) [Made: true]
  x1116 = FringeDenseLoad(x906,x1086,x1088) [Made: true]
  x1097 = FixDivSRA(x1328,Const(4)) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  x1314 = RegRead(x927) [Made: true]
  x1056 = RegNew(Const(0)) [Made: true]
  x1033 = FixSub(x1325,x1031) [Made: true]
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None) [Made: true]
  x1093 = FixAdd(b924,b1091) [Made: true]
  x1352 = DelayLine(1,x1027) [Made: true]
  x1129 = RegWrite(x1122,x1128,Set()) [Made: true]
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  x1019 = StreamOutNew(BurstCmdBus) [Made: true]
  x1357 = DelayLine(10,x1044) [Made: true]
  b1004 [Made: false]
  b1120 [Made: true]
  x1367 = DelayLine(1,x1094) [Made: true]
  x1037 = FixDivSRA(x1036,Const(4)) [Made: true]
  x1088 = StreamInNew(BurstDataBus()) [Made: true]
  b1069 [Made: true]
Inputs for x1334 are (Set(b1005, b913, b924, b925, x916, x879, x1017, x1016, x906, x927, x1018, x903, x1010, b914, b1004) ++ Set(x1010, x1016, x1017, x1018) ++ Set(x1021, x1086, x906, x903, x1019, x1088) ++ Set()) diff Set(x1085, x1153) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1334 = ParallelPipe(Set(),Block(Const(())))
 - b1005
 - b913
 - b924
 - b925
 - x1021 = StreamInNew(BurstDataBus())
 - x916 = RegNew(Const(0))
 - x879 = ArgInNew(Const(0))
 - x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1086 = StreamOutNew(BurstCmdBus)
 - x906 = DRAMHostNew(List(x904, x905),Const(0))
 - x927 = RegNew(Const(0))
 - x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x903 = DRAMHostNew(List(x901, x902),Const(0))
 - x1010 = RegNew(Const(0))
 - b914
 - x1019 = StreamOutNew(BurstCmdBus)
 - b1004
 - x1088 = StreamInNew(BurstDataBus())
 - b1005_chain_read_1
 - b913
 - b924
 - b925
 - x1021
 - x916_reg
 - x879_N
 - x1017_tileC_sram_0
 - x1016_tileB_sram_0
 - x1086
 - x906_c
 - x927_reg
 - x1018_tileC_sram_1
 - x903_b
 - x1010_reg
 - b914
 - x1019
 - b1004_chain_read_1
 - x1088
Stms:
  x1036 = FixAdd(x1035,Const(15))
  x1031 = FixSLA(x1030,Const(4))
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
  x1068 = CounterChainNew(List(x1067))
  x1073 = RegRead(x1055)
  x1041 = DRAMAddress(x903)
  x1078 = VecApply(x1360,0)
  x1327 = FixSLA(x1037,Const(6))
  x1063 = FieldApply(x1058,size)
  x1354 = DelayLine(7,x1041)
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359)))
  x1359 = DelayLine(1,x1035)
  x1055 = RegNew(Const(0))
  x1313 = RegRead(x1056)
  x1059 = FieldApply(x1058,start)
  x1362 = DelayLine(1,x1078)
  x1040 = FixToFix(x1326,TRUE,_64,_0)
  x1020 = FIFONew(Const(16))
  x1051 = CounterChainNew(List(x1050))
  x1072 = FixLeq(x1071,b1069)
  x1351 = DelayLine(1,b1004)
  x1074 = FixLst(b1069,x1073)
  x1311 = RegRead(x916)
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1))
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356)))
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1021 = StreamInNew(BurstDataBus())
  x1042 = FixAdd(x1040,x1354)
  x1355 = DelayLine(1,x1042)
  x1365 = DelayLine(2,b1053)
  x1027 = RegRead(x879)
  x1360 = DelayLine(1,x1077)
  x1064 = RegWrite(x1056,x1063,Set())
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1075 = And(x1072,x1074)
  x1060 = RegWrite(x1054,x1059,Set())
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1))
  x1054 = RegNew(Const(0))
  x1035 = FixAdd(x1033,x1353)
  x1071 = RegRead(x1054)
  x1026 = FixAdd(b913,b1024)
  x1312 = RegRead(x916)
  x1058 = VecApply(x1057,0)
  x1356 = DelayLine(10,b1025)
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None)
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true))))
  x1080 = FixSLA(b1052,Const(4))
  x1325 = FixFMA(x1026,x1352,x1351)
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1))
  x1061 = FieldApply(x1058,end)
  x1044 = DRAMIsAlloc(x903)
  x1364 = DelayLine(2,b1070)
  x1076 = FixSub(b1069,x1071)
  x1034 = RegRead(x1010)
  x1081 = FixAdd(x1361,x1076)
  x1049 = FringeDenseLoad(x903,x1019,x1021)
  x1038 = FixSLA(x1037,Const(4))
  x1358 = DelayLine(2,x1033)
  x1023 = CounterChainNew(List(x1022))
  x1353 = DelayLine(8,x1034)
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None)
  x1326 = FixSLA(x1030,Const(6))
  x1062 = RegWrite(x1055,x1061,Set())
  x1030 = FixDivSRA(x1325,Const(4))
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356)))
  x1363 = DelayLine(2,x1075)
  x1056 = RegNew(Const(0))
  x1033 = FixSub(x1325,x1031)
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
  x1352 = DelayLine(1,x1027)
  x1019 = StreamOutNew(BurstCmdBus)
  x1357 = DelayLine(10,x1044)
  x1037 = FixDivSRA(x1036,Const(4))
Used:
  x1036 = FixAdd(x1035,Const(15)) [Made: true]
  b1024 [Made: true]
  x1031 = FixSLA(x1030,Const(4)) [Made: true]
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None) [Made: true]
  () [Made: false]
  x1068 = CounterChainNew(List(x1067)) [Made: true]
  x1073 = RegRead(x1055) [Made: true]
  x1041 = DRAMAddress(x903) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  x1327 = FixSLA(x1037,Const(6)) [Made: true]
  b913 [Made: false]
  x1063 = FieldApply(x1058,size) [Made: true]
  x1354 = DelayLine(7,x1041) [Made: true]
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359))) [Made: true]
  x1359 = DelayLine(1,x1035) [Made: true]
  x1055 = RegNew(Const(0)) [Made: true]
  x1313 = RegRead(x1056) [Made: true]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1040 = FixToFix(x1326,TRUE,_64,_0) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: true]
  x1051 = CounterChainNew(List(x1050)) [Made: true]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  x1351 = DelayLine(1,b1004) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  x1311 = RegRead(x916) [Made: true]
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1)) [Made: true]
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356))) [Made: true]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: true]
  x1042 = FixAdd(x1040,x1354) [Made: true]
  x1355 = DelayLine(1,x1042) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x1365 = DelayLine(2,b1053) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1027 = RegRead(x879) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1064 = RegWrite(x1056,x1063,Set()) [Made: true]
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365))) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1060 = RegWrite(x1054,x1059,Set()) [Made: true]
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1)) [Made: true]
  x1054 = RegNew(Const(0)) [Made: true]
  x1035 = FixAdd(x1033,x1353) [Made: true]
  x1071 = RegRead(x1054) [Made: true]
  x1026 = FixAdd(b913,b1024) [Made: true]
  x1312 = RegRead(x916) [Made: true]
  x1058 = VecApply(x1057,0) [Made: true]
  x1356 = DelayLine(10,b1025) [Made: true]
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true)))) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  x1325 = FixFMA(x1026,x1352,x1351) [Made: true]
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1)) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1044 = DRAMIsAlloc(x903) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1034 = RegRead(x1010) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  b1025 [Made: true]
  b1070 [Made: true]
  b1053 [Made: true]
  x1038 = FixSLA(x1037,Const(4)) [Made: true]
  x1358 = DelayLine(2,x1033) [Made: true]
  x1023 = CounterChainNew(List(x1022)) [Made: true]
  x1353 = DelayLine(8,x1034) [Made: true]
  b1052 [Made: true]
  x903 = DRAMHostNew(List(x901, x902),Const(0)) [Made: false]
  x1010 = RegNew(Const(0)) [Made: false]
  x1326 = FixSLA(x1030,Const(6)) [Made: true]
  x1062 = RegWrite(x1055,x1061,Set()) [Made: true]
  x1030 = FixDivSRA(x1325,Const(4)) [Made: true]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356))) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  x1056 = RegNew(Const(0)) [Made: true]
  x1033 = FixSub(x1325,x1031) [Made: true]
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None) [Made: true]
  x1352 = DelayLine(1,x1027) [Made: true]
  x1019 = StreamOutNew(BurstCmdBus) [Made: true]
  x1357 = DelayLine(10,x1044) [Made: true]
  b1004 [Made: false]
  x1037 = FixDivSRA(x1036,Const(4)) [Made: true]
  b1069 [Made: true]
Inputs for x1085 are (Set(b1005, b913, b925, x916, x879, x1016, x903, x1010, b914, b1004) ++ Set() ++ Set(x1021, x903, x1019) ++ Set()) diff Set(x1020, x1051, x1311, x1050, x1312, x1048, x1022, x1049, x1023, x1084) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1036 = FixAdd(x1035,Const(15))
  x1031 = FixSLA(x1030,Const(4))
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
  x1068 = CounterChainNew(List(x1067))
  x1073 = RegRead(x1055)
  x1041 = DRAMAddress(x903)
  x1078 = VecApply(x1360,0)
  x1327 = FixSLA(x1037,Const(6))
  x1063 = FieldApply(x1058,size)
  x1354 = DelayLine(7,x1041)
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359)))
  x1359 = DelayLine(1,x1035)
  x1055 = RegNew(Const(0))
  x1313 = RegRead(x1056)
  x1059 = FieldApply(x1058,start)
  x1362 = DelayLine(1,x1078)
  x1040 = FixToFix(x1326,TRUE,_64,_0)
  x1020 = FIFONew(Const(16))
  x1051 = CounterChainNew(List(x1050))
  x1072 = FixLeq(x1071,b1069)
  x1351 = DelayLine(1,b1004)
  x1074 = FixLst(b1069,x1073)
  x1311 = RegRead(x916)
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1))
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356)))
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1021 = StreamInNew(BurstDataBus())
  x1042 = FixAdd(x1040,x1354)
  x1355 = DelayLine(1,x1042)
  x1365 = DelayLine(2,b1053)
  x1027 = RegRead(x879)
  x1360 = DelayLine(1,x1077)
  x1064 = RegWrite(x1056,x1063,Set())
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1075 = And(x1072,x1074)
  x1060 = RegWrite(x1054,x1059,Set())
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1))
  x1054 = RegNew(Const(0))
  x1035 = FixAdd(x1033,x1353)
  x1071 = RegRead(x1054)
  x1026 = FixAdd(b913,b1024)
  x1312 = RegRead(x916)
  x1058 = VecApply(x1057,0)
  x1356 = DelayLine(10,b1025)
  x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None)
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true))))
  x1080 = FixSLA(b1052,Const(4))
  x1325 = FixFMA(x1026,x1352,x1351)
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1))
  x1061 = FieldApply(x1058,end)
  x1044 = DRAMIsAlloc(x903)
  x1364 = DelayLine(2,b1070)
  x1076 = FixSub(b1069,x1071)
  x1034 = RegRead(x1010)
  x1081 = FixAdd(x1361,x1076)
  x1049 = FringeDenseLoad(x903,x1019,x1021)
  x1038 = FixSLA(x1037,Const(4))
  x1358 = DelayLine(2,x1033)
  x1023 = CounterChainNew(List(x1022))
  x1353 = DelayLine(8,x1034)
  x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None)
  x1326 = FixSLA(x1030,Const(6))
  x1062 = RegWrite(x1055,x1061,Set())
  x1030 = FixDivSRA(x1325,Const(4))
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356)))
  x1363 = DelayLine(2,x1075)
  x1056 = RegNew(Const(0))
  x1033 = FixSub(x1325,x1031)
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
  x1352 = DelayLine(1,x1027)
  x1019 = StreamOutNew(BurstCmdBus)
  x1357 = DelayLine(10,x1044)
  x1037 = FixDivSRA(x1036,Const(4))
Used:
  x1036 = FixAdd(x1035,Const(15)) [Made: true]
  b1024 [Made: true]
  x1031 = FixSLA(x1030,Const(4)) [Made: true]
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None) [Made: true]
  () [Made: false]
  x1068 = CounterChainNew(List(x1067)) [Made: true]
  x1073 = RegRead(x1055) [Made: true]
  x1041 = DRAMAddress(x903) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  x1327 = FixSLA(x1037,Const(6)) [Made: true]
  b913 [Made: false]
  x1063 = FieldApply(x1058,size) [Made: true]
  x1354 = DelayLine(7,x1041) [Made: true]
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359))) [Made: true]
  x1359 = DelayLine(1,x1035) [Made: true]
  x1055 = RegNew(Const(0)) [Made: true]
  x1313 = RegRead(x1056) [Made: true]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1040 = FixToFix(x1326,TRUE,_64,_0) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: true]
  x1051 = CounterChainNew(List(x1050)) [Made: true]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  x1351 = DelayLine(1,b1004) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  x1311 = RegRead(x916) [Made: true]
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1)) [Made: true]
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356))) [Made: true]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: true]
  x1042 = FixAdd(x1040,x1354) [Made: true]
  x1355 = DelayLine(1,x1042) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x1365 = DelayLine(2,b1053) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1027 = RegRead(x879) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1064 = RegWrite(x1056,x1063,Set()) [Made: true]
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365))) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1060 = RegWrite(x1054,x1059,Set()) [Made: true]
  x1050 = CounterNew(Const(0),x1312,Const(1),Const(1)) [Made: true]
  x1054 = RegNew(Const(0)) [Made: true]
  x1035 = FixAdd(x1033,x1353) [Made: true]
  x1071 = RegRead(x1054) [Made: true]
  x1026 = FixAdd(b913,b1024) [Made: true]
  x1312 = RegRead(x916) [Made: true]
  x1058 = VecApply(x1057,0) [Made: true]
  x1356 = DelayLine(10,b1025) [Made: true]
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true)))) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  x1325 = FixFMA(x1026,x1352,x1351) [Made: true]
  x1022 = CounterNew(Const(0),x1311,Const(1),Const(1)) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1044 = DRAMIsAlloc(x903) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1034 = RegRead(x1010) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  b1025 [Made: true]
  b1070 [Made: true]
  b1053 [Made: true]
  x1038 = FixSLA(x1037,Const(4)) [Made: true]
  x1358 = DelayLine(2,x1033) [Made: true]
  x1023 = CounterChainNew(List(x1022)) [Made: true]
  x1353 = DelayLine(8,x1034) [Made: true]
  b1052 [Made: true]
  x903 = DRAMHostNew(List(x901, x902),Const(0)) [Made: false]
  x1010 = RegNew(Const(0)) [Made: false]
  x1326 = FixSLA(x1030,Const(6)) [Made: true]
  x1062 = RegWrite(x1055,x1061,Set()) [Made: true]
  x1030 = FixDivSRA(x1325,Const(4)) [Made: true]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356))) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  x1056 = RegNew(Const(0)) [Made: true]
  x1033 = FixSub(x1325,x1031) [Made: true]
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None) [Made: true]
  x1352 = DelayLine(1,x1027) [Made: true]
  x1019 = StreamOutNew(BurstCmdBus) [Made: true]
  x1357 = DelayLine(10,x1044) [Made: true]
  b1004 [Made: false]
  x1037 = FixDivSRA(x1036,Const(4)) [Made: true]
  b1069 [Made: true]
Inputs for x1085 are (Set(b1005, b913, b925, x916, x879, x1016, x903, x1010, b914, b1004) ++ Set() ++ Set(x1021, x903, x1019) ++ Set()) diff Set(x1020, x1051, x1311, x1050, x1312, x1048, x1022, x1049, x1023, x1084) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1085 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
 - b1005
 - b913
 - b925
 - x1021 = StreamInNew(BurstDataBus())
 - x916 = RegNew(Const(0))
 - x879 = ArgInNew(Const(0))
 - x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x903 = DRAMHostNew(List(x901, x902),Const(0))
 - x1010 = RegNew(Const(0))
 - b914
 - x1019 = StreamOutNew(BurstCmdBus)
 - b1004
 - b1005
 - b913
 - b925
 - x1021
 - x916_reg
 - x879_N
 - x1016_tileB_sram_0
 - x903_b
 - x1010_reg
 - b914
 - x1019
 - b1004
Stms:
  x1036 = FixAdd(x1035,Const(15))
  x1031 = FixSLA(x1030,Const(4))
  x1041 = DRAMAddress(x903)
  x1327 = FixSLA(x1037,Const(6))
  x1354 = DelayLine(7,x1041)
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359)))
  x1359 = DelayLine(1,x1035)
  x1040 = FixToFix(x1326,TRUE,_64,_0)
  x1351 = DelayLine(1,b1004)
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356)))
  x1042 = FixAdd(x1040,x1354)
  x1355 = DelayLine(1,x1042)
  x1027 = RegRead(x879)
  x1035 = FixAdd(x1033,x1353)
  x1026 = FixAdd(b913,b1024)
  x1356 = DelayLine(10,b1025)
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true))))
  x1325 = FixFMA(x1026,x1352,x1351)
  x1044 = DRAMIsAlloc(x903)
  x1034 = RegRead(x1010)
  x1038 = FixSLA(x1037,Const(4))
  x1358 = DelayLine(2,x1033)
  x1353 = DelayLine(8,x1034)
  x1326 = FixSLA(x1030,Const(6))
  x1030 = FixDivSRA(x1325,Const(4))
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356)))
  x1033 = FixSub(x1325,x1031)
  x1352 = DelayLine(1,x1027)
  x1357 = DelayLine(10,x1044)
  x1037 = FixDivSRA(x1036,Const(4))
Used:
  x1036 = FixAdd(x1035,Const(15)) [Made: true]
  b1024 [Made: false]
  x1031 = FixSLA(x1030,Const(4)) [Made: true]
  x1041 = DRAMAddress(x903) [Made: true]
  x1327 = FixSLA(x1037,Const(6)) [Made: true]
  b913 [Made: false]
  x1354 = DelayLine(7,x1041) [Made: true]
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359))) [Made: true]
  x1359 = DelayLine(1,x1035) [Made: true]
  x1040 = FixToFix(x1326,TRUE,_64,_0) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: false]
  x1351 = DelayLine(1,b1004) [Made: true]
  x1042 = FixAdd(x1040,x1354) [Made: true]
  x1355 = DelayLine(1,x1042) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1027 = RegRead(x879) [Made: true]
  x1035 = FixAdd(x1033,x1353) [Made: true]
  x1026 = FixAdd(b913,b1024) [Made: true]
  x1356 = DelayLine(10,b1025) [Made: true]
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true)))) [Made: true]
  x1325 = FixFMA(x1026,x1352,x1351) [Made: true]
  x1044 = DRAMIsAlloc(x903) [Made: true]
  x1034 = RegRead(x1010) [Made: true]
  b1025 [Made: false]
  x1038 = FixSLA(x1037,Const(4)) [Made: true]
  x1358 = DelayLine(2,x1033) [Made: true]
  x1353 = DelayLine(8,x1034) [Made: true]
  x903 = DRAMHostNew(List(x901, x902),Const(0)) [Made: false]
  x1010 = RegNew(Const(0)) [Made: false]
  x1326 = FixSLA(x1030,Const(6)) [Made: true]
  x1030 = FixDivSRA(x1325,Const(4)) [Made: true]
  x1033 = FixSub(x1325,x1031) [Made: true]
  x1352 = DelayLine(1,x1027) [Made: true]
  x1019 = StreamOutNew(BurstCmdBus) [Made: false]
  x1357 = DelayLine(10,x1044) [Made: true]
  b1004 [Made: false]
  x1037 = FixDivSRA(x1036,Const(4)) [Made: true]
Inputs for x1048 are (Set(b1024, b913, x1020, x879, b1025, x903, x1010, x1019, b1004) ++ Set() ++ Set(x903, x1019) ++ Set(x1020, x1019)) diff Set(b1024, x1041, x1047, x1027, x1044, x1034, b1025, x1045) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1036 = FixAdd(x1035,Const(15))
  x1031 = FixSLA(x1030,Const(4))
  x1041 = DRAMAddress(x903)
  x1327 = FixSLA(x1037,Const(6))
  x1354 = DelayLine(7,x1041)
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359)))
  x1359 = DelayLine(1,x1035)
  x1040 = FixToFix(x1326,TRUE,_64,_0)
  x1351 = DelayLine(1,b1004)
  x1047 = FIFOBankedEnq(x1020,ArrayBuffer(x1046),ArrayBuffer(Set(Const(true), x1356)))
  x1042 = FixAdd(x1040,x1354)
  x1355 = DelayLine(1,x1042)
  x1027 = RegRead(x879)
  x1035 = FixAdd(x1033,x1353)
  x1026 = FixAdd(b913,b1024)
  x1356 = DelayLine(10,b1025)
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true))))
  x1325 = FixFMA(x1026,x1352,x1351)
  x1044 = DRAMIsAlloc(x903)
  x1034 = RegRead(x1010)
  x1038 = FixSLA(x1037,Const(4))
  x1358 = DelayLine(2,x1033)
  x1353 = DelayLine(8,x1034)
  x1326 = FixSLA(x1030,Const(6))
  x1030 = FixDivSRA(x1325,Const(4))
  x1045 = StreamOutBankedWrite(x1019,ArrayBuffer(x1043),ArrayBuffer(Set(x1357, x1356)))
  x1033 = FixSub(x1325,x1031)
  x1352 = DelayLine(1,x1027)
  x1357 = DelayLine(10,x1044)
  x1037 = FixDivSRA(x1036,Const(4))
Used:
  x1036 = FixAdd(x1035,Const(15)) [Made: true]
  b1024 [Made: false]
  x1031 = FixSLA(x1030,Const(4)) [Made: true]
  x1041 = DRAMAddress(x903) [Made: true]
  x1327 = FixSLA(x1037,Const(6)) [Made: true]
  b913 [Made: false]
  x1354 = DelayLine(7,x1041) [Made: true]
  x1046 = SimpleStruct(ArrayBuffer((size,x1038), (start,x1358), (end,x1359))) [Made: true]
  x1359 = DelayLine(1,x1035) [Made: true]
  x1040 = FixToFix(x1326,TRUE,_64,_0) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: false]
  x1351 = DelayLine(1,b1004) [Made: true]
  x1042 = FixAdd(x1040,x1354) [Made: true]
  x1355 = DelayLine(1,x1042) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1027 = RegRead(x879) [Made: true]
  x1035 = FixAdd(x1033,x1353) [Made: true]
  x1026 = FixAdd(b913,b1024) [Made: true]
  x1356 = DelayLine(10,b1025) [Made: true]
  x1043 = SimpleStruct(ArrayBuffer((offset,x1355), (size,x1327), (isLoad,Const(true)))) [Made: true]
  x1325 = FixFMA(x1026,x1352,x1351) [Made: true]
  x1044 = DRAMIsAlloc(x903) [Made: true]
  x1034 = RegRead(x1010) [Made: true]
  b1025 [Made: false]
  x1038 = FixSLA(x1037,Const(4)) [Made: true]
  x1358 = DelayLine(2,x1033) [Made: true]
  x1353 = DelayLine(8,x1034) [Made: true]
  x903 = DRAMHostNew(List(x901, x902),Const(0)) [Made: false]
  x1010 = RegNew(Const(0)) [Made: false]
  x1326 = FixSLA(x1030,Const(6)) [Made: true]
  x1030 = FixDivSRA(x1325,Const(4)) [Made: true]
  x1033 = FixSub(x1325,x1031) [Made: true]
  x1352 = DelayLine(1,x1027) [Made: true]
  x1019 = StreamOutNew(BurstCmdBus) [Made: false]
  x1357 = DelayLine(10,x1044) [Made: true]
  b1004 [Made: false]
  x1037 = FixDivSRA(x1036,Const(4)) [Made: true]
Inputs for x1048 are (Set(b1024, b913, x1020, x879, b1025, x903, x1010, x1019, b1004) ++ Set() ++ Set(x903, x1019) ++ Set(x1020, x1019)) diff Set(b1024, x1041, x1047, x1027, x1044, x1034, b1025, x1045) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1048 = UnrolledForeach(Set(),x1023,Block(Const(())),List(List(b1024)),List(List(b1025)),None)
 - b913
 - x1020 = FIFONew(Const(16))
 - x879 = ArgInNew(Const(0))
 - x903 = DRAMHostNew(List(x901, x902),Const(0))
 - x1010 = RegNew(Const(0))
 - x1019 = StreamOutNew(BurstCmdBus)
 - b1004
 - b913
 - x1020_fifo
 - x879_N
 - x903_b
 - x1010_reg
 - x1019
 - b1004
Stms:
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
  x1068 = CounterChainNew(List(x1067))
  x1073 = RegRead(x1055)
  x1078 = VecApply(x1360,0)
  x1063 = FieldApply(x1058,size)
  x1055 = RegNew(Const(0))
  x1313 = RegRead(x1056)
  x1059 = FieldApply(x1058,start)
  x1362 = DelayLine(1,x1078)
  x1072 = FixLeq(x1071,b1069)
  x1074 = FixLst(b1069,x1073)
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1))
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1365 = DelayLine(2,b1053)
  x1360 = DelayLine(1,x1077)
  x1064 = RegWrite(x1056,x1063,Set())
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1075 = And(x1072,x1074)
  x1060 = RegWrite(x1054,x1059,Set())
  x1054 = RegNew(Const(0))
  x1071 = RegRead(x1054)
  x1058 = VecApply(x1057,0)
  x1080 = FixSLA(b1052,Const(4))
  x1061 = FieldApply(x1058,end)
  x1364 = DelayLine(2,b1070)
  x1076 = FixSub(b1069,x1071)
  x1081 = FixAdd(x1361,x1076)
  x1062 = RegWrite(x1055,x1061,Set())
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1363 = DelayLine(2,x1075)
  x1056 = RegNew(Const(0))
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
Used:
  () [Made: false]
  x1068 = CounterChainNew(List(x1067)) [Made: true]
  x1073 = RegRead(x1055) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  x1063 = FieldApply(x1058,size) [Made: true]
  x1055 = RegNew(Const(0)) [Made: true]
  x1313 = RegRead(x1056) [Made: true]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: false]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1)) [Made: true]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: false]
  x1365 = DelayLine(2,b1053) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1064 = RegWrite(x1056,x1063,Set()) [Made: true]
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365))) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1060 = RegWrite(x1054,x1059,Set()) [Made: true]
  x1054 = RegNew(Const(0)) [Made: true]
  x1071 = RegRead(x1054) [Made: true]
  x1058 = VecApply(x1057,0) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  b1070 [Made: true]
  b1053 [Made: false]
  b1052 [Made: false]
  x1062 = RegWrite(x1055,x1061,Set()) [Made: true]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  x1056 = RegNew(Const(0)) [Made: true]
  b1069 [Made: true]
Inputs for x1084 are (Set(x1020, x1021, x1016, b1053, b1052, x1056) ++ Set() ++ Set(x1021) ++ Set()) diff Set(x1083, x1068, x1055, x1313, x1067, x1054, b1053, b1052, x1056, x1065) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
  x1068 = CounterChainNew(List(x1067))
  x1073 = RegRead(x1055)
  x1078 = VecApply(x1360,0)
  x1063 = FieldApply(x1058,size)
  x1055 = RegNew(Const(0))
  x1313 = RegRead(x1056)
  x1059 = FieldApply(x1058,start)
  x1362 = DelayLine(1,x1078)
  x1072 = FixLeq(x1071,b1069)
  x1074 = FixLst(b1069,x1073)
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1))
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1365 = DelayLine(2,b1053)
  x1360 = DelayLine(1,x1077)
  x1064 = RegWrite(x1056,x1063,Set())
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1075 = And(x1072,x1074)
  x1060 = RegWrite(x1054,x1059,Set())
  x1054 = RegNew(Const(0))
  x1071 = RegRead(x1054)
  x1058 = VecApply(x1057,0)
  x1080 = FixSLA(b1052,Const(4))
  x1061 = FieldApply(x1058,end)
  x1364 = DelayLine(2,b1070)
  x1076 = FixSub(b1069,x1071)
  x1081 = FixAdd(x1361,x1076)
  x1062 = RegWrite(x1055,x1061,Set())
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1363 = DelayLine(2,x1075)
  x1056 = RegNew(Const(0))
  x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
Used:
  () [Made: false]
  x1068 = CounterChainNew(List(x1067)) [Made: true]
  x1073 = RegRead(x1055) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  x1063 = FieldApply(x1058,size) [Made: true]
  x1055 = RegNew(Const(0)) [Made: true]
  x1313 = RegRead(x1056) [Made: true]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: false]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  x1067 = CounterNew(Const(0),x1313,Const(1),Const(1)) [Made: true]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: false]
  x1365 = DelayLine(2,b1053) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1064 = RegWrite(x1056,x1063,Set()) [Made: true]
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365))) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1060 = RegWrite(x1054,x1059,Set()) [Made: true]
  x1054 = RegNew(Const(0)) [Made: true]
  x1071 = RegRead(x1054) [Made: true]
  x1058 = VecApply(x1057,0) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  b1070 [Made: true]
  b1053 [Made: false]
  b1052 [Made: false]
  x1062 = RegWrite(x1055,x1061,Set()) [Made: true]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  x1056 = RegNew(Const(0)) [Made: true]
  b1069 [Made: true]
Inputs for x1084 are (Set(x1020, x1021, x1016, b1053, b1052, x1056) ++ Set() ++ Set(x1021) ++ Set()) diff Set(x1083, x1068, x1055, x1313, x1067, x1054, b1053, b1052, x1056, x1065) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1084 = UnrolledForeach(Set(),x1051,Block(Const(())),List(List(b1052)),List(List(b1053)),None)
 - x1020 = FIFONew(Const(16))
 - x1021 = StreamInNew(BurstDataBus())
 - x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1020_fifo
 - x1021
 - x1016_tileB_sram_0
Stms:
  x1063 = FieldApply(x1058,size)
  x1059 = FieldApply(x1058,start)
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1064 = RegWrite(x1056,x1063,Set())
  x1060 = RegWrite(x1054,x1059,Set())
  x1058 = VecApply(x1057,0)
  x1061 = FieldApply(x1058,end)
  x1062 = RegWrite(x1055,x1061,Set())
Used:
  x1063 = FieldApply(x1058,size) [Made: true]
  x1055 = RegNew(Const(0)) [Made: false]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: false]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1054 = RegNew(Const(0)) [Made: false]
  x1058 = VecApply(x1057,0) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1056 = RegNew(Const(0)) [Made: false]
Inputs for x1065 are (Set(x1055, x1020, x1054, b1053, x1056) ++ Set() ++ Set() ++ Set(x1020)) diff Set(x1057, x1060, x1062, x1064) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1063 = FieldApply(x1058,size)
  x1059 = FieldApply(x1058,start)
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1064 = RegWrite(x1056,x1063,Set())
  x1060 = RegWrite(x1054,x1059,Set())
  x1058 = VecApply(x1057,0)
  x1061 = FieldApply(x1058,end)
  x1062 = RegWrite(x1055,x1061,Set())
Used:
  x1063 = FieldApply(x1058,size) [Made: true]
  x1055 = RegNew(Const(0)) [Made: false]
  x1059 = FieldApply(x1058,start) [Made: true]
  x1020 = FIFONew(Const(16)) [Made: false]
  x1057 = FIFOBankedDeq(x1020,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1054 = RegNew(Const(0)) [Made: false]
  x1058 = VecApply(x1057,0) [Made: true]
  x1061 = FieldApply(x1058,end) [Made: true]
  x1056 = RegNew(Const(0)) [Made: false]
Inputs for x1065 are (Set(x1055, x1020, x1054, b1053, x1056) ++ Set() ++ Set() ++ Set(x1020)) diff Set(x1057, x1060, x1062, x1064) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1065 = UnitPipe(Set(b1053),Block(Const(())),None)
 - x1055 = RegNew(Const(0))
 - x1020 = FIFONew(Const(16))
 - x1054 = RegNew(Const(0))
 - b1053
 - x1056 = RegNew(Const(0))
 - x1055_reg
 - x1020_fifo
 - x1054_reg
 - b1053
 - x1056_reg
Stms:
  x1073 = RegRead(x1055)
  x1078 = VecApply(x1360,0)
  x1362 = DelayLine(1,x1078)
  x1072 = FixLeq(x1071,b1069)
  x1074 = FixLst(b1069,x1073)
  x1365 = DelayLine(2,b1053)
  x1360 = DelayLine(1,x1077)
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1075 = And(x1072,x1074)
  x1071 = RegRead(x1054)
  x1080 = FixSLA(b1052,Const(4))
  x1364 = DelayLine(2,b1070)
  x1076 = FixSub(b1069,x1071)
  x1081 = FixAdd(x1361,x1076)
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1363 = DelayLine(2,x1075)
Used:
  x1073 = RegRead(x1055) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  x1055 = RegNew(Const(0)) [Made: false]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: false]
  x1365 = DelayLine(2,b1053) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1054 = RegNew(Const(0)) [Made: false]
  x1071 = RegRead(x1054) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  b1070 [Made: false]
  b1053 [Made: false]
  b1052 [Made: false]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  b1069 [Made: false]
Inputs for x1083 are (Set(x1055, x1021, x1016, x1054, b1070, b1053, b1052, b1069) ++ Set() ++ Set(x1021) ++ Set(x1021)) diff Set(x1073, x1082, x1071, b1070, x1077, b1069) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1073 = RegRead(x1055)
  x1078 = VecApply(x1360,0)
  x1362 = DelayLine(1,x1078)
  x1072 = FixLeq(x1071,b1069)
  x1074 = FixLst(b1069,x1073)
  x1365 = DelayLine(2,b1053)
  x1360 = DelayLine(1,x1077)
  x1082 = SRAMBankedWrite(x1016,Vector(x1362),Vector(List(Const(0))),Vector(x1081),Vector(Set(x1363, x1364, x1365)))
  x1361 = DelayLine(1,x1080)
  x1075 = And(x1072,x1074)
  x1071 = RegRead(x1054)
  x1080 = FixSLA(b1052,Const(4))
  x1364 = DelayLine(2,b1070)
  x1076 = FixSub(b1069,x1071)
  x1081 = FixAdd(x1361,x1076)
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053)))
  x1363 = DelayLine(2,x1075)
Used:
  x1073 = RegRead(x1055) [Made: true]
  x1078 = VecApply(x1360,0) [Made: true]
  x1055 = RegNew(Const(0)) [Made: false]
  x1362 = DelayLine(1,x1078) [Made: true]
  x1072 = FixLeq(x1071,b1069) [Made: true]
  x1074 = FixLst(b1069,x1073) [Made: true]
  x1021 = StreamInNew(BurstDataBus()) [Made: false]
  x1365 = DelayLine(2,b1053) [Made: true]
  x1360 = DelayLine(1,x1077) [Made: true]
  x1361 = DelayLine(1,x1080) [Made: true]
  x1075 = And(x1072,x1074) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1054 = RegNew(Const(0)) [Made: false]
  x1071 = RegRead(x1054) [Made: true]
  x1080 = FixSLA(b1052,Const(4)) [Made: true]
  x1364 = DelayLine(2,b1070) [Made: true]
  x1076 = FixSub(b1069,x1071) [Made: true]
  x1081 = FixAdd(x1361,x1076) [Made: true]
  b1070 [Made: false]
  b1053 [Made: false]
  b1052 [Made: false]
  x1077 = StreamInBankedRead(x1021,ArrayBuffer(Set(b1070, b1053))) [Made: true]
  x1363 = DelayLine(2,x1075) [Made: true]
  b1069 [Made: false]
Inputs for x1083 are (Set(x1055, x1021, x1016, x1054, b1070, b1053, b1052, b1069) ++ Set() ++ Set(x1021) ++ Set(x1021)) diff Set(x1073, x1082, x1071, b1070, x1077, b1069) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1083 = UnrolledForeach(Set(b1053),x1068,Block(Const(())),List(List(b1069)),List(List(b1070)),None)
 - x1055 = RegNew(Const(0))
 - x1021 = StreamInNew(BurstDataBus())
 - x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1054 = RegNew(Const(0))
 - b1053
 - b1052
 - x1055_reg
 - x1021
 - x1016_tileB_sram_0
 - x1054_reg
 - b1053
 - b1052
Stms:
  x1369 = DelayLine(7,x1108)
  x1105 = FixSLA(x1104,Const(4))
  x1315 = RegRead(x927)
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true))))
  x1142 = And(x1139,x1141)
  x1127 = RegWrite(x1121,x1126,Set())
  x1366 = DelayLine(1,b1004)
  x1330 = FixSLA(x1104,Const(6))
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
  x1379 = DelayLine(1,x1145)
  x1087 = FIFONew(Const(16))
  x1147 = FixSLA(b1119,Const(4))
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None)
  x1100 = FixSub(x1328,x1098)
  x1373 = DelayLine(1,x1102)
  x1109 = FixAdd(x1107,x1369)
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
  x1377 = DelayLine(2,x1142)
  x1104 = FixDivSRA(x1103,Const(4))
  x1123 = RegNew(Const(0))
  x1370 = DelayLine(1,x1109)
  x1128 = FieldApply(x1125,end)
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1))
  x1143 = FixSub(b1136,x1138)
  x1328 = FixFMA(x1093,x1367,x1366)
  x1375 = DelayLine(1,x1144)
  x1121 = RegNew(Const(0))
  x1111 = DRAMIsAlloc(x906)
  x1138 = RegRead(x1121)
  x1118 = CounterChainNew(List(x1117))
  x1329 = FixSLA(x1097,Const(6))
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371)))
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1131 = RegWrite(x1123,x1130,Set())
  x1086 = StreamOutNew(BurstCmdBus)
  x1135 = CounterChainNew(List(x1134))
  x1103 = FixAdd(x1102,Const(15))
  x1374 = DelayLine(2,x1100)
  x1125 = VecApply(x1124,0)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1139 = FixLeq(x1138,b1136)
  x1371 = DelayLine(10,b1092)
  x1107 = FixToFix(x1329,TRUE,_64,_0)
  x1090 = CounterChainNew(List(x1089))
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1))
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1122 = RegNew(Const(0))
  x1376 = DelayLine(1,x1147)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371)))
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373)))
  x1102 = FixAdd(x1100,x1368)
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1))
  x1145 = VecApply(x1375,0)
  x1368 = DelayLine(8,x1101)
  x1098 = FixSLA(x1097,Const(4))
  x1130 = FieldApply(x1125,size)
  x1141 = FixLst(b1136,x1140)
  x1094 = RegRead(x879)
  x1140 = RegRead(x1122)
  x1372 = DelayLine(10,x1111)
  x1316 = RegRead(x1123)
  x1126 = FieldApply(x1125,start)
  x1108 = DRAMAddress(x906)
  x1101 = RegRead(x1010)
  x1116 = FringeDenseLoad(x906,x1086,x1088)
  x1097 = FixDivSRA(x1328,Const(4))
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1314 = RegRead(x927)
  x1093 = FixAdd(b924,b1091)
  x1129 = RegWrite(x1122,x1128,Set())
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None)
  x1378 = DelayLine(2,b1137)
  x1367 = DelayLine(1,x1094)
  x1088 = StreamInNew(BurstDataBus())
Used:
  x1369 = DelayLine(7,x1108) [Made: true]
  x1105 = FixSLA(x1104,Const(4)) [Made: true]
  x1315 = RegRead(x927) [Made: true]
  () [Made: false]
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true)))) [Made: true]
  x1142 = And(x1139,x1141) [Made: true]
  b1137 [Made: true]
  x1127 = RegWrite(x1121,x1126,Set()) [Made: true]
  x1366 = DelayLine(1,b1004) [Made: true]
  x1330 = FixSLA(x1104,Const(6)) [Made: true]
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None) [Made: true]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: true]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  x1100 = FixSub(x1328,x1098) [Made: true]
  b924 [Made: false]
  x1373 = DelayLine(1,x1102) [Made: true]
  x1109 = FixAdd(x1107,x1369) [Made: true]
  b1136 [Made: true]
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None) [Made: true]
  x1377 = DelayLine(2,x1142) [Made: true]
  b1119 [Made: true]
  x1104 = FixDivSRA(x1103,Const(4)) [Made: true]
  b1091 [Made: true]
  x1123 = RegNew(Const(0)) [Made: true]
  x1370 = DelayLine(1,x1109) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1)) [Made: true]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1328 = FixFMA(x1093,x1367,x1366) [Made: true]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: true]
  x1111 = DRAMIsAlloc(x906) [Made: true]
  x1138 = RegRead(x1121) [Made: true]
  x1118 = CounterChainNew(List(x1117)) [Made: true]
  x1329 = FixSLA(x1097,Const(6)) [Made: true]
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371))) [Made: true]
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1131 = RegWrite(x1123,x1130,Set()) [Made: true]
  x1086 = StreamOutNew(BurstCmdBus) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1135 = CounterChainNew(List(x1134)) [Made: true]
  x1103 = FixAdd(x1102,Const(15)) [Made: true]
  x1374 = DelayLine(2,x1100) [Made: true]
  x1125 = VecApply(x1124,0) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x1371 = DelayLine(10,b1092) [Made: true]
  x1107 = FixToFix(x1329,TRUE,_64,_0) [Made: true]
  b1092 [Made: true]
  x1090 = CounterChainNew(List(x1089)) [Made: true]
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1)) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: true]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371))) [Made: true]
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373))) [Made: true]
  x1102 = FixAdd(x1100,x1368) [Made: true]
  x927 = RegNew(Const(0)) [Made: false]
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1)) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1368 = DelayLine(8,x1101) [Made: true]
  x1098 = FixSLA(x1097,Const(4)) [Made: true]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1094 = RegRead(x879) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1372 = DelayLine(10,x1111) [Made: true]
  x1316 = RegRead(x1123) [Made: true]
  x1126 = FieldApply(x1125,start) [Made: true]
  x1010 = RegNew(Const(0)) [Made: false]
  x1108 = DRAMAddress(x906) [Made: true]
  x1101 = RegRead(x1010) [Made: true]
  x1097 = FixDivSRA(x1328,Const(4)) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1314 = RegRead(x927) [Made: true]
  x1093 = FixAdd(b924,b1091) [Made: true]
  x1129 = RegWrite(x1122,x1128,Set()) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  b1004 [Made: false]
  b1120 [Made: true]
  x1367 = DelayLine(1,x1094) [Made: true]
  x1088 = StreamInNew(BurstDataBus()) [Made: true]
Inputs for x1153 are (Set(b1005, b924, b925, x879, x1017, x906, x927, x1018, x1010, b914, b1004) ++ Set() ++ Set(x1086, x906, x1088) ++ Set()) diff Set(x1315, x1087, x1115, x1089, x1118, x1090, x1117, x1116, x1314, x1152) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1369 = DelayLine(7,x1108)
  x1105 = FixSLA(x1104,Const(4))
  x1315 = RegRead(x927)
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true))))
  x1142 = And(x1139,x1141)
  x1127 = RegWrite(x1121,x1126,Set())
  x1366 = DelayLine(1,b1004)
  x1330 = FixSLA(x1104,Const(6))
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
  x1379 = DelayLine(1,x1145)
  x1087 = FIFONew(Const(16))
  x1147 = FixSLA(b1119,Const(4))
  x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None)
  x1100 = FixSub(x1328,x1098)
  x1373 = DelayLine(1,x1102)
  x1109 = FixAdd(x1107,x1369)
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
  x1377 = DelayLine(2,x1142)
  x1104 = FixDivSRA(x1103,Const(4))
  x1123 = RegNew(Const(0))
  x1370 = DelayLine(1,x1109)
  x1128 = FieldApply(x1125,end)
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1))
  x1143 = FixSub(b1136,x1138)
  x1328 = FixFMA(x1093,x1367,x1366)
  x1375 = DelayLine(1,x1144)
  x1121 = RegNew(Const(0))
  x1111 = DRAMIsAlloc(x906)
  x1138 = RegRead(x1121)
  x1118 = CounterChainNew(List(x1117))
  x1329 = FixSLA(x1097,Const(6))
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371)))
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1131 = RegWrite(x1123,x1130,Set())
  x1086 = StreamOutNew(BurstCmdBus)
  x1135 = CounterChainNew(List(x1134))
  x1103 = FixAdd(x1102,Const(15))
  x1374 = DelayLine(2,x1100)
  x1125 = VecApply(x1124,0)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1139 = FixLeq(x1138,b1136)
  x1371 = DelayLine(10,b1092)
  x1107 = FixToFix(x1329,TRUE,_64,_0)
  x1090 = CounterChainNew(List(x1089))
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1))
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1122 = RegNew(Const(0))
  x1376 = DelayLine(1,x1147)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371)))
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373)))
  x1102 = FixAdd(x1100,x1368)
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1))
  x1145 = VecApply(x1375,0)
  x1368 = DelayLine(8,x1101)
  x1098 = FixSLA(x1097,Const(4))
  x1130 = FieldApply(x1125,size)
  x1141 = FixLst(b1136,x1140)
  x1094 = RegRead(x879)
  x1140 = RegRead(x1122)
  x1372 = DelayLine(10,x1111)
  x1316 = RegRead(x1123)
  x1126 = FieldApply(x1125,start)
  x1108 = DRAMAddress(x906)
  x1101 = RegRead(x1010)
  x1116 = FringeDenseLoad(x906,x1086,x1088)
  x1097 = FixDivSRA(x1328,Const(4))
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1314 = RegRead(x927)
  x1093 = FixAdd(b924,b1091)
  x1129 = RegWrite(x1122,x1128,Set())
  x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None)
  x1378 = DelayLine(2,b1137)
  x1367 = DelayLine(1,x1094)
  x1088 = StreamInNew(BurstDataBus())
Used:
  x1369 = DelayLine(7,x1108) [Made: true]
  x1105 = FixSLA(x1104,Const(4)) [Made: true]
  x1315 = RegRead(x927) [Made: true]
  () [Made: false]
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true)))) [Made: true]
  x1142 = And(x1139,x1141) [Made: true]
  b1137 [Made: true]
  x1127 = RegWrite(x1121,x1126,Set()) [Made: true]
  x1366 = DelayLine(1,b1004) [Made: true]
  x1330 = FixSLA(x1104,Const(6)) [Made: true]
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None) [Made: true]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: true]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  x1100 = FixSub(x1328,x1098) [Made: true]
  b924 [Made: false]
  x1373 = DelayLine(1,x1102) [Made: true]
  x1109 = FixAdd(x1107,x1369) [Made: true]
  b1136 [Made: true]
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None) [Made: true]
  x1377 = DelayLine(2,x1142) [Made: true]
  b1119 [Made: true]
  x1104 = FixDivSRA(x1103,Const(4)) [Made: true]
  b1091 [Made: true]
  x1123 = RegNew(Const(0)) [Made: true]
  x1370 = DelayLine(1,x1109) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1089 = CounterNew(Const(0),x1314,Const(1),Const(1)) [Made: true]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1328 = FixFMA(x1093,x1367,x1366) [Made: true]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: true]
  x1111 = DRAMIsAlloc(x906) [Made: true]
  x1138 = RegRead(x1121) [Made: true]
  x1118 = CounterChainNew(List(x1117)) [Made: true]
  x1329 = FixSLA(x1097,Const(6)) [Made: true]
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371))) [Made: true]
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1131 = RegWrite(x1123,x1130,Set()) [Made: true]
  x1086 = StreamOutNew(BurstCmdBus) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1135 = CounterChainNew(List(x1134)) [Made: true]
  x1103 = FixAdd(x1102,Const(15)) [Made: true]
  x1374 = DelayLine(2,x1100) [Made: true]
  x1125 = VecApply(x1124,0) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x1371 = DelayLine(10,b1092) [Made: true]
  x1107 = FixToFix(x1329,TRUE,_64,_0) [Made: true]
  b1092 [Made: true]
  x1090 = CounterChainNew(List(x1089)) [Made: true]
  x1117 = CounterNew(Const(0),x1315,Const(1),Const(1)) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: true]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371))) [Made: true]
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373))) [Made: true]
  x1102 = FixAdd(x1100,x1368) [Made: true]
  x927 = RegNew(Const(0)) [Made: false]
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1)) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1368 = DelayLine(8,x1101) [Made: true]
  x1098 = FixSLA(x1097,Const(4)) [Made: true]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1094 = RegRead(x879) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1372 = DelayLine(10,x1111) [Made: true]
  x1316 = RegRead(x1123) [Made: true]
  x1126 = FieldApply(x1125,start) [Made: true]
  x1010 = RegNew(Const(0)) [Made: false]
  x1108 = DRAMAddress(x906) [Made: true]
  x1101 = RegRead(x1010) [Made: true]
  x1097 = FixDivSRA(x1328,Const(4)) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1314 = RegRead(x927) [Made: true]
  x1093 = FixAdd(b924,b1091) [Made: true]
  x1129 = RegWrite(x1122,x1128,Set()) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  b1004 [Made: false]
  b1120 [Made: true]
  x1367 = DelayLine(1,x1094) [Made: true]
  x1088 = StreamInNew(BurstDataBus()) [Made: true]
Inputs for x1153 are (Set(b1005, b924, b925, x879, x1017, x906, x927, x1018, x1010, b914, b1004) ++ Set() ++ Set(x1086, x906, x1088) ++ Set()) diff Set(x1315, x1087, x1115, x1089, x1118, x1090, x1117, x1116, x1314, x1152) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1153 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
 - b1005
 - b924
 - b925
 - x879 = ArgInNew(Const(0))
 - x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1086 = StreamOutNew(BurstCmdBus)
 - x906 = DRAMHostNew(List(x904, x905),Const(0))
 - x927 = RegNew(Const(0))
 - x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1010 = RegNew(Const(0))
 - b914
 - b1004
 - x1088 = StreamInNew(BurstDataBus())
 - b1005
 - b924
 - b925
 - x879_N
 - x1017_tileC_sram_0
 - x1086
 - x906_c
 - x927_reg
 - x1018_tileC_sram_1
 - x1010_reg
 - b914
 - b1004
 - x1088
Stms:
  x1369 = DelayLine(7,x1108)
  x1105 = FixSLA(x1104,Const(4))
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true))))
  x1366 = DelayLine(1,b1004)
  x1330 = FixSLA(x1104,Const(6))
  x1100 = FixSub(x1328,x1098)
  x1373 = DelayLine(1,x1102)
  x1109 = FixAdd(x1107,x1369)
  x1104 = FixDivSRA(x1103,Const(4))
  x1370 = DelayLine(1,x1109)
  x1328 = FixFMA(x1093,x1367,x1366)
  x1111 = DRAMIsAlloc(x906)
  x1329 = FixSLA(x1097,Const(6))
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371)))
  x1103 = FixAdd(x1102,Const(15))
  x1374 = DelayLine(2,x1100)
  x1371 = DelayLine(10,b1092)
  x1107 = FixToFix(x1329,TRUE,_64,_0)
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371)))
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373)))
  x1102 = FixAdd(x1100,x1368)
  x1368 = DelayLine(8,x1101)
  x1098 = FixSLA(x1097,Const(4))
  x1094 = RegRead(x879)
  x1372 = DelayLine(10,x1111)
  x1108 = DRAMAddress(x906)
  x1101 = RegRead(x1010)
  x1097 = FixDivSRA(x1328,Const(4))
  x1093 = FixAdd(b924,b1091)
  x1367 = DelayLine(1,x1094)
Used:
  x1369 = DelayLine(7,x1108) [Made: true]
  x1105 = FixSLA(x1104,Const(4)) [Made: true]
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true)))) [Made: true]
  x1366 = DelayLine(1,b1004) [Made: true]
  x1330 = FixSLA(x1104,Const(6)) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: false]
  x1100 = FixSub(x1328,x1098) [Made: true]
  b924 [Made: false]
  x1373 = DelayLine(1,x1102) [Made: true]
  x1109 = FixAdd(x1107,x1369) [Made: true]
  x1104 = FixDivSRA(x1103,Const(4)) [Made: true]
  b1091 [Made: false]
  x1370 = DelayLine(1,x1109) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1328 = FixFMA(x1093,x1367,x1366) [Made: true]
  x1111 = DRAMIsAlloc(x906) [Made: true]
  x1329 = FixSLA(x1097,Const(6)) [Made: true]
  x1086 = StreamOutNew(BurstCmdBus) [Made: false]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1103 = FixAdd(x1102,Const(15)) [Made: true]
  x1374 = DelayLine(2,x1100) [Made: true]
  x1371 = DelayLine(10,b1092) [Made: true]
  x1107 = FixToFix(x1329,TRUE,_64,_0) [Made: true]
  b1092 [Made: false]
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373))) [Made: true]
  x1102 = FixAdd(x1100,x1368) [Made: true]
  x1368 = DelayLine(8,x1101) [Made: true]
  x1098 = FixSLA(x1097,Const(4)) [Made: true]
  x1094 = RegRead(x879) [Made: true]
  x1372 = DelayLine(10,x1111) [Made: true]
  x1010 = RegNew(Const(0)) [Made: false]
  x1108 = DRAMAddress(x906) [Made: true]
  x1101 = RegRead(x1010) [Made: true]
  x1097 = FixDivSRA(x1328,Const(4)) [Made: true]
  x1093 = FixAdd(b924,b1091) [Made: true]
  b1004 [Made: false]
  x1367 = DelayLine(1,x1094) [Made: true]
Inputs for x1115 are (Set(x1087, b924, b1091, x879, x1086, x906, b1092, x1010, b1004) ++ Set() ++ Set(x1086, x906) ++ Set(x1087, x1086)) diff Set(b1091, x1111, x1114, b1092, x1112, x1094, x1108, x1101) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1369 = DelayLine(7,x1108)
  x1105 = FixSLA(x1104,Const(4))
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true))))
  x1366 = DelayLine(1,b1004)
  x1330 = FixSLA(x1104,Const(6))
  x1100 = FixSub(x1328,x1098)
  x1373 = DelayLine(1,x1102)
  x1109 = FixAdd(x1107,x1369)
  x1104 = FixDivSRA(x1103,Const(4))
  x1370 = DelayLine(1,x1109)
  x1328 = FixFMA(x1093,x1367,x1366)
  x1111 = DRAMIsAlloc(x906)
  x1329 = FixSLA(x1097,Const(6))
  x1114 = FIFOBankedEnq(x1087,ArrayBuffer(x1113),ArrayBuffer(Set(Const(true), x1371)))
  x1103 = FixAdd(x1102,Const(15))
  x1374 = DelayLine(2,x1100)
  x1371 = DelayLine(10,b1092)
  x1107 = FixToFix(x1329,TRUE,_64,_0)
  x1112 = StreamOutBankedWrite(x1086,ArrayBuffer(x1110),ArrayBuffer(Set(x1372, x1371)))
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373)))
  x1102 = FixAdd(x1100,x1368)
  x1368 = DelayLine(8,x1101)
  x1098 = FixSLA(x1097,Const(4))
  x1094 = RegRead(x879)
  x1372 = DelayLine(10,x1111)
  x1108 = DRAMAddress(x906)
  x1101 = RegRead(x1010)
  x1097 = FixDivSRA(x1328,Const(4))
  x1093 = FixAdd(b924,b1091)
  x1367 = DelayLine(1,x1094)
Used:
  x1369 = DelayLine(7,x1108) [Made: true]
  x1105 = FixSLA(x1104,Const(4)) [Made: true]
  x1110 = SimpleStruct(ArrayBuffer((offset,x1370), (size,x1330), (isLoad,Const(true)))) [Made: true]
  x1366 = DelayLine(1,b1004) [Made: true]
  x1330 = FixSLA(x1104,Const(6)) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: false]
  x1100 = FixSub(x1328,x1098) [Made: true]
  b924 [Made: false]
  x1373 = DelayLine(1,x1102) [Made: true]
  x1109 = FixAdd(x1107,x1369) [Made: true]
  x1104 = FixDivSRA(x1103,Const(4)) [Made: true]
  b1091 [Made: false]
  x1370 = DelayLine(1,x1109) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1328 = FixFMA(x1093,x1367,x1366) [Made: true]
  x1111 = DRAMIsAlloc(x906) [Made: true]
  x1329 = FixSLA(x1097,Const(6)) [Made: true]
  x1086 = StreamOutNew(BurstCmdBus) [Made: false]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1103 = FixAdd(x1102,Const(15)) [Made: true]
  x1374 = DelayLine(2,x1100) [Made: true]
  x1371 = DelayLine(10,b1092) [Made: true]
  x1107 = FixToFix(x1329,TRUE,_64,_0) [Made: true]
  b1092 [Made: false]
  x1113 = SimpleStruct(ArrayBuffer((size,x1105), (start,x1374), (end,x1373))) [Made: true]
  x1102 = FixAdd(x1100,x1368) [Made: true]
  x1368 = DelayLine(8,x1101) [Made: true]
  x1098 = FixSLA(x1097,Const(4)) [Made: true]
  x1094 = RegRead(x879) [Made: true]
  x1372 = DelayLine(10,x1111) [Made: true]
  x1010 = RegNew(Const(0)) [Made: false]
  x1108 = DRAMAddress(x906) [Made: true]
  x1101 = RegRead(x1010) [Made: true]
  x1097 = FixDivSRA(x1328,Const(4)) [Made: true]
  x1093 = FixAdd(b924,b1091) [Made: true]
  b1004 [Made: false]
  x1367 = DelayLine(1,x1094) [Made: true]
Inputs for x1115 are (Set(x1087, b924, b1091, x879, x1086, x906, b1092, x1010, b1004) ++ Set() ++ Set(x1086, x906) ++ Set(x1087, x1086)) diff Set(b1091, x1111, x1114, b1092, x1112, x1094, x1108, x1101) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1115 = UnrolledForeach(Set(),x1090,Block(Const(())),List(List(b1091)),List(List(b1092)),None)
 - x1087 = FIFONew(Const(16))
 - b924
 - x879 = ArgInNew(Const(0))
 - x1086 = StreamOutNew(BurstCmdBus)
 - x906 = DRAMHostNew(List(x904, x905),Const(0))
 - x1010 = RegNew(Const(0))
 - b1004
 - x1087_fifo
 - b924
 - x879_N
 - x1086
 - x906_c
 - x1010_reg
 - b1004
Stms:
  x1142 = And(x1139,x1141)
  x1127 = RegWrite(x1121,x1126,Set())
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
  x1379 = DelayLine(1,x1145)
  x1147 = FixSLA(b1119,Const(4))
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
  x1377 = DelayLine(2,x1142)
  x1123 = RegNew(Const(0))
  x1128 = FieldApply(x1125,end)
  x1143 = FixSub(b1136,x1138)
  x1375 = DelayLine(1,x1144)
  x1121 = RegNew(Const(0))
  x1138 = RegRead(x1121)
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1131 = RegWrite(x1123,x1130,Set())
  x1135 = CounterChainNew(List(x1134))
  x1125 = VecApply(x1124,0)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1139 = FixLeq(x1138,b1136)
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1122 = RegNew(Const(0))
  x1376 = DelayLine(1,x1147)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1))
  x1145 = VecApply(x1375,0)
  x1130 = FieldApply(x1125,size)
  x1141 = FixLst(b1136,x1140)
  x1140 = RegRead(x1122)
  x1316 = RegRead(x1123)
  x1126 = FieldApply(x1125,start)
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1129 = RegWrite(x1122,x1128,Set())
  x1378 = DelayLine(2,b1137)
Used:
  () [Made: false]
  x1142 = And(x1139,x1141) [Made: true]
  b1137 [Made: true]
  x1127 = RegWrite(x1121,x1126,Set()) [Made: true]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: false]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  b1136 [Made: true]
  x1377 = DelayLine(2,x1142) [Made: true]
  b1119 [Made: false]
  x1123 = RegNew(Const(0)) [Made: true]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: true]
  x1138 = RegRead(x1121) [Made: true]
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1131 = RegWrite(x1123,x1130,Set()) [Made: true]
  x1135 = CounterChainNew(List(x1134)) [Made: true]
  x1125 = VecApply(x1124,0) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: true]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1)) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1316 = RegRead(x1123) [Made: true]
  x1126 = FieldApply(x1125,start) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1129 = RegWrite(x1122,x1128,Set()) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  b1120 [Made: false]
  x1088 = StreamInNew(BurstDataBus()) [Made: false]
Inputs for x1152 are (Set(x1087, b1119, x1123, x1017, x1018, b1120, x1088) ++ Set() ++ Set(x1088) ++ Set()) diff Set(x1132, x1151, b1119, x1123, x1121, x1135, x1122, x1134, x1316, b1120) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1142 = And(x1139,x1141)
  x1127 = RegWrite(x1121,x1126,Set())
  x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
  x1379 = DelayLine(1,x1145)
  x1147 = FixSLA(b1119,Const(4))
  x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
  x1377 = DelayLine(2,x1142)
  x1123 = RegNew(Const(0))
  x1128 = FieldApply(x1125,end)
  x1143 = FixSub(b1136,x1138)
  x1375 = DelayLine(1,x1144)
  x1121 = RegNew(Const(0))
  x1138 = RegRead(x1121)
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1131 = RegWrite(x1123,x1130,Set())
  x1135 = CounterChainNew(List(x1134))
  x1125 = VecApply(x1124,0)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1139 = FixLeq(x1138,b1136)
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1122 = RegNew(Const(0))
  x1376 = DelayLine(1,x1147)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1))
  x1145 = VecApply(x1375,0)
  x1130 = FieldApply(x1125,size)
  x1141 = FixLst(b1136,x1140)
  x1140 = RegRead(x1122)
  x1316 = RegRead(x1123)
  x1126 = FieldApply(x1125,start)
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1129 = RegWrite(x1122,x1128,Set())
  x1378 = DelayLine(2,b1137)
Used:
  () [Made: false]
  x1142 = And(x1139,x1141) [Made: true]
  b1137 [Made: true]
  x1127 = RegWrite(x1121,x1126,Set()) [Made: true]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1087 = FIFONew(Const(16)) [Made: false]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  b1136 [Made: true]
  x1377 = DelayLine(2,x1142) [Made: true]
  b1119 [Made: false]
  x1123 = RegNew(Const(0)) [Made: true]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: true]
  x1138 = RegRead(x1121) [Made: true]
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1131 = RegWrite(x1123,x1130,Set()) [Made: true]
  x1135 = CounterChainNew(List(x1134)) [Made: true]
  x1125 = VecApply(x1124,0) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: true]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380))) [Made: true]
  x1134 = CounterNew(Const(0),x1316,Const(1),Const(1)) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1316 = RegRead(x1123) [Made: true]
  x1126 = FieldApply(x1125,start) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1129 = RegWrite(x1122,x1128,Set()) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  b1120 [Made: false]
  x1088 = StreamInNew(BurstDataBus()) [Made: false]
Inputs for x1152 are (Set(x1087, b1119, x1123, x1017, x1018, b1120, x1088) ++ Set() ++ Set(x1088) ++ Set()) diff Set(x1132, x1151, b1119, x1123, x1121, x1135, x1122, x1134, x1316, b1120) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1152 = UnrolledForeach(Set(),x1118,Block(Const(())),List(List(b1119)),List(List(b1120)),None)
 - x1087 = FIFONew(Const(16))
 - x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1088 = StreamInNew(BurstDataBus())
 - x1087_fifo
 - x1017_tileC_sram_0
 - x1018_tileC_sram_1
 - x1088
Stms:
  x1127 = RegWrite(x1121,x1126,Set())
  x1128 = FieldApply(x1125,end)
  x1131 = RegWrite(x1123,x1130,Set())
  x1125 = VecApply(x1124,0)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1130 = FieldApply(x1125,size)
  x1126 = FieldApply(x1125,start)
  x1129 = RegWrite(x1122,x1128,Set())
Used:
  x1087 = FIFONew(Const(16)) [Made: false]
  x1123 = RegNew(Const(0)) [Made: false]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1121 = RegNew(Const(0)) [Made: false]
  x1125 = VecApply(x1124,0) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1122 = RegNew(Const(0)) [Made: false]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1126 = FieldApply(x1125,start) [Made: true]
Inputs for x1132 are (Set(x1087, x1123, x1121, x1122, b1120) ++ Set() ++ Set() ++ Set(x1087)) diff Set(x1124, x1127, x1129, x1131) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1127 = RegWrite(x1121,x1126,Set())
  x1128 = FieldApply(x1125,end)
  x1131 = RegWrite(x1123,x1130,Set())
  x1125 = VecApply(x1124,0)
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd])
  x1130 = FieldApply(x1125,size)
  x1126 = FieldApply(x1125,start)
  x1129 = RegWrite(x1122,x1128,Set())
Used:
  x1087 = FIFONew(Const(16)) [Made: false]
  x1123 = RegNew(Const(0)) [Made: false]
  x1128 = FieldApply(x1125,end) [Made: true]
  x1121 = RegNew(Const(0)) [Made: false]
  x1125 = VecApply(x1124,0) [Made: true]
  x1124 = FIFOBankedDeq(x1087,ArrayBuffer(Set(Const(true))),Vec[IssuedCmd]) [Made: true]
  x1122 = RegNew(Const(0)) [Made: false]
  x1130 = FieldApply(x1125,size) [Made: true]
  x1126 = FieldApply(x1125,start) [Made: true]
Inputs for x1132 are (Set(x1087, x1123, x1121, x1122, b1120) ++ Set() ++ Set() ++ Set(x1087)) diff Set(x1124, x1127, x1129, x1131) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1132 = UnitPipe(Set(b1120),Block(Const(())),None)
 - x1087 = FIFONew(Const(16))
 - x1123 = RegNew(Const(0))
 - x1121 = RegNew(Const(0))
 - x1122 = RegNew(Const(0))
 - b1120
 - x1087_fifo
 - x1123_reg
 - x1121_reg
 - x1122_reg
 - b1120
Stms:
  x1142 = And(x1139,x1141)
  x1379 = DelayLine(1,x1145)
  x1147 = FixSLA(b1119,Const(4))
  x1377 = DelayLine(2,x1142)
  x1143 = FixSub(b1136,x1138)
  x1375 = DelayLine(1,x1144)
  x1138 = RegRead(x1121)
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1139 = FixLeq(x1138,b1136)
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1376 = DelayLine(1,x1147)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1145 = VecApply(x1375,0)
  x1141 = FixLst(b1136,x1140)
  x1140 = RegRead(x1122)
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1378 = DelayLine(2,b1137)
Used:
  x1142 = And(x1139,x1141) [Made: true]
  b1137 [Made: false]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  b1136 [Made: false]
  x1377 = DelayLine(2,x1142) [Made: true]
  b1119 [Made: false]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: false]
  x1138 = RegRead(x1121) [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: false]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  b1120 [Made: false]
  x1088 = StreamInNew(BurstDataBus()) [Made: false]
Inputs for x1151 are (Set(b1137, b1136, b1119, x1017, x1121, x1122, x1018, b1120, x1088) ++ Set() ++ Set(x1088) ++ Set(x1088)) diff Set(b1137, b1136, x1138, x1150, x1144, x1149, x1140) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1142 = And(x1139,x1141)
  x1379 = DelayLine(1,x1145)
  x1147 = FixSLA(b1119,Const(4))
  x1377 = DelayLine(2,x1142)
  x1143 = FixSub(b1136,x1138)
  x1375 = DelayLine(1,x1144)
  x1138 = RegRead(x1121)
  x1150 = SRAMBankedWrite(x1017,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1139 = FixLeq(x1138,b1136)
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120)))
  x1376 = DelayLine(1,x1147)
  x1149 = SRAMBankedWrite(x1018,Vector(x1379),Vector(List(Const(0))),Vector(x1148),Vector(Set(x1377, x1378, x1380)))
  x1145 = VecApply(x1375,0)
  x1141 = FixLst(b1136,x1140)
  x1140 = RegRead(x1122)
  x1380 = DelayLine(2,b1120)
  x1148 = FixAdd(x1376,x1143)
  x1378 = DelayLine(2,b1137)
Used:
  x1142 = And(x1139,x1141) [Made: true]
  b1137 [Made: false]
  x1379 = DelayLine(1,x1145) [Made: true]
  x1147 = FixSLA(b1119,Const(4)) [Made: true]
  b1136 [Made: false]
  x1377 = DelayLine(2,x1142) [Made: true]
  b1119 [Made: false]
  x1143 = FixSub(b1136,x1138) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1375 = DelayLine(1,x1144) [Made: true]
  x1121 = RegNew(Const(0)) [Made: false]
  x1138 = RegRead(x1121) [Made: true]
  x1139 = FixLeq(x1138,b1136) [Made: true]
  x1144 = StreamInBankedRead(x1088,ArrayBuffer(Set(b1137, b1120))) [Made: true]
  x1122 = RegNew(Const(0)) [Made: false]
  x1376 = DelayLine(1,x1147) [Made: true]
  x1145 = VecApply(x1375,0) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1141 = FixLst(b1136,x1140) [Made: true]
  x1140 = RegRead(x1122) [Made: true]
  x1380 = DelayLine(2,b1120) [Made: true]
  x1148 = FixAdd(x1376,x1143) [Made: true]
  x1378 = DelayLine(2,b1137) [Made: true]
  b1120 [Made: false]
  x1088 = StreamInNew(BurstDataBus()) [Made: false]
Inputs for x1151 are (Set(b1137, b1136, b1119, x1017, x1121, x1122, x1018, b1120, x1088) ++ Set() ++ Set(x1088) ++ Set(x1088)) diff Set(b1137, b1136, x1138, x1150, x1144, x1149, x1140) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1151 = UnrolledForeach(Set(b1120),x1135,Block(Const(())),List(List(b1136)),List(List(b1137)),None)
 - b1119
 - x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1121 = RegNew(Const(0))
 - x1122 = RegNew(Const(0))
 - x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - b1120
 - x1088 = StreamInNew(BurstDataBus())
 - b1119
 - x1017_tileC_sram_0
 - x1121_reg
 - x1122_reg
 - x1018_tileC_sram_1
 - b1120
 - x1088
Stms:
  x1179 = FixAdd(x1178,b1161)
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1))
  x1391 = DelayLine(1,b1162)
  x1386 = DelayLine(7,b1157)
  x1319 = RegRead(x916)
  x1398 = DelayLine(10,b1162)
  x1383 = DelayLine(6,x1170)
  x1183 = FixAdd(x1172,x1182)
  x1169 = FixSLA(b1156,Const(4))
  x1394 = DelayLine(10,b1005)
  x1387 = DelayLine(7,b914)
  x1174 = FixAdd(x1169,b1166)
  x1178 = FixSLA(b1166,Const(4))
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1))
  x1392 = DelayLine(1,b1157)
  x1397 = DelayLine(10,b1167)
  x1160 = CounterChainNew(List(x1159))
  x1182 = FixMul(x1176,x1181)
  x1382 = DelayLine(7,b925)
  x1393 = DelayLine(1,b914)
  x1318 = RegRead(x1010)
  x1170 = FixAdd(x1169,b1161)
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None)
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1389 = DelayLine(1,b925)
  x1388 = DelayLine(1,b1005)
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1381 = DelayLine(7,b1005)
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]])
  x1396 = DelayLine(9,x1170)
  x1176 = VecApply(x1175,0)
  x1181 = VecApply(x1180,0)
  x1400 = DelayLine(10,b914)
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None)
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1390 = DelayLine(1,b1167)
  x1385 = DelayLine(7,b1162)
  x1395 = DelayLine(10,b925)
  x1172 = VecApply(x1171,0)
  x1165 = CounterChainNew(List(x1164))
  x1384 = DelayLine(7,b1167)
  x1399 = DelayLine(10,b1157)
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
Used:
  () [Made: false]
  x1179 = FixAdd(x1178,b1161) [Made: true]
  b1005 [Made: false]
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1)) [Made: true]
  x1391 = DelayLine(1,b1162) [Made: true]
  x1386 = DelayLine(7,b1157) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1319 = RegRead(x916) [Made: true]
  x1398 = DelayLine(10,b1162) [Made: true]
  x1383 = DelayLine(6,x1170) [Made: true]
  x1183 = FixAdd(x1172,x1182) [Made: true]
  x1169 = FixSLA(b1156,Const(4)) [Made: true]
  x1394 = DelayLine(10,b1005) [Made: true]
  b925 [Made: false]
  x1387 = DelayLine(7,b914) [Made: true]
  x1174 = FixAdd(x1169,b1166) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x1178 = FixSLA(b1166,Const(4)) [Made: true]
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1)) [Made: true]
  x1392 = DelayLine(1,b1157) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1397 = DelayLine(10,b1167) [Made: true]
  x1160 = CounterChainNew(List(x1159)) [Made: true]
  x1182 = FixMul(x1176,x1181) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1382 = DelayLine(7,b925) [Made: true]
  x1393 = DelayLine(1,b914) [Made: true]
  x1318 = RegRead(x1010) [Made: true]
  x1170 = FixAdd(x1169,b1161) [Made: true]
  b1167 [Made: true]
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x1389 = DelayLine(1,b925) [Made: true]
  x1388 = DelayLine(1,b1005) [Made: true]
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  b1162 [Made: true]
  x1381 = DelayLine(7,b1005) [Made: true]
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1396 = DelayLine(9,x1170) [Made: true]
  x1176 = VecApply(x1175,0) [Made: true]
  b1166 [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1181 = VecApply(x1180,0) [Made: true]
  b1156 [Made: false]
  x1400 = DelayLine(10,b914) [Made: true]
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None) [Made: true]
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  b1157 [Made: false]
  x1010 = RegNew(Const(0)) [Made: false]
  x1390 = DelayLine(1,b1167) [Made: true]
  x1385 = DelayLine(7,b1162) [Made: true]
  b914 [Made: false]
  b1161 [Made: true]
  x1395 = DelayLine(10,b925) [Made: true]
  x1172 = VecApply(x1171,0) [Made: true]
  x1165 = CounterChainNew(List(x1164)) [Made: true]
  x1384 = DelayLine(7,b1167) [Made: true]
  x1399 = DelayLine(10,b1157) [Made: true]
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
Inputs for x1188 are (Set(b1005, x934, b925, x916, x1017, x1016, x1018, b1156, b1157, x1010, b914) ++ Set(x1010, x1016, x1017, x1018) ++ Set() ++ Set()) diff Set(x1159, x1160, x1318, x1187, b1156, b1157) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1179 = FixAdd(x1178,b1161)
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1))
  x1391 = DelayLine(1,b1162)
  x1386 = DelayLine(7,b1157)
  x1319 = RegRead(x916)
  x1398 = DelayLine(10,b1162)
  x1383 = DelayLine(6,x1170)
  x1183 = FixAdd(x1172,x1182)
  x1169 = FixSLA(b1156,Const(4))
  x1394 = DelayLine(10,b1005)
  x1387 = DelayLine(7,b914)
  x1174 = FixAdd(x1169,b1166)
  x1178 = FixSLA(b1166,Const(4))
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1))
  x1392 = DelayLine(1,b1157)
  x1397 = DelayLine(10,b1167)
  x1160 = CounterChainNew(List(x1159))
  x1182 = FixMul(x1176,x1181)
  x1382 = DelayLine(7,b925)
  x1393 = DelayLine(1,b914)
  x1318 = RegRead(x1010)
  x1170 = FixAdd(x1169,b1161)
  x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None)
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1389 = DelayLine(1,b925)
  x1388 = DelayLine(1,b1005)
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1381 = DelayLine(7,b1005)
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]])
  x1396 = DelayLine(9,x1170)
  x1176 = VecApply(x1175,0)
  x1181 = VecApply(x1180,0)
  x1400 = DelayLine(10,b914)
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None)
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1390 = DelayLine(1,b1167)
  x1385 = DelayLine(7,b1162)
  x1395 = DelayLine(10,b925)
  x1172 = VecApply(x1171,0)
  x1165 = CounterChainNew(List(x1164))
  x1384 = DelayLine(7,b1167)
  x1399 = DelayLine(10,b1157)
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
Used:
  () [Made: false]
  x1179 = FixAdd(x1178,b1161) [Made: true]
  b1005 [Made: false]
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1)) [Made: true]
  x1391 = DelayLine(1,b1162) [Made: true]
  x1386 = DelayLine(7,b1157) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1319 = RegRead(x916) [Made: true]
  x1398 = DelayLine(10,b1162) [Made: true]
  x1383 = DelayLine(6,x1170) [Made: true]
  x1183 = FixAdd(x1172,x1182) [Made: true]
  x1169 = FixSLA(b1156,Const(4)) [Made: true]
  x1394 = DelayLine(10,b1005) [Made: true]
  b925 [Made: false]
  x1387 = DelayLine(7,b914) [Made: true]
  x1174 = FixAdd(x1169,b1166) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x1178 = FixSLA(b1166,Const(4)) [Made: true]
  x1159 = CounterNew(Const(0),x1318,Const(1),Const(1)) [Made: true]
  x1392 = DelayLine(1,b1157) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1397 = DelayLine(10,b1167) [Made: true]
  x1160 = CounterChainNew(List(x1159)) [Made: true]
  x1182 = FixMul(x1176,x1181) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1382 = DelayLine(7,b925) [Made: true]
  x1393 = DelayLine(1,b914) [Made: true]
  x1318 = RegRead(x1010) [Made: true]
  x1170 = FixAdd(x1169,b1161) [Made: true]
  b1167 [Made: true]
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x1389 = DelayLine(1,b925) [Made: true]
  x1388 = DelayLine(1,b1005) [Made: true]
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  b1162 [Made: true]
  x1381 = DelayLine(7,b1005) [Made: true]
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1396 = DelayLine(9,x1170) [Made: true]
  x1176 = VecApply(x1175,0) [Made: true]
  b1166 [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1181 = VecApply(x1180,0) [Made: true]
  b1156 [Made: false]
  x1400 = DelayLine(10,b914) [Made: true]
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None) [Made: true]
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  b1157 [Made: false]
  x1010 = RegNew(Const(0)) [Made: false]
  x1390 = DelayLine(1,b1167) [Made: true]
  x1385 = DelayLine(7,b1162) [Made: true]
  b914 [Made: false]
  b1161 [Made: true]
  x1395 = DelayLine(10,b925) [Made: true]
  x1172 = VecApply(x1171,0) [Made: true]
  x1165 = CounterChainNew(List(x1164)) [Made: true]
  x1384 = DelayLine(7,b1167) [Made: true]
  x1399 = DelayLine(10,b1157) [Made: true]
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
Inputs for x1188 are (Set(b1005, x934, b925, x916, x1017, x1016, x1018, b1156, b1157, x1010, b914) ++ Set(x1010, x1016, x1017, x1018) ++ Set() ++ Set()) diff Set(x1159, x1160, x1318, x1187, b1156, b1157) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1188 = UnrolledForeach(Set(b1005, b925, b914),x1155,Block(Const(())),List(List(b1156)),List(List(b1157)),None)
 - b1005
 - x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - b925
 - x916 = RegNew(Const(0))
 - x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1010 = RegNew(Const(0))
 - b914
 - b1005_chain_read_2
 - x934_tileA_sram_0
 - b925
 - x916_reg
 - x1017_tileC_sram_0
 - x1016_tileB_sram_0
 - x1018_tileC_sram_1
 - x1010_reg
 - b914
Stms:
  x1179 = FixAdd(x1178,b1161)
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1))
  x1391 = DelayLine(1,b1162)
  x1386 = DelayLine(7,b1157)
  x1319 = RegRead(x916)
  x1398 = DelayLine(10,b1162)
  x1383 = DelayLine(6,x1170)
  x1183 = FixAdd(x1172,x1182)
  x1169 = FixSLA(b1156,Const(4))
  x1394 = DelayLine(10,b1005)
  x1387 = DelayLine(7,b914)
  x1174 = FixAdd(x1169,b1166)
  x1178 = FixSLA(b1166,Const(4))
  x1392 = DelayLine(1,b1157)
  x1397 = DelayLine(10,b1167)
  x1182 = FixMul(x1176,x1181)
  x1382 = DelayLine(7,b925)
  x1393 = DelayLine(1,b914)
  x1170 = FixAdd(x1169,b1161)
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1389 = DelayLine(1,b925)
  x1388 = DelayLine(1,b1005)
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1381 = DelayLine(7,b1005)
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]])
  x1396 = DelayLine(9,x1170)
  x1176 = VecApply(x1175,0)
  x1181 = VecApply(x1180,0)
  x1400 = DelayLine(10,b914)
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None)
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1390 = DelayLine(1,b1167)
  x1385 = DelayLine(7,b1162)
  x1395 = DelayLine(10,b925)
  x1172 = VecApply(x1171,0)
  x1165 = CounterChainNew(List(x1164))
  x1384 = DelayLine(7,b1167)
  x1399 = DelayLine(10,b1157)
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
Used:
  () [Made: false]
  x1179 = FixAdd(x1178,b1161) [Made: true]
  b1005 [Made: false]
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1)) [Made: true]
  x1391 = DelayLine(1,b1162) [Made: true]
  x1386 = DelayLine(7,b1157) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1319 = RegRead(x916) [Made: true]
  x1398 = DelayLine(10,b1162) [Made: true]
  x1383 = DelayLine(6,x1170) [Made: true]
  x1183 = FixAdd(x1172,x1182) [Made: true]
  x1169 = FixSLA(b1156,Const(4)) [Made: true]
  x1394 = DelayLine(10,b1005) [Made: true]
  b925 [Made: false]
  x1387 = DelayLine(7,b914) [Made: true]
  x1174 = FixAdd(x1169,b1166) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x1178 = FixSLA(b1166,Const(4)) [Made: true]
  x1392 = DelayLine(1,b1157) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1397 = DelayLine(10,b1167) [Made: true]
  x1182 = FixMul(x1176,x1181) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1382 = DelayLine(7,b925) [Made: true]
  x1393 = DelayLine(1,b914) [Made: true]
  x1170 = FixAdd(x1169,b1161) [Made: true]
  b1167 [Made: true]
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x1389 = DelayLine(1,b925) [Made: true]
  x1388 = DelayLine(1,b1005) [Made: true]
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  b1162 [Made: false]
  x1381 = DelayLine(7,b1005) [Made: true]
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1396 = DelayLine(9,x1170) [Made: true]
  x1176 = VecApply(x1175,0) [Made: true]
  b1166 [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1181 = VecApply(x1180,0) [Made: true]
  b1156 [Made: false]
  x1400 = DelayLine(10,b914) [Made: true]
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  b1157 [Made: false]
  x1390 = DelayLine(1,b1167) [Made: true]
  x1385 = DelayLine(7,b1162) [Made: true]
  b914 [Made: false]
  b1161 [Made: false]
  x1395 = DelayLine(10,b925) [Made: true]
  x1172 = VecApply(x1171,0) [Made: true]
  x1165 = CounterChainNew(List(x1164)) [Made: true]
  x1384 = DelayLine(7,b1167) [Made: true]
  x1399 = DelayLine(10,b1157) [Made: true]
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
Inputs for x1187 are (Set(b1005, x934, b925, x916, x1017, x1016, b1162, x1018, b1156, b1157, b914, b1161) ++ Set() ++ Set() ++ Set()) diff Set(x1164, x1319, b1162, x1186, b1161, x1165) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1179 = FixAdd(x1178,b1161)
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1))
  x1391 = DelayLine(1,b1162)
  x1386 = DelayLine(7,b1157)
  x1319 = RegRead(x916)
  x1398 = DelayLine(10,b1162)
  x1383 = DelayLine(6,x1170)
  x1183 = FixAdd(x1172,x1182)
  x1169 = FixSLA(b1156,Const(4))
  x1394 = DelayLine(10,b1005)
  x1387 = DelayLine(7,b914)
  x1174 = FixAdd(x1169,b1166)
  x1178 = FixSLA(b1166,Const(4))
  x1392 = DelayLine(1,b1157)
  x1397 = DelayLine(10,b1167)
  x1182 = FixMul(x1176,x1181)
  x1382 = DelayLine(7,b925)
  x1393 = DelayLine(1,b914)
  x1170 = FixAdd(x1169,b1161)
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1389 = DelayLine(1,b925)
  x1388 = DelayLine(1,b1005)
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1381 = DelayLine(7,b1005)
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]])
  x1396 = DelayLine(9,x1170)
  x1176 = VecApply(x1175,0)
  x1181 = VecApply(x1180,0)
  x1400 = DelayLine(10,b914)
  x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None)
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1390 = DelayLine(1,b1167)
  x1385 = DelayLine(7,b1162)
  x1395 = DelayLine(10,b925)
  x1172 = VecApply(x1171,0)
  x1165 = CounterChainNew(List(x1164))
  x1384 = DelayLine(7,b1167)
  x1399 = DelayLine(10,b1157)
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
Used:
  () [Made: false]
  x1179 = FixAdd(x1178,b1161) [Made: true]
  b1005 [Made: false]
  x1164 = CounterNew(Const(0),x1319,Const(1),Const(1)) [Made: true]
  x1391 = DelayLine(1,b1162) [Made: true]
  x1386 = DelayLine(7,b1157) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1319 = RegRead(x916) [Made: true]
  x1398 = DelayLine(10,b1162) [Made: true]
  x1383 = DelayLine(6,x1170) [Made: true]
  x1183 = FixAdd(x1172,x1182) [Made: true]
  x1169 = FixSLA(b1156,Const(4)) [Made: true]
  x1394 = DelayLine(10,b1005) [Made: true]
  b925 [Made: false]
  x1387 = DelayLine(7,b914) [Made: true]
  x1174 = FixAdd(x1169,b1166) [Made: true]
  x916 = RegNew(Const(0)) [Made: false]
  x1178 = FixSLA(b1166,Const(4)) [Made: true]
  x1392 = DelayLine(1,b1157) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1397 = DelayLine(10,b1167) [Made: true]
  x1182 = FixMul(x1176,x1181) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1382 = DelayLine(7,b925) [Made: true]
  x1393 = DelayLine(1,b914) [Made: true]
  x1170 = FixAdd(x1169,b1161) [Made: true]
  b1167 [Made: true]
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
  x1389 = DelayLine(1,b925) [Made: true]
  x1388 = DelayLine(1,b1005) [Made: true]
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  b1162 [Made: false]
  x1381 = DelayLine(7,b1005) [Made: true]
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1396 = DelayLine(9,x1170) [Made: true]
  x1176 = VecApply(x1175,0) [Made: true]
  b1166 [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1181 = VecApply(x1180,0) [Made: true]
  b1156 [Made: false]
  x1400 = DelayLine(10,b914) [Made: true]
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  b1157 [Made: false]
  x1390 = DelayLine(1,b1167) [Made: true]
  x1385 = DelayLine(7,b1162) [Made: true]
  b914 [Made: false]
  b1161 [Made: false]
  x1395 = DelayLine(10,b925) [Made: true]
  x1172 = VecApply(x1171,0) [Made: true]
  x1165 = CounterChainNew(List(x1164)) [Made: true]
  x1384 = DelayLine(7,b1167) [Made: true]
  x1399 = DelayLine(10,b1157) [Made: true]
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399))) [Made: true]
Inputs for x1187 are (Set(b1005, x934, b925, x916, x1017, x1016, b1162, x1018, b1156, b1157, b914, b1161) ++ Set() ++ Set() ++ Set()) diff Set(x1164, x1319, b1162, x1186, b1161, x1165) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1187 = UnrolledForeach(Set(b1157, b1005, b925, b914),x1160,Block(Const(())),List(List(b1161)),List(List(b1162)),None)
 - b1005
 - x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - b925
 - x916 = RegNew(Const(0))
 - x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - b1156
 - b1157
 - b914
 - b1005
 - x934_tileA_sram_0
 - b925
 - x916_reg
 - x1017_tileC_sram_0
 - x1016_tileB_sram_0
 - x1018_tileC_sram_1
 - b1156
 - b1157
 - b914
Stms:
  x1179 = FixAdd(x1178,b1161)
  x1391 = DelayLine(1,b1162)
  x1386 = DelayLine(7,b1157)
  x1398 = DelayLine(10,b1162)
  x1383 = DelayLine(6,x1170)
  x1183 = FixAdd(x1172,x1182)
  x1169 = FixSLA(b1156,Const(4))
  x1394 = DelayLine(10,b1005)
  x1387 = DelayLine(7,b914)
  x1174 = FixAdd(x1169,b1166)
  x1178 = FixSLA(b1166,Const(4))
  x1392 = DelayLine(1,b1157)
  x1397 = DelayLine(10,b1167)
  x1182 = FixMul(x1176,x1181)
  x1382 = DelayLine(7,b925)
  x1393 = DelayLine(1,b914)
  x1170 = FixAdd(x1169,b1161)
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1389 = DelayLine(1,b925)
  x1388 = DelayLine(1,b1005)
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1381 = DelayLine(7,b1005)
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]])
  x1396 = DelayLine(9,x1170)
  x1176 = VecApply(x1175,0)
  x1181 = VecApply(x1180,0)
  x1400 = DelayLine(10,b914)
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1390 = DelayLine(1,b1167)
  x1385 = DelayLine(7,b1162)
  x1395 = DelayLine(10,b925)
  x1172 = VecApply(x1171,0)
  x1384 = DelayLine(7,b1167)
  x1399 = DelayLine(10,b1157)
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
Used:
  x1179 = FixAdd(x1178,b1161) [Made: true]
  b1005 [Made: false]
  x1391 = DelayLine(1,b1162) [Made: true]
  x1386 = DelayLine(7,b1157) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1398 = DelayLine(10,b1162) [Made: true]
  x1383 = DelayLine(6,x1170) [Made: true]
  x1183 = FixAdd(x1172,x1182) [Made: true]
  x1169 = FixSLA(b1156,Const(4)) [Made: true]
  x1394 = DelayLine(10,b1005) [Made: true]
  b925 [Made: false]
  x1387 = DelayLine(7,b914) [Made: true]
  x1174 = FixAdd(x1169,b1166) [Made: true]
  x1178 = FixSLA(b1166,Const(4)) [Made: true]
  x1392 = DelayLine(1,b1157) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1397 = DelayLine(10,b1167) [Made: true]
  x1182 = FixMul(x1176,x1181) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1382 = DelayLine(7,b925) [Made: true]
  x1393 = DelayLine(1,b914) [Made: true]
  x1170 = FixAdd(x1169,b1161) [Made: true]
  b1167 [Made: false]
  x1389 = DelayLine(1,b925) [Made: true]
  x1388 = DelayLine(1,b1005) [Made: true]
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  b1162 [Made: false]
  x1381 = DelayLine(7,b1005) [Made: true]
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1396 = DelayLine(9,x1170) [Made: true]
  x1176 = VecApply(x1175,0) [Made: true]
  b1166 [Made: false]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1181 = VecApply(x1180,0) [Made: true]
  b1156 [Made: false]
  x1400 = DelayLine(10,b914) [Made: true]
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  b1157 [Made: false]
  x1390 = DelayLine(1,b1167) [Made: true]
  x1385 = DelayLine(7,b1162) [Made: true]
  b914 [Made: false]
  b1161 [Made: false]
  x1395 = DelayLine(10,b925) [Made: true]
  x1172 = VecApply(x1171,0) [Made: true]
  x1384 = DelayLine(7,b1167) [Made: true]
  x1399 = DelayLine(10,b1157) [Made: true]
Inputs for x1186 are (Set(b1005, x934, b925, x1017, x1016, b1167, b1162, b1166, x1018, b1156, b1157, b914, b1161) ++ Set() ++ Set() ++ Set()) diff Set(b1167, x1185, x1175, x1171, b1166, x1180, x1184) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1179 = FixAdd(x1178,b1161)
  x1391 = DelayLine(1,b1162)
  x1386 = DelayLine(7,b1157)
  x1398 = DelayLine(10,b1162)
  x1383 = DelayLine(6,x1170)
  x1183 = FixAdd(x1172,x1182)
  x1169 = FixSLA(b1156,Const(4))
  x1394 = DelayLine(10,b1005)
  x1387 = DelayLine(7,b914)
  x1174 = FixAdd(x1169,b1166)
  x1178 = FixSLA(b1166,Const(4))
  x1392 = DelayLine(1,b1157)
  x1397 = DelayLine(10,b1167)
  x1182 = FixMul(x1176,x1181)
  x1382 = DelayLine(7,b925)
  x1393 = DelayLine(1,b914)
  x1170 = FixAdd(x1169,b1161)
  x1185 = SRAMBankedWrite(x1017,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
  x1389 = DelayLine(1,b925)
  x1388 = DelayLine(1,b1005)
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1381 = DelayLine(7,b1005)
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]])
  x1396 = DelayLine(9,x1170)
  x1176 = VecApply(x1175,0)
  x1181 = VecApply(x1180,0)
  x1400 = DelayLine(10,b914)
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]])
  x1390 = DelayLine(1,b1167)
  x1385 = DelayLine(7,b1162)
  x1395 = DelayLine(10,b925)
  x1172 = VecApply(x1171,0)
  x1384 = DelayLine(7,b1167)
  x1399 = DelayLine(10,b1157)
  x1184 = SRAMBankedWrite(x1018,Vector(x1183),Vector(List(Const(0))),Vector(x1396),Vector(Set(x1398, x1394, x1397, x1400, x1395, x1399)))
Used:
  x1179 = FixAdd(x1178,b1161) [Made: true]
  b1005 [Made: false]
  x1391 = DelayLine(1,b1162) [Made: true]
  x1386 = DelayLine(7,b1157) [Made: true]
  x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1398 = DelayLine(10,b1162) [Made: true]
  x1383 = DelayLine(6,x1170) [Made: true]
  x1183 = FixAdd(x1172,x1182) [Made: true]
  x1169 = FixSLA(b1156,Const(4)) [Made: true]
  x1394 = DelayLine(10,b1005) [Made: true]
  b925 [Made: false]
  x1387 = DelayLine(7,b914) [Made: true]
  x1174 = FixAdd(x1169,b1166) [Made: true]
  x1178 = FixSLA(b1166,Const(4)) [Made: true]
  x1392 = DelayLine(1,b1157) [Made: true]
  x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1397 = DelayLine(10,b1167) [Made: true]
  x1182 = FixMul(x1176,x1181) [Made: true]
  x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1382 = DelayLine(7,b925) [Made: true]
  x1393 = DelayLine(1,b914) [Made: true]
  x1170 = FixAdd(x1169,b1161) [Made: true]
  b1167 [Made: false]
  x1389 = DelayLine(1,b925) [Made: true]
  x1388 = DelayLine(1,b1005) [Made: true]
  x1175 = SRAMBankedRead(x934,Vector(List(Const(0))),Vector(x1174),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  b1162 [Made: false]
  x1381 = DelayLine(7,b1005) [Made: true]
  x1171 = SRAMBankedRead(x1017,Vector(List(Const(0))),Vector(x1383),Vector(Set(x1386, x1387, x1382, x1381, x1385, x1384)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1396 = DelayLine(9,x1170) [Made: true]
  x1176 = VecApply(x1175,0) [Made: true]
  b1166 [Made: false]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1181 = VecApply(x1180,0) [Made: true]
  b1156 [Made: false]
  x1400 = DelayLine(10,b914) [Made: true]
  x1180 = SRAMBankedRead(x1016,Vector(List(Const(0))),Vector(x1179),Vector(Set(x1391, x1392, x1393, x1389, x1388, x1390)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  b1157 [Made: false]
  x1390 = DelayLine(1,b1167) [Made: true]
  x1385 = DelayLine(7,b1162) [Made: true]
  b914 [Made: false]
  b1161 [Made: false]
  x1395 = DelayLine(10,b925) [Made: true]
  x1172 = VecApply(x1171,0) [Made: true]
  x1384 = DelayLine(7,b1167) [Made: true]
  x1399 = DelayLine(10,b1157) [Made: true]
Inputs for x1186 are (Set(b1005, x934, b925, x1017, x1016, b1167, b1162, b1166, x1018, b1156, b1157, b914, b1161) ++ Set() ++ Set() ++ Set()) diff Set(b1167, x1185, x1175, x1171, b1166, x1180, x1184) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1186 = UnrolledForeach(Set(b1005, b925, b1162, b1157, b914),x1165,Block(Const(())),List(List(b1166)),List(List(b1167)),None)
 - b1005
 - x934 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - b925
 - x1017 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1016 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - b1162
 - x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - b1156
 - b1157
 - b914
 - b1161
 - b1005
 - x934_tileA_sram_0
 - b925
 - x1017_tileC_sram_0
 - x1016_tileB_sram_0
 - b1162
 - x1018_tileC_sram_1
 - b1156
 - b1157
 - b914
 - b1161
Stms:
  x1411 = DelayLine(4,b1227)
  x1190 = StreamOutNew(BurstFullDataBus())
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1200 = RegRead(x879)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1401 = DelayLine(1,b1004)
  x1233 = FixSub(b1226,x1228)
  x1222 = UnitPipe(Set(),Block(Const(())),None)
  x1196 = RegNew(Const(0))
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191)
  x1228 = RegRead(x1196)
  x1409 = DelayLine(2,b1227)
  x1191 = StreamInNew(BurstAckBus)
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None)
  x1232 = And(x1229,x1231)
  x1215 = FixAdd(x1213,x1404)
  x1405 = DelayLine(1,x1215)
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1206 = FixSub(x1331,x1204)
  x1199 = FixAdd(b924,b1194)
  x1217 = DRAMIsAlloc(x906)
  x1238 = VecApply(x1237,0)
  x1210 = FixDivSRA(x1209,Const(4))
  x1407 = DelayLine(1,x1235)
  x1402 = DelayLine(1,x1200)
  x1214 = DRAMAddress(x906)
  x1207 = RegRead(x1010)
  x1231 = FixLst(b1226,x1230)
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1))
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1333 = FixSLA(x1210,Const(6))
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
  x1219 = RegWrite(x1196,x1206,Set())
  x1403 = DelayLine(8,x1207)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1332 = FixSLA(x1203,Const(6))
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1))
  x1209 = FixAdd(x1208,Const(15))
  x1408 = DelayLine(2,x1232)
  x1198 = RegNew(Const(0))
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x1225 = CounterChainNew(List(x1224))
  x1230 = RegRead(x1197)
  x1235 = FixSLA(b1194,Const(4))
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1221 = RegWrite(x1198,x1211,Set())
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x1321 = RegRead(x1198)
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1189 = StreamOutNew(BurstCmdBus)
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set()))
  x1193 = CounterChainNew(List(x1192))
  x1229 = FixLeq(x1228,b1226)
  x1410 = DelayLine(4,x1232)
  x1197 = RegNew(Const(0))
  x1236 = FixAdd(x1407,x1233)
  x1331 = FixFMA(x1199,x1402,x1401)
  x1320 = RegRead(x927)
  x1204 = FixSLA(x1203,Const(4))
Used:
  x1411 = DelayLine(4,b1227) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: true]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  () [Made: false]
  x1200 = RegRead(x879) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1222 = UnitPipe(Set(),Block(Const(())),None) [Made: true]
  x1196 = RegNew(Const(0)) [Made: true]
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191) [Made: true]
  x1228 = RegRead(x1196) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1191 = StreamInNew(BurstAckBus) [Made: true]
  x1232 = And(x1229,x1231) [Made: true]
  b924 [Made: false]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  b1195 [Made: true]
  x1407 = DelayLine(1,x1235) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  b1227 [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x1231 = FixLst(b1226,x1230) [Made: true]
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1)) [Made: true]
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1219 = RegWrite(x1196,x1206,Set()) [Made: true]
  x1403 = DelayLine(8,x1207) [Made: true]
  b1226 [Made: true]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1)) [Made: true]
  b1194 [Made: true]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1198 = RegNew(Const(0)) [Made: true]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x927 = RegNew(Const(0)) [Made: false]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1225 = CounterChainNew(List(x1224)) [Made: true]
  x1230 = RegRead(x1197) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406))) [Made: true]
  x1220 = RegWrite(x1197,x1208,Set()) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1221 = RegWrite(x1198,x1211,Set()) [Made: true]
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411))) [Made: true]
  x1321 = RegRead(x1198) [Made: true]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: true]
  x1010 = RegNew(Const(0)) [Made: false]
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set())) [Made: true]
  x1193 = CounterChainNew(List(x1192)) [Made: true]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1197 = RegNew(Const(0)) [Made: true]
  x1236 = FixAdd(x1407,x1233) [Made: true]
  b1004 [Made: false]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1320 = RegRead(x927) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
Inputs for x1248 are (Set(b1005, b924, b925, x879, x906, x927, x1018, x1010, b914, b1004) ++ Set(x1010, x1018) ++ Set(x1190, x1191, x906, x1189) ++ Set()) diff Set(x1247, x1192, x1193, x1320) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1411 = DelayLine(4,b1227)
  x1190 = StreamOutNew(BurstFullDataBus())
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1200 = RegRead(x879)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1401 = DelayLine(1,b1004)
  x1233 = FixSub(b1226,x1228)
  x1222 = UnitPipe(Set(),Block(Const(())),None)
  x1196 = RegNew(Const(0))
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191)
  x1228 = RegRead(x1196)
  x1409 = DelayLine(2,b1227)
  x1191 = StreamInNew(BurstAckBus)
  x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None)
  x1232 = And(x1229,x1231)
  x1215 = FixAdd(x1213,x1404)
  x1405 = DelayLine(1,x1215)
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1206 = FixSub(x1331,x1204)
  x1199 = FixAdd(b924,b1194)
  x1217 = DRAMIsAlloc(x906)
  x1238 = VecApply(x1237,0)
  x1210 = FixDivSRA(x1209,Const(4))
  x1407 = DelayLine(1,x1235)
  x1402 = DelayLine(1,x1200)
  x1214 = DRAMAddress(x906)
  x1207 = RegRead(x1010)
  x1231 = FixLst(b1226,x1230)
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1))
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1333 = FixSLA(x1210,Const(6))
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
  x1219 = RegWrite(x1196,x1206,Set())
  x1403 = DelayLine(8,x1207)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1332 = FixSLA(x1203,Const(6))
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1))
  x1209 = FixAdd(x1208,Const(15))
  x1408 = DelayLine(2,x1232)
  x1198 = RegNew(Const(0))
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x1225 = CounterChainNew(List(x1224))
  x1230 = RegRead(x1197)
  x1235 = FixSLA(b1194,Const(4))
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1221 = RegWrite(x1198,x1211,Set())
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x1321 = RegRead(x1198)
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1189 = StreamOutNew(BurstCmdBus)
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set()))
  x1193 = CounterChainNew(List(x1192))
  x1229 = FixLeq(x1228,b1226)
  x1410 = DelayLine(4,x1232)
  x1197 = RegNew(Const(0))
  x1236 = FixAdd(x1407,x1233)
  x1331 = FixFMA(x1199,x1402,x1401)
  x1320 = RegRead(x927)
  x1204 = FixSLA(x1203,Const(4))
Used:
  x1411 = DelayLine(4,b1227) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: true]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  () [Made: false]
  x1200 = RegRead(x879) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1222 = UnitPipe(Set(),Block(Const(())),None) [Made: true]
  x1196 = RegNew(Const(0)) [Made: true]
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191) [Made: true]
  x1228 = RegRead(x1196) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1191 = StreamInNew(BurstAckBus) [Made: true]
  x1232 = And(x1229,x1231) [Made: true]
  b924 [Made: false]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  b1195 [Made: true]
  x1407 = DelayLine(1,x1235) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  b1227 [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x1231 = FixLst(b1226,x1230) [Made: true]
  x1192 = CounterNew(Const(0),x1320,Const(1),Const(1)) [Made: true]
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1219 = RegWrite(x1196,x1206,Set()) [Made: true]
  x1403 = DelayLine(8,x1207) [Made: true]
  b1226 [Made: true]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1)) [Made: true]
  b1194 [Made: true]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1198 = RegNew(Const(0)) [Made: true]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x927 = RegNew(Const(0)) [Made: false]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1225 = CounterChainNew(List(x1224)) [Made: true]
  x1230 = RegRead(x1197) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406))) [Made: true]
  x1220 = RegWrite(x1197,x1208,Set()) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1221 = RegWrite(x1198,x1211,Set()) [Made: true]
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411))) [Made: true]
  x1321 = RegRead(x1198) [Made: true]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: true]
  x1010 = RegNew(Const(0)) [Made: false]
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set())) [Made: true]
  x1193 = CounterChainNew(List(x1192)) [Made: true]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1197 = RegNew(Const(0)) [Made: true]
  x1236 = FixAdd(x1407,x1233) [Made: true]
  b1004 [Made: false]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1320 = RegRead(x927) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
Inputs for x1248 are (Set(b1005, b924, b925, x879, x906, x927, x1018, x1010, b914, b1004) ++ Set(x1010, x1018) ++ Set(x1190, x1191, x906, x1189) ++ Set()) diff Set(x1247, x1192, x1193, x1320) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1248 = UnitPipe(Set(b1005, b925, b914),Block(Const(())),None)
 - x1190 = StreamOutNew(BurstFullDataBus())
 - b1005
 - x1191 = StreamInNew(BurstAckBus)
 - b924
 - b925
 - x879 = ArgInNew(Const(0))
 - x906 = DRAMHostNew(List(x904, x905),Const(0))
 - x927 = RegNew(Const(0))
 - x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1189 = StreamOutNew(BurstCmdBus)
 - x1010 = RegNew(Const(0))
 - b914
 - b1004
 - x1190
 - b1005_chain_read_3
 - x1191
 - b924
 - b925
 - x879_N
 - x906_c
 - x927_reg
 - x1018_tileC_sram_1
 - x1189
 - x1010_reg
 - b914
 - b1004_chain_read_3
Stms:
  x1411 = DelayLine(4,b1227)
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1200 = RegRead(x879)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1401 = DelayLine(1,b1004)
  x1233 = FixSub(b1226,x1228)
  x1222 = UnitPipe(Set(),Block(Const(())),None)
  x1196 = RegNew(Const(0))
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191)
  x1228 = RegRead(x1196)
  x1409 = DelayLine(2,b1227)
  x1232 = And(x1229,x1231)
  x1215 = FixAdd(x1213,x1404)
  x1405 = DelayLine(1,x1215)
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1206 = FixSub(x1331,x1204)
  x1199 = FixAdd(b924,b1194)
  x1217 = DRAMIsAlloc(x906)
  x1238 = VecApply(x1237,0)
  x1210 = FixDivSRA(x1209,Const(4))
  x1407 = DelayLine(1,x1235)
  x1402 = DelayLine(1,x1200)
  x1214 = DRAMAddress(x906)
  x1207 = RegRead(x1010)
  x1231 = FixLst(b1226,x1230)
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1333 = FixSLA(x1210,Const(6))
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
  x1219 = RegWrite(x1196,x1206,Set())
  x1403 = DelayLine(8,x1207)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1332 = FixSLA(x1203,Const(6))
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1))
  x1209 = FixAdd(x1208,Const(15))
  x1408 = DelayLine(2,x1232)
  x1198 = RegNew(Const(0))
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x1225 = CounterChainNew(List(x1224))
  x1230 = RegRead(x1197)
  x1235 = FixSLA(b1194,Const(4))
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1221 = RegWrite(x1198,x1211,Set())
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x1321 = RegRead(x1198)
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set()))
  x1229 = FixLeq(x1228,b1226)
  x1410 = DelayLine(4,x1232)
  x1197 = RegNew(Const(0))
  x1236 = FixAdd(x1407,x1233)
  x1331 = FixFMA(x1199,x1402,x1401)
  x1204 = FixSLA(x1203,Const(4))
Used:
  x1411 = DelayLine(4,b1227) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: false]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  () [Made: false]
  x1200 = RegRead(x879) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1222 = UnitPipe(Set(),Block(Const(())),None) [Made: true]
  x1196 = RegNew(Const(0)) [Made: true]
  x1228 = RegRead(x1196) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1191 = StreamInNew(BurstAckBus) [Made: false]
  x1232 = And(x1229,x1231) [Made: true]
  b924 [Made: false]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  b1195 [Made: false]
  x1407 = DelayLine(1,x1235) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  b1227 [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x1231 = FixLst(b1226,x1230) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1219 = RegWrite(x1196,x1206,Set()) [Made: true]
  x1403 = DelayLine(8,x1207) [Made: true]
  b1226 [Made: true]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1)) [Made: true]
  b1194 [Made: false]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1198 = RegNew(Const(0)) [Made: true]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1225 = CounterChainNew(List(x1224)) [Made: true]
  x1230 = RegRead(x1197) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406))) [Made: true]
  x1220 = RegWrite(x1197,x1208,Set()) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1221 = RegWrite(x1198,x1211,Set()) [Made: true]
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411))) [Made: true]
  x1321 = RegRead(x1198) [Made: true]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: false]
  x1010 = RegNew(Const(0)) [Made: false]
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set())) [Made: true]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1197 = RegNew(Const(0)) [Made: true]
  x1236 = FixAdd(x1407,x1233) [Made: true]
  b1004 [Made: false]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
Inputs for x1247 are (Set(x1190, x1191, b924, x879, b1195, x906, b1194, x1018, x1189, x1010, b1004) ++ Set() ++ Set(x1190, x1191, x906, x1189) ++ Set()) diff Set(x1243, x1242, b1195, x1246, b1194) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1411 = DelayLine(4,b1227)
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1200 = RegRead(x879)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1401 = DelayLine(1,b1004)
  x1233 = FixSub(b1226,x1228)
  x1222 = UnitPipe(Set(),Block(Const(())),None)
  x1196 = RegNew(Const(0))
  x1243 = FringeDenseStore(x906,x1189,x1190,x1191)
  x1228 = RegRead(x1196)
  x1409 = DelayLine(2,b1227)
  x1232 = And(x1229,x1231)
  x1215 = FixAdd(x1213,x1404)
  x1405 = DelayLine(1,x1215)
  x1242 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1206 = FixSub(x1331,x1204)
  x1199 = FixAdd(b924,b1194)
  x1217 = DRAMIsAlloc(x906)
  x1238 = VecApply(x1237,0)
  x1210 = FixDivSRA(x1209,Const(4))
  x1407 = DelayLine(1,x1235)
  x1402 = DelayLine(1,x1200)
  x1214 = DRAMAddress(x906)
  x1207 = RegRead(x1010)
  x1231 = FixLst(b1226,x1230)
  x1246 = UnitPipe(Set(b1195),Block(Const(())),None)
  x1333 = FixSLA(x1210,Const(6))
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
  x1219 = RegWrite(x1196,x1206,Set())
  x1403 = DelayLine(8,x1207)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1332 = FixSLA(x1203,Const(6))
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1))
  x1209 = FixAdd(x1208,Const(15))
  x1408 = DelayLine(2,x1232)
  x1198 = RegNew(Const(0))
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x1225 = CounterChainNew(List(x1224))
  x1230 = RegRead(x1197)
  x1235 = FixSLA(b1194,Const(4))
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1221 = RegWrite(x1198,x1211,Set())
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x1321 = RegRead(x1198)
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set()))
  x1229 = FixLeq(x1228,b1226)
  x1410 = DelayLine(4,x1232)
  x1197 = RegNew(Const(0))
  x1236 = FixAdd(x1407,x1233)
  x1331 = FixFMA(x1199,x1402,x1401)
  x1204 = FixSLA(x1203,Const(4))
Used:
  x1411 = DelayLine(4,b1227) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: false]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  () [Made: false]
  x1200 = RegRead(x879) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1222 = UnitPipe(Set(),Block(Const(())),None) [Made: true]
  x1196 = RegNew(Const(0)) [Made: true]
  x1228 = RegRead(x1196) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1191 = StreamInNew(BurstAckBus) [Made: false]
  x1232 = And(x1229,x1231) [Made: true]
  b924 [Made: false]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  b1195 [Made: false]
  x1407 = DelayLine(1,x1235) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  b1227 [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x1231 = FixLst(b1226,x1230) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1219 = RegWrite(x1196,x1206,Set()) [Made: true]
  x1403 = DelayLine(8,x1207) [Made: true]
  b1226 [Made: true]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1)) [Made: true]
  b1194 [Made: false]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1198 = RegNew(Const(0)) [Made: true]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1225 = CounterChainNew(List(x1224)) [Made: true]
  x1230 = RegRead(x1197) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406))) [Made: true]
  x1220 = RegWrite(x1197,x1208,Set()) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1221 = RegWrite(x1198,x1211,Set()) [Made: true]
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411))) [Made: true]
  x1321 = RegRead(x1198) [Made: true]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: false]
  x1010 = RegNew(Const(0)) [Made: false]
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set())) [Made: true]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1197 = RegNew(Const(0)) [Made: true]
  x1236 = FixAdd(x1407,x1233) [Made: true]
  b1004 [Made: false]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
Inputs for x1247 are (Set(x1190, x1191, b924, x879, b1195, x906, b1194, x1018, x1189, x1010, b1004) ++ Set() ++ Set(x1190, x1191, x906, x1189) ++ Set()) diff Set(x1243, x1242, b1195, x1246, b1194) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1247 = UnrolledForeach(Set(),x1193,Block(Const(())),List(List(b1194)),List(List(b1195)),None)
 - x1190 = StreamOutNew(BurstFullDataBus())
 - x1191 = StreamInNew(BurstAckBus)
 - b924
 - x879 = ArgInNew(Const(0))
 - x906 = DRAMHostNew(List(x904, x905),Const(0))
 - x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1189 = StreamOutNew(BurstCmdBus)
 - x1010 = RegNew(Const(0))
 - b1004
 - x1190
 - x1191
 - b924
 - x879_N
 - x906_c
 - x1018_tileC_sram_1
 - x1189
 - x1010_reg
 - b1004
Stms:
  x1411 = DelayLine(4,b1227)
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1200 = RegRead(x879)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1401 = DelayLine(1,b1004)
  x1233 = FixSub(b1226,x1228)
  x1222 = UnitPipe(Set(),Block(Const(())),None)
  x1196 = RegNew(Const(0))
  x1228 = RegRead(x1196)
  x1409 = DelayLine(2,b1227)
  x1232 = And(x1229,x1231)
  x1215 = FixAdd(x1213,x1404)
  x1405 = DelayLine(1,x1215)
  x1206 = FixSub(x1331,x1204)
  x1199 = FixAdd(b924,b1194)
  x1217 = DRAMIsAlloc(x906)
  x1238 = VecApply(x1237,0)
  x1210 = FixDivSRA(x1209,Const(4))
  x1407 = DelayLine(1,x1235)
  x1402 = DelayLine(1,x1200)
  x1214 = DRAMAddress(x906)
  x1207 = RegRead(x1010)
  x1231 = FixLst(b1226,x1230)
  x1333 = FixSLA(x1210,Const(6))
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
  x1219 = RegWrite(x1196,x1206,Set())
  x1403 = DelayLine(8,x1207)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1332 = FixSLA(x1203,Const(6))
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1))
  x1209 = FixAdd(x1208,Const(15))
  x1408 = DelayLine(2,x1232)
  x1198 = RegNew(Const(0))
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x1225 = CounterChainNew(List(x1224))
  x1230 = RegRead(x1197)
  x1235 = FixSLA(b1194,Const(4))
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1221 = RegWrite(x1198,x1211,Set())
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x1321 = RegRead(x1198)
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1229 = FixLeq(x1228,b1226)
  x1410 = DelayLine(4,x1232)
  x1197 = RegNew(Const(0))
  x1236 = FixAdd(x1407,x1233)
  x1331 = FixFMA(x1199,x1402,x1401)
  x1204 = FixSLA(x1203,Const(4))
Used:
  x1411 = DelayLine(4,b1227) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: false]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  () [Made: false]
  x1200 = RegRead(x879) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1196 = RegNew(Const(0)) [Made: true]
  x1228 = RegRead(x1196) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1232 = And(x1229,x1231) [Made: true]
  b924 [Made: false]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  x1407 = DelayLine(1,x1235) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  b1227 [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x1231 = FixLst(b1226,x1230) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1219 = RegWrite(x1196,x1206,Set()) [Made: true]
  x1403 = DelayLine(8,x1207) [Made: true]
  b1226 [Made: true]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1)) [Made: true]
  b1194 [Made: false]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1198 = RegNew(Const(0)) [Made: true]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1225 = CounterChainNew(List(x1224)) [Made: true]
  x1230 = RegRead(x1197) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406))) [Made: true]
  x1220 = RegWrite(x1197,x1208,Set()) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1221 = RegWrite(x1198,x1211,Set()) [Made: true]
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411))) [Made: true]
  x1321 = RegRead(x1198) [Made: true]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: false]
  x1010 = RegNew(Const(0)) [Made: false]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1197 = RegNew(Const(0)) [Made: true]
  x1236 = FixAdd(x1407,x1233) [Made: true]
  b1004 [Made: false]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
Inputs for x1242 are (Set(x1190, b924, x879, b1195, x906, b1194, x1198, x1018, x1189, x1010, b1004) ++ Set() ++ Set(x1190, x906, x1189) ++ Set()) diff Set(x1222, x1196, x1241, x1224, x1198, x1225, x1321, x1197) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1411 = DelayLine(4,b1227)
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1200 = RegRead(x879)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1401 = DelayLine(1,b1004)
  x1233 = FixSub(b1226,x1228)
  x1222 = UnitPipe(Set(),Block(Const(())),None)
  x1196 = RegNew(Const(0))
  x1228 = RegRead(x1196)
  x1409 = DelayLine(2,b1227)
  x1232 = And(x1229,x1231)
  x1215 = FixAdd(x1213,x1404)
  x1405 = DelayLine(1,x1215)
  x1206 = FixSub(x1331,x1204)
  x1199 = FixAdd(b924,b1194)
  x1217 = DRAMIsAlloc(x906)
  x1238 = VecApply(x1237,0)
  x1210 = FixDivSRA(x1209,Const(4))
  x1407 = DelayLine(1,x1235)
  x1402 = DelayLine(1,x1200)
  x1214 = DRAMAddress(x906)
  x1207 = RegRead(x1010)
  x1231 = FixLst(b1226,x1230)
  x1333 = FixSLA(x1210,Const(6))
  x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
  x1219 = RegWrite(x1196,x1206,Set())
  x1403 = DelayLine(8,x1207)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1332 = FixSLA(x1203,Const(6))
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1))
  x1209 = FixAdd(x1208,Const(15))
  x1408 = DelayLine(2,x1232)
  x1198 = RegNew(Const(0))
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x1225 = CounterChainNew(List(x1224))
  x1230 = RegRead(x1197)
  x1235 = FixSLA(b1194,Const(4))
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1221 = RegWrite(x1198,x1211,Set())
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x1321 = RegRead(x1198)
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1229 = FixLeq(x1228,b1226)
  x1410 = DelayLine(4,x1232)
  x1197 = RegNew(Const(0))
  x1236 = FixAdd(x1407,x1233)
  x1331 = FixFMA(x1199,x1402,x1401)
  x1204 = FixSLA(x1203,Const(4))
Used:
  x1411 = DelayLine(4,b1227) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: false]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  () [Made: false]
  x1200 = RegRead(x879) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1196 = RegNew(Const(0)) [Made: true]
  x1228 = RegRead(x1196) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1232 = And(x1229,x1231) [Made: true]
  b924 [Made: false]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  x1407 = DelayLine(1,x1235) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  b1227 [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x1231 = FixLst(b1226,x1230) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1219 = RegWrite(x1196,x1206,Set()) [Made: true]
  x1403 = DelayLine(8,x1207) [Made: true]
  b1226 [Made: true]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  x1224 = CounterNew(Const(0),x1321,Const(1),Const(1)) [Made: true]
  b1194 [Made: false]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1198 = RegNew(Const(0)) [Made: true]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1225 = CounterChainNew(List(x1224)) [Made: true]
  x1230 = RegRead(x1197) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406))) [Made: true]
  x1220 = RegWrite(x1197,x1208,Set()) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1221 = RegWrite(x1198,x1211,Set()) [Made: true]
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411))) [Made: true]
  x1321 = RegRead(x1198) [Made: true]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: false]
  x1010 = RegNew(Const(0)) [Made: false]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1197 = RegNew(Const(0)) [Made: true]
  x1236 = FixAdd(x1407,x1233) [Made: true]
  b1004 [Made: false]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
Inputs for x1242 are (Set(x1190, b924, x879, b1195, x906, b1194, x1198, x1018, x1189, x1010, b1004) ++ Set() ++ Set(x1190, x906, x1189) ++ Set()) diff Set(x1222, x1196, x1241, x1224, x1198, x1225, x1321, x1197) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1242 = UnitPipe(Set(b1195),Block(Const(())),None)
 - x1190 = StreamOutNew(BurstFullDataBus())
 - b924
 - x879 = ArgInNew(Const(0))
 - b1195
 - x906 = DRAMHostNew(List(x904, x905),Const(0))
 - b1194
 - x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1189 = StreamOutNew(BurstCmdBus)
 - x1010 = RegNew(Const(0))
 - b1004
 - x1190
 - b924
 - x879_N
 - b1195
 - x906_c
 - b1194
 - x1018_tileC_sram_1
 - x1189
 - x1010_reg
 - b1004
Stms:
  x1200 = RegRead(x879)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1401 = DelayLine(1,b1004)
  x1215 = FixAdd(x1213,x1404)
  x1405 = DelayLine(1,x1215)
  x1206 = FixSub(x1331,x1204)
  x1199 = FixAdd(b924,b1194)
  x1217 = DRAMIsAlloc(x906)
  x1210 = FixDivSRA(x1209,Const(4))
  x1402 = DelayLine(1,x1200)
  x1214 = DRAMAddress(x906)
  x1207 = RegRead(x1010)
  x1333 = FixSLA(x1210,Const(6))
  x1219 = RegWrite(x1196,x1206,Set())
  x1403 = DelayLine(8,x1207)
  x1332 = FixSLA(x1203,Const(6))
  x1209 = FixAdd(x1208,Const(15))
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1221 = RegWrite(x1198,x1211,Set())
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1331 = FixFMA(x1199,x1402,x1401)
  x1204 = FixSLA(x1203,Const(4))
Used:
  x1200 = RegRead(x879) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1196 = RegNew(Const(0)) [Made: false]
  b924 [Made: false]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1403 = DelayLine(8,x1207) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  b1194 [Made: false]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x1198 = RegNew(Const(0)) [Made: false]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: false]
  x1010 = RegNew(Const(0)) [Made: false]
  x1197 = RegNew(Const(0)) [Made: false]
  b1004 [Made: false]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
Inputs for x1222 are (Set(x1196, b924, x879, x906, b1194, x1198, x1189, x1010, x1197, b1004) ++ Set() ++ Set(x906, x1189) ++ Set(x1189)) diff Set(x1200, x1217, x1214, x1207, x1219, x1218, x1220, x1221) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1200 = RegRead(x879)
  x1211 = FixSLA(x1210,Const(4))
  x1406 = DelayLine(10,x1217)
  x1401 = DelayLine(1,b1004)
  x1215 = FixAdd(x1213,x1404)
  x1405 = DelayLine(1,x1215)
  x1206 = FixSub(x1331,x1204)
  x1199 = FixAdd(b924,b1194)
  x1217 = DRAMIsAlloc(x906)
  x1210 = FixDivSRA(x1209,Const(4))
  x1402 = DelayLine(1,x1200)
  x1214 = DRAMAddress(x906)
  x1207 = RegRead(x1010)
  x1333 = FixSLA(x1210,Const(6))
  x1219 = RegWrite(x1196,x1206,Set())
  x1403 = DelayLine(8,x1207)
  x1332 = FixSLA(x1203,Const(6))
  x1209 = FixAdd(x1208,Const(15))
  x1213 = FixToFix(x1332,TRUE,_64,_0)
  x1203 = FixDivSRA(x1331,Const(4))
  x1208 = FixAdd(x1206,x1403)
  x1218 = StreamOutBankedWrite(x1189,ArrayBuffer(x1216),ArrayBuffer(Set(x1406)))
  x1220 = RegWrite(x1197,x1208,Set())
  x1404 = DelayLine(7,x1214)
  x1221 = RegWrite(x1198,x1211,Set())
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false))))
  x1331 = FixFMA(x1199,x1402,x1401)
  x1204 = FixSLA(x1203,Const(4))
Used:
  x1200 = RegRead(x879) [Made: true]
  x1211 = FixSLA(x1210,Const(4)) [Made: true]
  x1406 = DelayLine(10,x1217) [Made: true]
  x1401 = DelayLine(1,b1004) [Made: true]
  x1196 = RegNew(Const(0)) [Made: false]
  b924 [Made: false]
  x1215 = FixAdd(x1213,x1404) [Made: true]
  x1405 = DelayLine(1,x1215) [Made: true]
  x1206 = FixSub(x1331,x1204) [Made: true]
  x1199 = FixAdd(b924,b1194) [Made: true]
  x1217 = DRAMIsAlloc(x906) [Made: true]
  x879 = ArgInNew(Const(0)) [Made: false]
  x1210 = FixDivSRA(x1209,Const(4)) [Made: true]
  x1402 = DelayLine(1,x1200) [Made: true]
  x1214 = DRAMAddress(x906) [Made: true]
  x1207 = RegRead(x1010) [Made: true]
  x1333 = FixSLA(x1210,Const(6)) [Made: true]
  x906 = DRAMHostNew(List(x904, x905),Const(0)) [Made: false]
  x1403 = DelayLine(8,x1207) [Made: true]
  x1332 = FixSLA(x1203,Const(6)) [Made: true]
  b1194 [Made: false]
  x1209 = FixAdd(x1208,Const(15)) [Made: true]
  x1198 = RegNew(Const(0)) [Made: false]
  x1213 = FixToFix(x1332,TRUE,_64,_0) [Made: true]
  x1203 = FixDivSRA(x1331,Const(4)) [Made: true]
  x1208 = FixAdd(x1206,x1403) [Made: true]
  x1404 = DelayLine(7,x1214) [Made: true]
  x1216 = SimpleStruct(ArrayBuffer((offset,x1405), (size,x1333), (isLoad,Const(false)))) [Made: true]
  x1189 = StreamOutNew(BurstCmdBus) [Made: false]
  x1010 = RegNew(Const(0)) [Made: false]
  x1197 = RegNew(Const(0)) [Made: false]
  b1004 [Made: false]
  x1331 = FixFMA(x1199,x1402,x1401) [Made: true]
  x1204 = FixSLA(x1203,Const(4)) [Made: true]
Inputs for x1222 are (Set(x1196, b924, x879, x906, b1194, x1198, x1189, x1010, x1197, b1004) ++ Set() ++ Set(x906, x1189) ++ Set(x1189)) diff Set(x1200, x1217, x1214, x1207, x1219, x1218, x1220, x1221) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1222 = UnitPipe(Set(),Block(Const(())),None)
 - x1196 = RegNew(Const(0))
 - b924
 - x879 = ArgInNew(Const(0))
 - x906 = DRAMHostNew(List(x904, x905),Const(0))
 - b1194
 - x1198 = RegNew(Const(0))
 - x1189 = StreamOutNew(BurstCmdBus)
 - x1010 = RegNew(Const(0))
 - x1197 = RegNew(Const(0))
 - b1004
 - x1196_reg
 - b924
 - x879_N
 - x906_c
 - b1194
 - x1198_reg
 - x1189
 - x1010_reg
 - x1197_reg
 - b1004
Stms:
  x1411 = DelayLine(4,b1227)
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1233 = FixSub(b1226,x1228)
  x1228 = RegRead(x1196)
  x1409 = DelayLine(2,b1227)
  x1232 = And(x1229,x1231)
  x1238 = VecApply(x1237,0)
  x1407 = DelayLine(1,x1235)
  x1231 = FixLst(b1226,x1230)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1408 = DelayLine(2,x1232)
  x1230 = RegRead(x1197)
  x1235 = FixSLA(b1194,Const(4))
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x1229 = FixLeq(x1228,b1226)
  x1410 = DelayLine(4,x1232)
  x1236 = FixAdd(x1407,x1233)
Used:
  x1411 = DelayLine(4,b1227) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: false]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1196 = RegNew(Const(0)) [Made: false]
  x1228 = RegRead(x1196) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1232 = And(x1229,x1231) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x1407 = DelayLine(1,x1235) [Made: true]
  b1227 [Made: false]
  x1231 = FixLst(b1226,x1230) [Made: true]
  b1226 [Made: false]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  b1194 [Made: false]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1230 = RegRead(x1197) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1197 = RegNew(Const(0)) [Made: false]
  x1236 = FixAdd(x1407,x1233) [Made: true]
Inputs for x1241 are (Set(x1190, x1196, b1227, b1226, b1194, x1018, x1197) ++ Set() ++ Set(x1190) ++ Set(x1190)) diff Set(x1237, x1228, b1227, b1226, x1230, x1240) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1411 = DelayLine(4,b1227)
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]])
  x1233 = FixSub(b1226,x1228)
  x1228 = RegRead(x1196)
  x1409 = DelayLine(2,b1227)
  x1232 = And(x1229,x1231)
  x1238 = VecApply(x1237,0)
  x1407 = DelayLine(1,x1235)
  x1231 = FixLst(b1226,x1230)
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410)))
  x1408 = DelayLine(2,x1232)
  x1230 = RegRead(x1197)
  x1235 = FixSLA(b1194,Const(4))
  x1240 = StreamOutBankedWrite(x1190,ArrayBuffer(x1239),ArrayBuffer(Set(x1411)))
  x1229 = FixLeq(x1228,b1226)
  x1410 = DelayLine(4,x1232)
  x1236 = FixAdd(x1407,x1233)
Used:
  x1411 = DelayLine(4,b1227) [Made: true]
  x1190 = StreamOutNew(BurstFullDataBus()) [Made: false]
  x1237 = SRAMBankedRead(x1018,Vector(List(Const(0))),Vector(x1236),Vector(Set(x1408, x1409)),Vec[Fix[TRUE,_24,_8]]) [Made: true]
  x1233 = FixSub(b1226,x1228) [Made: true]
  x1196 = RegNew(Const(0)) [Made: false]
  x1228 = RegRead(x1196) [Made: true]
  x1409 = DelayLine(2,b1227) [Made: true]
  x1232 = And(x1229,x1231) [Made: true]
  x1238 = VecApply(x1237,0) [Made: true]
  x1407 = DelayLine(1,x1235) [Made: true]
  b1227 [Made: false]
  x1231 = FixLst(b1226,x1230) [Made: true]
  b1226 [Made: false]
  x1239 = SimpleStruct(ArrayBuffer((_1,x1238), (_2,x1410))) [Made: true]
  b1194 [Made: false]
  x1408 = DelayLine(2,x1232) [Made: true]
  x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]]) [Made: false]
  x1230 = RegRead(x1197) [Made: true]
  x1235 = FixSLA(b1194,Const(4)) [Made: true]
  x1229 = FixLeq(x1228,b1226) [Made: true]
  x1410 = DelayLine(4,x1232) [Made: true]
  x1197 = RegNew(Const(0)) [Made: false]
  x1236 = FixAdd(x1407,x1233) [Made: true]
Inputs for x1241 are (Set(x1190, x1196, b1227, b1226, b1194, x1018, x1197) ++ Set() ++ Set(x1190) ++ Set(x1190)) diff Set(x1237, x1228, b1227, b1226, x1230, x1240) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1241 = UnrolledForeach(Set(),x1225,Block(Const(())),List(List(b1226)),List(List(b1227)),None)
 - x1190 = StreamOutNew(BurstFullDataBus())
 - x1196 = RegNew(Const(0))
 - b1194
 - x1018 = SRAMNew(List(Const(16), Const(16)),SRAM2[Fix[TRUE,_24,_8]])
 - x1197 = RegNew(Const(0))
 - x1190
 - x1196_reg
 - b1194
 - x1018_tileC_sram_1
 - x1197_reg
Stms:
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set()))
Used:
  x1191 = StreamInNew(BurstAckBus) [Made: false]
Inputs for x1246 are (Set(b1195, x1191) ++ Set() ++ Set(x1191) ++ Set(x1191)) diff Set(x1244) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
Stms:
  x1244 = StreamInBankedRead(x1191,ArrayBuffer(Set()))
Used:
  x1191 = StreamInNew(BurstAckBus) [Made: false]
Inputs for x1246 are (Set(b1195, x1191) ++ Set() ++ Set(x1191) ++ Set(x1191)) diff Set(x1244) ++ Set(x1190, x1191, x937, x1021, x1086, x906, x900, x903, x1189, x1019, x935, x1088)
x1246 = UnitPipe(Set(b1195),Block(Const(())),None)
 - b1195
 - x1191 = StreamInNew(BurstAckBus)
 - b1195
 - x1191
