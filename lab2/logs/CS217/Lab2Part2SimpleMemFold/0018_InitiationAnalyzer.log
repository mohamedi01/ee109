  x23 = AccelScope(Block(Const(())))
    x21 = OpMemReduce(Set(),x4,x6,x2,Block(x11),Block((x11) => x18),Block((x2) => x19),Block((b9,b10) => x17),Block((x2,x17) => x20),None,true,List(b7),List(b8),None,Fix[TRUE,_32,_0],SRAM1[Fix[TRUE,_32,_0]])
      x16 = OpForeach(Set(),x14,Block(Const(())),List(b13),None)
      Working on pipeLatencies of result Vector(Const(()), x15), schedule Vector(x15)
      Memories with both reads and writes in this scope: Set()
      Done finding cycles: Vector(), Map()
      Computing fullDFS: Const(())
      Computing fullDFS: x15
      cur: x15, inReduce: false, latency: 3.0
      Cycles: Map()
      cycles are Vector()
         stm: x15, None
       - Latency:  3.0
       - Interval: 1.0 (1.0 bbox)
       - Iter Diff: None (from ArrayBuffer())
     - Interval: 1.0
    x84 = UnitPipe(Set(),Block(Const(())),None)
      x73 = UnitPipe(Set(),Block(Const(())),None)
      Working on pipeLatencies of result Vector(Const(()), x69, x71, x72), schedule Vector(x69, x70, x71, x72)
      Memories with both reads and writes in this scope: Set()
      Done finding cycles: Vector(), Map()
      Computing fullDFS: Const(())
      Computing fullDFS: x69
      cur: x69, inReduce: false, latency: 0.0
      Computing fullDFS: x71
      cur: x71, inReduce: false, latency: 0.0
      Computing fullDFS: x72
      Computing fullDFS: x70
      Cycles: Map()
      cycles are Vector()
         stm: x69, None
         stm: x70, None
         stm: x71, None
         stm: x72, None
       - Latency:  0.0
       - Interval: 1.0 (1.0 bbox)
       - Iter Diff: None (from ArrayBuffer())
      x80 = OpForeach(Set(),x76,Block(Const(())),List(b75),None)
      Working on pipeLatencies of result Vector(Const(()), x77, x79), schedule Vector(x77, x78, x79)
      Memories with both reads and writes in this scope: Set()
      Done finding cycles: Vector(), Map()
      Computing fullDFS: Const(())
      Computing fullDFS: x77
      cur: x77, inReduce: false, latency: 4.0
      Computing fullDFS: x79
      Computing fullDFS: x78
      Cycles: Map()
      cycles are Vector()
         stm: x77, None
         stm: x78, None
         stm: x79, None
       - Latency:  4.0
       - Interval: 1.0 (1.0 bbox)
       - Iter Diff: None (from ArrayBuffer())
      x83 = UnitPipe(Set(),Block(Const(())),None)
      Working on pipeLatencies of result Vector(Const(()), x82), schedule Vector(x82)
      Memories with both reads and writes in this scope: Set(x68)
      Done finding cycles: Vector(), Map()
      Computing fullDFS: Const(())
      Computing fullDFS: x82
      cur: x82, inReduce: false, latency: 1.0
      Cycles: Map()
      pseudo cycles for x68:
      cycles are Vector()
         stm: x82, None
       - Latency:  1.0
       - Interval: 1.0 (1.0 bbox)
       - Iter Diff: None (from ArrayBuffer())
     - Interval: 1.0
   - Interval: 1.0
