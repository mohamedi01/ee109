  x27 = AccelScope(Block(Const(())))
    x24 = StateMachine(Set(),Const(0),Block((b5) => x6),Block((b5) => x87),Block((b5) => x23),Fix[TRUE,_32,_0])
      x87 = Switch(List(x7, x69),Block(x83))
      Working on pipeLatencies of result Vector(x83, x74, x85, x21, x86, x72, x71, x10, x13, x81, x80, Const(17), x18, b5), schedule Vector(x74, x83, x8, x70, x85, x71, x72, x9, x10, x11, x12, x13, x15, x16, x75, x17, x76, x77, x78, x86, x21, x79, x80, x81, x18)
      Memories with both reads and writes in this scope: Set()
      Done finding cycles: Vector(), Map()
      Computing fullDFS: x83
      Computing fullDFS: x74
      Computing fullDFS: x85
      Computing fullDFS: x8
      cur: x8, inReduce: false, latency: 0.4
      Computing fullDFS: x70
      Computing fullDFS: x71
      Computing fullDFS: x10
      Computing fullDFS: x9
      cur: x9, inReduce: false, latency: 1.0
      Computing fullDFS: x72
      Computing fullDFS: x13
      Computing fullDFS: x11
      cur: x11, inReduce: false, latency: 1.0
      Computing fullDFS: x12
      cur: x12, inReduce: false, latency: 1.0
      Computing fullDFS: x86
      Computing fullDFS: x16
      cur: x16, inReduce: false, latency: 0.2
      Computing fullDFS: x76
      Computing fullDFS: x75
      Computing fullDFS: x17
      cur: x17, inReduce: false, latency: 0.2
      Computing fullDFS: x78
      Computing fullDFS: x77
      Computing fullDFS: x80
      Computing fullDFS: x18
      cur: x18, inReduce: false, latency: 0.0
      Computing fullDFS: x81
      cur: x81, inReduce: false, latency: 0.0
      Computing fullDFS: x21
      Computing fullDFS: x15
      cur: x15, inReduce: false, latency: 1.0
      Computing fullDFS: Const(17)
      Computing fullDFS: b5
      Cycles: Map()
      cycles are Vector()
         stm: x74, None
         stm: x83, None
       - Latency:  4.0
       - Interval: 1.0 (1.0 bbox)
       - Iter Diff: None (from ArrayBuffer())
    Working on pipeLatencies of result Vector(x6), schedule Vector(x6)
    Memories with both reads and writes in this scope: Set()
    Done finding cycles: Vector(), Map()
    Computing fullDFS: x6
    cur: x6, inReduce: false, latency: 0.4
    Cycles: Map()
    cycles are Vector()
    Working on pipeLatencies of result Vector(x23), schedule Vector(x23)
    Memories with both reads and writes in this scope: Set()
    Done finding cycles: Vector(), Map()
    Computing fullDFS: x23
    cur: x23, inReduce: false, latency: 1.0
    Cycles: Map()
    cycles are Vector()
    Working on pipeLatencies of result Vector(x87, x83, x74, x85, x21, x86, x72, x71, x10, x13, x81, x80, Const(17), x18, b5), schedule Vector(x7, x69, x87, x74, x83, x8, x70, x85, x71, x72, x9, x10, x11, x12, x13, x15, x16, x75, x17, x76, x77, x78, x86, x21, x79, x80, x81, x18)
    Memories with both reads and writes in this scope: Set()
    Done finding cycles: Vector(), Map()
    Computing fullDFS: x87
    Computing fullDFS: x7
    cur: x7, inReduce: false, latency: 0.4
    Computing fullDFS: x69
    Computing fullDFS: x74
    Computing fullDFS: x85
    Computing fullDFS: x8
    cur: x8, inReduce: false, latency: 0.4
    Computing fullDFS: x70
    Computing fullDFS: x71
    Computing fullDFS: x10
    Computing fullDFS: x9
    cur: x9, inReduce: false, latency: 1.0
    Computing fullDFS: x72
    Computing fullDFS: x13
    Computing fullDFS: x11
    cur: x11, inReduce: false, latency: 1.0
    Computing fullDFS: x12
    cur: x12, inReduce: false, latency: 1.0
    Computing fullDFS: x83
    Computing fullDFS: x86
    Computing fullDFS: x16
    cur: x16, inReduce: false, latency: 0.2
    Computing fullDFS: x76
    Computing fullDFS: x75
    Computing fullDFS: x17
    cur: x17, inReduce: false, latency: 0.2
    Computing fullDFS: x78
    Computing fullDFS: x77
    Computing fullDFS: x80
    Computing fullDFS: x18
    cur: x18, inReduce: false, latency: 0.0
    Computing fullDFS: x81
    cur: x81, inReduce: false, latency: 0.0
    Computing fullDFS: x21
    Computing fullDFS: x15
    cur: x15, inReduce: false, latency: 1.0
    Computing fullDFS: Const(17)
    Computing fullDFS: b5
    Cycles: Map()
    Written memories: x2
    Read memories: 
    Intersection: 
     - Latency:  5.4
     - Interval: 2.0
    x108 = UnitPipe(Set(),Block(Const(())),None)
      x97 = UnitPipe(Set(),Block(Const(())),None)
      Working on pipeLatencies of result Vector(Const(()), x93, x95, x96), schedule Vector(x93, x94, x95, x96)
      Memories with both reads and writes in this scope: Set()
      Done finding cycles: Vector(), Map()
      Computing fullDFS: Const(())
      Computing fullDFS: x93
      cur: x93, inReduce: false, latency: 0.0
      Computing fullDFS: x95
      cur: x95, inReduce: false, latency: 0.0
      Computing fullDFS: x96
      Computing fullDFS: x94
      Cycles: Map()
      cycles are Vector()
         stm: x93, None
         stm: x94, None
         stm: x95, None
         stm: x96, None
       - Latency:  0.0
       - Interval: 1.0 (1.0 bbox)
       - Iter Diff: None (from ArrayBuffer())
      x104 = OpForeach(Set(),x100,Block(Const(())),List(b99),None)
      Working on pipeLatencies of result Vector(Const(()), x101, x103), schedule Vector(x101, x102, x103)
      Memories with both reads and writes in this scope: Set()
      Done finding cycles: Vector(), Map()
      Computing fullDFS: Const(())
      Computing fullDFS: x101
      cur: x101, inReduce: false, latency: 4.0
      Computing fullDFS: x103
      Computing fullDFS: x102
      Cycles: Map()
      cycles are Vector()
         stm: x101, None
         stm: x102, None
         stm: x103, None
       - Latency:  4.0
       - Interval: 1.0 (1.0 bbox)
       - Iter Diff: None (from ArrayBuffer())
      x107 = UnitPipe(Set(),Block(Const(())),None)
      Working on pipeLatencies of result Vector(Const(()), x106), schedule Vector(x106)
      Memories with both reads and writes in this scope: Set(x92)
      Done finding cycles: Vector(), Map()
      Computing fullDFS: Const(())
      Computing fullDFS: x106
      cur: x106, inReduce: false, latency: 1.0
      Cycles: Map()
      pseudo cycles for x92:
      cycles are Vector()
         stm: x106, None
       - Latency:  1.0
       - Interval: 1.0 (1.0 bbox)
       - Iter Diff: None (from ArrayBuffer())
     - Interval: 1.0
   - Interval: 2.0
