  x810 = AccelScope(Block(Const(())))
    x1704 = UnrolledForeach(Set(),x912,Block(Const(())),List(List(b913)),List(List(b914)),None)
      x921 = UnitPipe(Set(b914),Block(Const(())),None)
      Working on pipeLatencies of result Vector(Const(()), x917, x920), schedule Vector(x917, x918, x919, x920)
      Memories with both reads and writes in this scope: Set()
      Done finding cycles: Vector(), Map()
      Computing fullDFS: Const(())
      Computing fullDFS: x917
      cur: x917, inReduce: false, latency: 0.0
      Computing fullDFS: x920
      Computing fullDFS: x919
      Computing fullDFS: x918
      Cycles: Map()
      cycles are Vector()
         stm: x917, None
         stm: x918, None
         stm: x919, None
         stm: x920, None
       - Latency:  2.0
       - Interval: 1.0 (1.0 bbox)
       - Iter Diff: None (from ArrayBuffer())
      x1703 = UnrolledForeach(Set(b914),x923,Block(Const(())),List(List(b924)),List(List(b925)),None)
        x932 = UnitPipe(Set(b925, b914),Block(Const(())),None)
        Working on pipeLatencies of result Vector(Const(()), x928, x931), schedule Vector(x928, x929, x930, x931)
        Memories with both reads and writes in this scope: Set()
        Done finding cycles: Vector(), Map()
        Computing fullDFS: Const(())
        Computing fullDFS: x928
        cur: x928, inReduce: false, latency: 0.0
        Computing fullDFS: x931
        Computing fullDFS: x930
        Computing fullDFS: x929
        Cycles: Map()
        cycles are Vector()
           stm: x928, None
           stm: x929, None
           stm: x930, None
           stm: x931, None
         - Latency:  2.0
         - Interval: 1.0 (1.0 bbox)
         - Iter Diff: None (from ArrayBuffer())
        x1002 = UnitPipe(Set(b925, b914),Block(Const(())),None)
          x964 = UnrolledForeach(Set(),x939,Block(Const(())),List(List(b940)),List(List(b941)),None)
          Working on pipeLatencies of result Vector(Const(()), x957, x943, x961, x963, x950, x960), schedule Vector(x942, x943, x1813, x1814, x1793, x946, x947, x1794, x949, x950, x1815, x951, x952, x953, x954, x1795, x956, x957, x1816, x958, x1817, x959, x960, x1818, x1819, x961, x1820, x1821, x962, x963)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: Const(())
          Computing fullDFS: x957
          cur: x957, inReduce: false, latency: 0.0
          Computing fullDFS: x943
          cur: x943, inReduce: false, latency: 0.0
          Computing fullDFS: x961
          Computing fullDFS: x959
          Computing fullDFS: x1795
          Computing fullDFS: x953
          Computing fullDFS: x952
          Computing fullDFS: x951
          Computing fullDFS: x949
          Computing fullDFS: x1793
          Computing fullDFS: x942
          cur: x942, inReduce: false, latency: 1.0
          Computing fullDFS: x1813
          Computing fullDFS: x1814
          cur: x1814, inReduce: false, latency: 0.0
          Computing fullDFS: x947
          Computing fullDFS: x946
          Computing fullDFS: x1815
          Computing fullDFS: x950
          cur: x950, inReduce: false, latency: 0.0
          Computing fullDFS: x1817
          Computing fullDFS: x958
          Computing fullDFS: x956
          Computing fullDFS: x1794
          Computing fullDFS: x1816
          Computing fullDFS: x1818
          Computing fullDFS: x960
          cur: x960, inReduce: false, latency: 0.0
          Computing fullDFS: x1819
          cur: x1819, inReduce: false, latency: 0.0
          Computing fullDFS: x963
          Computing fullDFS: x962
          Computing fullDFS: x954
          Computing fullDFS: x1820
          Computing fullDFS: x1821
          Cycles: Map()
          cycles are Vector()
             stm: x942, None
             stm: x943, None
             stm: x1813, None
             stm: x1814, None
             stm: x1793, None
             stm: x946, None
             stm: x947, None
             stm: x1794, None
             stm: x949, None
             stm: x950, None
             stm: x1815, None
             stm: x951, None
             stm: x952, None
             stm: x953, None
             stm: x954, None
             stm: x1795, None
             stm: x956, None
             stm: x957, None
             stm: x1816, None
             stm: x958, None
             stm: x1817, None
             stm: x959, None
             stm: x960, None
             stm: x1818, None
             stm: x1819, None
             stm: x961, None
             stm: x1820, None
             stm: x1821, None
             stm: x962, None
             stm: x963, None
           - Latency:  11.8
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x1001 = UnrolledForeach(Set(),x967,Block(Const(())),List(List(b968)),List(List(b969)),None)
            x981 = UnitPipe(Set(b969),Block(Const(())),None)
            Working on pipeLatencies of result Vector(Const(()), x973, x980, x978, x976), schedule Vector(x973, x974, x975, x976, x977, x978, x979, x980)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x973
            cur: x973, inReduce: false, latency: 0.0
            Computing fullDFS: x980
            Computing fullDFS: x979
            Computing fullDFS: x974
            Computing fullDFS: x978
            Computing fullDFS: x977
            Computing fullDFS: x976
            Computing fullDFS: x975
            Cycles: Map()
            cycles are Vector()
               stm: x973, None
               stm: x974, None
               stm: x975, None
               stm: x976, None
               stm: x977, None
               stm: x978, None
               stm: x979, None
               stm: x980, None
             - Latency:  1.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
            x1000 = UnrolledForeach(Set(b969),x984,Block(Const(())),List(List(b985)),List(List(b986)),None)
            Working on pipeLatencies of result Vector(Const(()), x989, x993, x999, x987), schedule Vector(x987, x988, x989, x990, x991, x992, x993, x1822, x994, x1796, x996, x997, x1823, x998, x1824, x1825, x1826, x1827, x1828, x999)
            Memories with both reads and writes in this scope: Set()
            Done finding cycles: Vector(), Map()
            Computing fullDFS: Const(())
            Computing fullDFS: x989
            cur: x989, inReduce: false, latency: 0.0
            Computing fullDFS: x993
            cur: x993, inReduce: false, latency: 1.0
            Computing fullDFS: x999
            Computing fullDFS: x998
            Computing fullDFS: x992
            Computing fullDFS: x987
            cur: x987, inReduce: false, latency: 0.0
            Computing fullDFS: x1823
            Computing fullDFS: x997
            Computing fullDFS: x996
            cur: x996, inReduce: false, latency: 0.2
            Computing fullDFS: x1824
            Computing fullDFS: x994
            Computing fullDFS: x1822
            Computing fullDFS: x1825
            cur: x1825, inReduce: false, latency: 0.0
            Computing fullDFS: x1826
            Computing fullDFS: x1796
            cur: x1796, inReduce: false, latency: 0.2
            Computing fullDFS: x1827
            cur: x1827, inReduce: false, latency: 0.0
            Computing fullDFS: x1828
            Computing fullDFS: x991
            Computing fullDFS: x988
            Computing fullDFS: x990
            Cycles: Map()
            cycles are Vector()
               stm: x987, None
               stm: x988, None
               stm: x989, None
               stm: x990, None
               stm: x991, None
               stm: x992, None
               stm: x993, None
               stm: x1822, None
               stm: x994, None
               stm: x1796, None
               stm: x996, None
               stm: x997, None
               stm: x1823, None
               stm: x998, None
               stm: x1824, None
               stm: x1825, None
               stm: x1826, None
               stm: x1827, None
               stm: x1828, None
               stm: x999, None
             - Latency:  3.0
             - Interval: 1.0 (1.0 bbox)
             - Iter Diff: None (from ArrayBuffer())
           - Interval: 1.0
         - Interval: 11.8
        x1812 = UnrolledForeach(Set(b925, b914),x1004,Block(Const(())),List(List(b1005)),List(List(b1006)),None)
          x1016 = UnitPipe(Set(b1006, b925, b914),Block(Const(())),None)
          Working on pipeLatencies of result Vector(Const(()), x1012, x1015), schedule Vector(x1012, x1013, x1014, x1015)
          Memories with both reads and writes in this scope: Set()
          Done finding cycles: Vector(), Map()
          Computing fullDFS: Const(())
          Computing fullDFS: x1012
          cur: x1012, inReduce: false, latency: 0.0
          Computing fullDFS: x1015
          Computing fullDFS: x1014
          Computing fullDFS: x1013
          Cycles: Map()
          cycles are Vector()
             stm: x1012, None
             stm: x1013, None
             stm: x1014, None
             stm: x1015, None
           - Latency:  2.0
           - Interval: 1.0 (1.0 bbox)
           - Iter Diff: None (from ArrayBuffer())
          x1811 = ParallelPipe(Set(),Block(Const(())))
            x1087 = UnitPipe(Set(b1006, b925, b914),Block(Const(())),None)
              x1049 = UnrolledForeach(Set(),x1024,Block(Const(())),List(List(b1025)),List(List(b1026)),None)
              Working on pipeLatencies of result Vector(Const(()), x1046, x1042, x1028, x1035, x1048, x1045), schedule Vector(x1027, x1028, x1829, x1830, x1797, x1031, x1032, x1798, x1034, x1035, x1831, x1036, x1037, x1038, x1039, x1799, x1041, x1042, x1832, x1043, x1833, x1044, x1045, x1834, x1835, x1046, x1836, x1837, x1047, x1048)
              Memories with both reads and writes in this scope: Set()
              Done finding cycles: Vector(), Map()
              Computing fullDFS: Const(())
              Computing fullDFS: x1046
              Computing fullDFS: x1044
              Computing fullDFS: x1799
              Computing fullDFS: x1038
              Computing fullDFS: x1037
              Computing fullDFS: x1036
              Computing fullDFS: x1034
              Computing fullDFS: x1797
              Computing fullDFS: x1027
              cur: x1027, inReduce: false, latency: 1.0
              Computing fullDFS: x1829
              Computing fullDFS: x1028
              cur: x1028, inReduce: false, latency: 0.0
              Computing fullDFS: x1830
              cur: x1830, inReduce: false, latency: 0.0
              Computing fullDFS: x1032
              Computing fullDFS: x1031
              Computing fullDFS: x1831
              Computing fullDFS: x1035
              cur: x1035, inReduce: false, latency: 0.0
              Computing fullDFS: x1833
              Computing fullDFS: x1043
              Computing fullDFS: x1041
              Computing fullDFS: x1798
              Computing fullDFS: x1832
              Computing fullDFS: x1042
              cur: x1042, inReduce: false, latency: 0.0
              Computing fullDFS: x1834
              Computing fullDFS: x1045
              cur: x1045, inReduce: false, latency: 0.0
              Computing fullDFS: x1835
              cur: x1835, inReduce: false, latency: 0.0
              Computing fullDFS: x1048
              Computing fullDFS: x1047
              Computing fullDFS: x1039
              Computing fullDFS: x1836
              Computing fullDFS: x1837
              Cycles: Map()
              cycles are Vector()
                 stm: x1027, None
                 stm: x1028, None
                 stm: x1829, None
                 stm: x1830, None
                 stm: x1797, None
                 stm: x1031, None
                 stm: x1032, None
                 stm: x1798, None
                 stm: x1034, None
                 stm: x1035, None
                 stm: x1831, None
                 stm: x1036, None
                 stm: x1037, None
                 stm: x1038, None
                 stm: x1039, None
                 stm: x1799, None
                 stm: x1041, None
                 stm: x1042, None
                 stm: x1832, None
                 stm: x1043, None
                 stm: x1833, None
                 stm: x1044, None
                 stm: x1045, None
                 stm: x1834, None
                 stm: x1835, None
                 stm: x1046, None
                 stm: x1836, None
                 stm: x1837, None
                 stm: x1047, None
                 stm: x1048, None
               - Latency:  11.8
               - Interval: 1.0 (1.0 bbox)
               - Iter Diff: None (from ArrayBuffer())
              x1086 = UnrolledForeach(Set(),x1052,Block(Const(())),List(List(b1053)),List(List(b1054)),None)
                x1066 = UnitPipe(Set(b1054),Block(Const(())),None)
                Working on pipeLatencies of result Vector(Const(()), x1063, x1058, x1061, x1065), schedule Vector(x1058, x1059, x1060, x1061, x1062, x1063, x1064, x1065)
                Memories with both reads and writes in this scope: Set()
                Done finding cycles: Vector(), Map()
                Computing fullDFS: Const(())
                Computing fullDFS: x1063
                Computing fullDFS: x1062
                Computing fullDFS: x1059
                Computing fullDFS: x1058
                cur: x1058, inReduce: false, latency: 0.0
                Computing fullDFS: x1061
                Computing fullDFS: x1060
                Computing fullDFS: x1065
                Computing fullDFS: x1064
                Cycles: Map()
                cycles are Vector()
                   stm: x1058, None
                   stm: x1059, None
                   stm: x1060, None
                   stm: x1061, None
                   stm: x1062, None
                   stm: x1063, None
                   stm: x1064, None
                   stm: x1065, None
                 - Latency:  1.0
                 - Interval: 1.0 (1.0 bbox)
                 - Iter Diff: None (from ArrayBuffer())
                x1085 = UnrolledForeach(Set(b1054),x1069,Block(Const(())),List(List(b1070)),List(List(b1071)),None)
                Working on pipeLatencies of result Vector(Const(()), x1078, x1072, x1074, x1084), schedule Vector(x1072, x1073, x1074, x1075, x1076, x1077, x1078, x1838, x1079, x1800, x1081, x1082, x1839, x1083, x1840, x1841, x1842, x1843, x1844, x1084)
                Memories with both reads and writes in this scope: Set()
                Done finding cycles: Vector(), Map()
                Computing fullDFS: Const(())
                Computing fullDFS: x1078
                cur: x1078, inReduce: false, latency: 1.0
                Computing fullDFS: x1072
                cur: x1072, inReduce: false, latency: 0.0
                Computing fullDFS: x1074
                cur: x1074, inReduce: false, latency: 0.0
                Computing fullDFS: x1084
                Computing fullDFS: x1083
                Computing fullDFS: x1082
                Computing fullDFS: x1077
                Computing fullDFS: x1839
                Computing fullDFS: x1081
                cur: x1081, inReduce: false, latency: 0.2
                Computing fullDFS: x1840
                Computing fullDFS: x1800
                Computing fullDFS: x1841
                Computing fullDFS: x1079
                Computing fullDFS: x1838
                Computing fullDFS: x1842
                cur: x1842, inReduce: false, latency: 0.0
                Computing fullDFS: x1843
                cur: x1843, inReduce: false, latency: 0.0
                Computing fullDFS: x1844
                Computing fullDFS: x1076
                Computing fullDFS: x1073
                Computing fullDFS: x1075
                Cycles: Map()
                cycles are Vector()
                   stm: x1072, None
                   stm: x1073, None
                   stm: x1074, None
                   stm: x1075, None
                   stm: x1076, None
                   stm: x1077, None
                   stm: x1078, None
                   stm: x1838, None
                   stm: x1079, None
                   stm: x1800, None
                   stm: x1081, None
                   stm: x1082, None
                   stm: x1839, None
                   stm: x1083, None
                   stm: x1840, None
                   stm: x1841, None
                   stm: x1842, None
                   stm: x1843, None
                   stm: x1844, None
                   stm: x1084, None
                 - Latency:  3.2
                 - Interval: 1.0 (1.0 bbox)
                 - Iter Diff: None (from ArrayBuffer())
               - Interval: 1.0
             - Interval: 11.8
            x1158 = UnitPipe(Set(b1006, b925, b914),Block(Const(())),None)
              x1117 = UnrolledForeach(Set(),x1092,Block(Const(())),List(List(b1093)),List(List(b1094)),None)
              Working on pipeLatencies of result Vector(Const(()), x1110, x1096, x1114, x1103, x1113, x1116), schedule Vector(x1095, x1096, x1845, x1846, x1801, x1099, x1100, x1802, x1102, x1103, x1847, x1104, x1105, x1106, x1107, x1803, x1109, x1110, x1848, x1111, x1849, x1112, x1113, x1850, x1851, x1114, x1852, x1853, x1115, x1116)
              Memories with both reads and writes in this scope: Set()
              Done finding cycles: Vector(), Map()
              Computing fullDFS: Const(())
              Computing fullDFS: x1110
              cur: x1110, inReduce: false, latency: 0.0
              Computing fullDFS: x1096
              cur: x1096, inReduce: false, latency: 0.0
              Computing fullDFS: x1114
              Computing fullDFS: x1112
              Computing fullDFS: x1803
              Computing fullDFS: x1106
              Computing fullDFS: x1105
              Computing fullDFS: x1104
              Computing fullDFS: x1102
              Computing fullDFS: x1801
              Computing fullDFS: x1095
              cur: x1095, inReduce: false, latency: 1.0
              Computing fullDFS: x1845
              Computing fullDFS: x1846
              cur: x1846, inReduce: false, latency: 0.0
              Computing fullDFS: x1100
              Computing fullDFS: x1099
              Computing fullDFS: x1847
              Computing fullDFS: x1103
              cur: x1103, inReduce: false, latency: 0.0
              Computing fullDFS: x1849
              Computing fullDFS: x1111
              Computing fullDFS: x1109
              Computing fullDFS: x1802
              Computing fullDFS: x1848
              Computing fullDFS: x1850
              cur: x1850, inReduce: false, latency: 0.0
              Computing fullDFS: x1851
              Computing fullDFS: x1113
              cur: x1113, inReduce: false, latency: 0.0
              Computing fullDFS: x1116
              Computing fullDFS: x1115
              Computing fullDFS: x1107
              Computing fullDFS: x1852
              Computing fullDFS: x1853
              Cycles: Map()
              cycles are Vector()
                 stm: x1095, None
                 stm: x1096, None
                 stm: x1845, None
                 stm: x1846, None
                 stm: x1801, None
                 stm: x1099, None
                 stm: x1100, None
                 stm: x1802, None
                 stm: x1102, None
                 stm: x1103, None
                 stm: x1847, None
                 stm: x1104, None
                 stm: x1105, None
                 stm: x1106, None
                 stm: x1107, None
                 stm: x1803, None
                 stm: x1109, None
                 stm: x1110, None
                 stm: x1848, None
                 stm: x1111, None
                 stm: x1849, None
                 stm: x1112, None
                 stm: x1113, None
                 stm: x1850, None
                 stm: x1851, None
                 stm: x1114, None
                 stm: x1852, None
                 stm: x1853, None
                 stm: x1115, None
                 stm: x1116, None
               - Latency:  11.8
               - Interval: 1.0 (1.0 bbox)
               - Iter Diff: None (from ArrayBuffer())
              x1157 = UnrolledForeach(Set(),x1120,Block(Const(())),List(List(b1121)),List(List(b1122)),None)
                x1134 = UnitPipe(Set(b1122),Block(Const(())),None)
                Working on pipeLatencies of result Vector(Const(()), x1131, x1126, x1133, x1129), schedule Vector(x1126, x1127, x1128, x1129, x1130, x1131, x1132, x1133)
                Memories with both reads and writes in this scope: Set()
                Done finding cycles: Vector(), Map()
                Computing fullDFS: Const(())
                Computing fullDFS: x1131
                Computing fullDFS: x1130
                Computing fullDFS: x1127
                Computing fullDFS: x1126
                cur: x1126, inReduce: false, latency: 0.0
                Computing fullDFS: x1133
                Computing fullDFS: x1132
                Computing fullDFS: x1129
                Computing fullDFS: x1128
                Cycles: Map()
                cycles are Vector()
                   stm: x1126, None
                   stm: x1127, None
                   stm: x1128, None
                   stm: x1129, None
                   stm: x1130, None
                   stm: x1131, None
                   stm: x1132, None
                   stm: x1133, None
                 - Latency:  1.0
                 - Interval: 1.0 (1.0 bbox)
                 - Iter Diff: None (from ArrayBuffer())
                x1156 = UnrolledForeach(Set(b1122),x1137,Block(Const(())),List(List(b1138)),List(List(b1139)),None)
                Working on pipeLatencies of result Vector(Const(()), x1142, x1155, x1146, x1154, x1140), schedule Vector(x1140, x1141, x1142, x1143, x1144, x1145, x1146, x1854, x1147, x1804, x1805, x1150, x1151, x1152, x1855, x1153, x1856, x1857, x1858, x1859, x1860, x1861, x1154, x1155)
                Memories with both reads and writes in this scope: Set()
                Done finding cycles: Vector(), Map()
                Computing fullDFS: Const(())
                Computing fullDFS: x1142
                cur: x1142, inReduce: false, latency: 0.0
                Computing fullDFS: x1155
                Computing fullDFS: x1153
                Computing fullDFS: x1152
                Computing fullDFS: x1145
                Computing fullDFS: x1140
                cur: x1140, inReduce: false, latency: 0.0
                Computing fullDFS: x1855
                Computing fullDFS: x1151
                Computing fullDFS: x1150
                cur: x1150, inReduce: false, latency: 0.2
                Computing fullDFS: x1856
                Computing fullDFS: x1147
                Computing fullDFS: x1854
                Computing fullDFS: x1146
                cur: x1146, inReduce: false, latency: 1.0
                Computing fullDFS: x1857
                Computing fullDFS: x1804
                cur: x1804, inReduce: false, latency: 0.2
                Computing fullDFS: x1858
                cur: x1858, inReduce: false, latency: 0.0
                Computing fullDFS: x1859
                Computing fullDFS: x1144
                Computing fullDFS: x1141
                Computing fullDFS: x1143
                Computing fullDFS: x1860
                cur: x1860, inReduce: false, latency: 0.0
                Computing fullDFS: x1861
                Computing fullDFS: x1805
                Computing fullDFS: x1154
                Cycles: Map()
                cycles are Vector()
                   stm: x1140, None
                   stm: x1141, None
                   stm: x1142, None
                   stm: x1143, None
                   stm: x1144, None
                   stm: x1145, None
                   stm: x1146, None
                   stm: x1854, None
                   stm: x1147, None
                   stm: x1804, None
                   stm: x1805, None
                   stm: x1150, None
                   stm: x1151, None
                   stm: x1152, None
                   stm: x1855, None
                   stm: x1153, None
                   stm: x1856, None
                   stm: x1857, None
                   stm: x1858, None
                   stm: x1859, None
                   stm: x1860, None
                   stm: x1861, None
                   stm: x1154, None
                   stm: x1155, None
                 - Latency:  3.2
                 - Interval: 1.0 (1.0 bbox)
                 - Iter Diff: None (from ArrayBuffer())
               - Interval: 1.0
             - Interval: 11.8
           - Interval: 11.8
          x1638 = UnrolledForeach(Set(b1006, b925, b914),x1160,Block(Const(())),List(List(b1161, b1162, b1163, b1164)),List(List(b1165, b1166, b1167, b1168)),None)
            x1637 = ParallelPipe(Set(b1006, b925, b914),Block(Const(())))
              x1294 = UnrolledForeach(Set(b1165, b1006, b925, b914),x1177,Block(Const(())),List(List(b1181, b1182, b1183, b1184)),List(List(b1185, b1186, b1187, b1188)),None)
                x1293 = ParallelPipe(Set(b1165, b1006, b925, b914),Block(Const(())))
                  x1223 = UnrolledForeach(Set(b925, b1006, b1185, b914, b1165),x1197,Block(Const(())),List(List(b1201)),List(List(b1202)),None)
                  Working on pipeLatencies of result Vector(Const(()), x1222, x1217, x1209, x1213, x1221), schedule Vector(x1205, x1206, x1207, x1208, x1862, x1863, x1864, x1865, x1866, x1867, x1868, x1209, x1210, x1211, x1212, x1869, x1870, x1871, x1872, x1873, x1874, x1213, x1214, x1215, x1216, x1217, x1218, x1219, x1220, x1875, x1876, x1877, x1878, x1879, x1880, x1881, x1221, x1222)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1209, x1222): Set()
                  NonConflictSets(x1209, x1222): Set()
                  Found Cycle: x1209, x1222
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1209,x1222)), Map(x1222 -> List(AccumTriple(x1018,x1209,x1222)), x1210 -> List(AccumTriple(x1018,x1209,x1222)), x1209 -> List(AccumTriple(x1018,x1209,x1222)), x1220 -> List(AccumTriple(x1018,x1209,x1222)))
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1222
                  Computing fullDFS: x1209
                  Computing fullDFS: x1862
                  cur: x1862, inReduce: false, latency: 0.0
                  Computing fullDFS: x1863
                  cur: x1863, inReduce: false, latency: 0.0
                  Computing fullDFS: x1864
                  cur: x1864, inReduce: false, latency: 0.0
                  Computing fullDFS: x1865
                  cur: x1865, inReduce: false, latency: 0.0
                  Computing fullDFS: x1866
                  Computing fullDFS: x1208
                  Computing fullDFS: x1206
                  Computing fullDFS: x1205
                  cur: x1205, inReduce: false, latency: 0.2
                  Computing fullDFS: x1207
                  cur: x1207, inReduce: false, latency: 0.2
                  Computing fullDFS: x1867
                  cur: x1867, inReduce: false, latency: 0.0
                  Computing fullDFS: x1868
                  cur: x1868, inReduce: false, latency: 0.0
                  Computing fullDFS: x1220
                  Computing fullDFS: x1210
                  Computing fullDFS: x1219
                  Computing fullDFS: x1214
                  Computing fullDFS: x1213
                  Computing fullDFS: x1212
                  Computing fullDFS: x1211
                  Computing fullDFS: x1869
                  cur: x1869, inReduce: false, latency: 0.0
                  Computing fullDFS: x1870
                  cur: x1870, inReduce: false, latency: 0.0
                  Computing fullDFS: x1871
                  cur: x1871, inReduce: false, latency: 0.0
                  Computing fullDFS: x1872
                  cur: x1872, inReduce: false, latency: 0.0
                  Computing fullDFS: x1873
                  cur: x1873, inReduce: false, latency: 0.0
                  Computing fullDFS: x1874
                  cur: x1874, inReduce: false, latency: 0.0
                  Computing fullDFS: x1218
                  Computing fullDFS: x1217
                  Computing fullDFS: x1216
                  Computing fullDFS: x1215
                  cur: x1215, inReduce: false, latency: 0.2
                  Computing fullDFS: x1875
                  cur: x1875, inReduce: false, latency: 0.0
                  Computing fullDFS: x1876
                  cur: x1876, inReduce: false, latency: 0.0
                  Computing fullDFS: x1877
                  cur: x1877, inReduce: false, latency: 0.0
                  Computing fullDFS: x1878
                  cur: x1878, inReduce: false, latency: 0.0
                  Computing fullDFS: x1879
                  Computing fullDFS: x1880
                  cur: x1880, inReduce: false, latency: 0.0
                  Computing fullDFS: x1881
                  cur: x1881, inReduce: false, latency: 0.0
                  Computing fullDFS: x1221
                  Cycle #0: write: x1222, cycle: x1209, x1209, x1210, x1220, x1222
                  Cycles: Map(x1222 -> Vector(x1209, x1209, x1210, x1220, x1222), x1210 -> Vector(x1209, x1210), x1209 -> List(x1209), x1221 -> Vector(x1209, x1210, x1220, x1221), x1220 -> Vector(x1209, x1210, x1220))
                  pseudo cycles for x1018:
                  Access: x1209 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,0,Vector(0),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,0,Vector(0),Vector(0)))
                  Pushing x1209 = SRAMBankedRead(x1018,Vector(List(Const(0), Const(0))),Vector(x1866),Vector(Set(x1867, x1864, x1863, x1868, x1865, x1862)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1222 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,0,Vector(0),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,0,Vector(0),Vector(0)))
                  Pushing x1222 = SRAMBankedWrite(x1018,Vector(x1220),Vector(List(Const(0), Const(0))),Vector(x1879),Vector(Set(x1875, x1878, x1877, x1881, x1876, x1880))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1209),x1018,1.0), AAACycle(Vector(x1222),x1018,1.0), WARCycle(x1209,x1222,x1018,Vector(x1209, x1209, x1210, x1220, x1222),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1205, None
                     stm: x1206, None
                     stm: x1207, None
                     stm: x1208, None
                     stm: x1862, None
                     stm: x1863, None
                     stm: x1864, None
                     stm: x1865, None
                     stm: x1866, None
                     stm: x1867, None
                     stm: x1868, None
                     stm: x1209, None
                     stm: x1210, None
                     stm: x1211, None
                     stm: x1212, None
                     stm: x1869, None
                     stm: x1870, None
                     stm: x1871, None
                     stm: x1872, None
                     stm: x1873, None
                     stm: x1874, None
                     stm: x1213, None
                     stm: x1214, None
                     stm: x1215, None
                     stm: x1216, None
                     stm: x1217, None
                     stm: x1218, None
                     stm: x1219, None
                     stm: x1220, None
                     stm: x1875, None
                     stm: x1876, None
                     stm: x1877, None
                     stm: x1878, None
                     stm: x1879, None
                     stm: x1880, None
                     stm: x1881, None
                     stm: x1221, None
                     stm: x1222, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                  x1246 = UnrolledForeach(Set(b925, b1006, b1186, b914, b1165),x1198,Block(Const(())),List(List(b1224)),List(List(b1225)),None)
                  Working on pipeLatencies of result Vector(Const(()), x1232, x1245, x1240, x1244, x1236), schedule Vector(x1228, x1229, x1230, x1231, x1882, x1883, x1884, x1885, x1886, x1887, x1888, x1232, x1233, x1234, x1235, x1889, x1890, x1891, x1892, x1893, x1894, x1236, x1237, x1238, x1239, x1240, x1241, x1242, x1243, x1895, x1896, x1897, x1898, x1899, x1900, x1901, x1244, x1245)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1232, x1245): Set()
                  NonConflictSets(x1232, x1245): Set()
                  Found Cycle: x1232, x1245
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1232,x1245)), Map(x1243 -> List(AccumTriple(x1018,x1232,x1245)), x1245 -> List(AccumTriple(x1018,x1232,x1245)), x1233 -> List(AccumTriple(x1018,x1232,x1245)), x1232 -> List(AccumTriple(x1018,x1232,x1245)))
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1232
                  Computing fullDFS: x1882
                  cur: x1882, inReduce: false, latency: 0.0
                  Computing fullDFS: x1883
                  cur: x1883, inReduce: false, latency: 0.0
                  Computing fullDFS: x1884
                  Computing fullDFS: x1231
                  Computing fullDFS: x1229
                  Computing fullDFS: x1228
                  cur: x1228, inReduce: false, latency: 0.2
                  Computing fullDFS: x1230
                  cur: x1230, inReduce: false, latency: 0.2
                  Computing fullDFS: x1885
                  cur: x1885, inReduce: false, latency: 0.0
                  Computing fullDFS: x1886
                  cur: x1886, inReduce: false, latency: 0.0
                  Computing fullDFS: x1887
                  cur: x1887, inReduce: false, latency: 0.0
                  Computing fullDFS: x1888
                  cur: x1888, inReduce: false, latency: 0.0
                  Computing fullDFS: x1245
                  Computing fullDFS: x1243
                  Computing fullDFS: x1233
                  Computing fullDFS: x1242
                  Computing fullDFS: x1237
                  Computing fullDFS: x1236
                  Computing fullDFS: x1235
                  Computing fullDFS: x1234
                  Computing fullDFS: x1889
                  cur: x1889, inReduce: false, latency: 0.0
                  Computing fullDFS: x1890
                  cur: x1890, inReduce: false, latency: 0.0
                  Computing fullDFS: x1891
                  cur: x1891, inReduce: false, latency: 0.0
                  Computing fullDFS: x1892
                  cur: x1892, inReduce: false, latency: 0.0
                  Computing fullDFS: x1893
                  cur: x1893, inReduce: false, latency: 0.0
                  Computing fullDFS: x1894
                  cur: x1894, inReduce: false, latency: 0.0
                  Computing fullDFS: x1241
                  Computing fullDFS: x1240
                  Computing fullDFS: x1239
                  Computing fullDFS: x1238
                  cur: x1238, inReduce: false, latency: 0.2
                  Computing fullDFS: x1895
                  cur: x1895, inReduce: false, latency: 0.0
                  Computing fullDFS: x1896
                  cur: x1896, inReduce: false, latency: 0.0
                  Computing fullDFS: x1897
                  Computing fullDFS: x1898
                  cur: x1898, inReduce: false, latency: 0.0
                  Computing fullDFS: x1899
                  cur: x1899, inReduce: false, latency: 0.0
                  Computing fullDFS: x1900
                  cur: x1900, inReduce: false, latency: 0.0
                  Computing fullDFS: x1901
                  cur: x1901, inReduce: false, latency: 0.0
                  Computing fullDFS: x1244
                  Cycle #0: write: x1245, cycle: x1232, x1232, x1233, x1243, x1245
                  Cycles: Map(x1243 -> Vector(x1232, x1233, x1243), x1245 -> Vector(x1232, x1232, x1233, x1243, x1245), x1233 -> Vector(x1232, x1233), x1232 -> List(x1232), x1244 -> Vector(x1232, x1233, x1243, x1244))
                  pseudo cycles for x1018:
                  Access: x1232 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,1,Vector(1),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,1,Vector(1),Vector(0)))
                  Pushing x1232 = SRAMBankedRead(x1018,Vector(List(Const(0), Const(1))),Vector(x1884),Vector(Set(x1882, x1887, x1886, x1883, x1888, x1885)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1245 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,1,Vector(1),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,1,Vector(1),Vector(0)))
                  Pushing x1245 = SRAMBankedWrite(x1018,Vector(x1243),Vector(List(Const(0), Const(1))),Vector(x1897),Vector(Set(x1899, x1896, x1900, x1895, x1901, x1898))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1232),x1018,1.0), AAACycle(Vector(x1245),x1018,1.0), WARCycle(x1232,x1245,x1018,Vector(x1232, x1232, x1233, x1243, x1245),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1228, None
                     stm: x1229, None
                     stm: x1230, None
                     stm: x1231, None
                     stm: x1882, None
                     stm: x1883, None
                     stm: x1884, None
                     stm: x1885, None
                     stm: x1886, None
                     stm: x1887, None
                     stm: x1888, None
                     stm: x1232, None
                     stm: x1233, None
                     stm: x1234, None
                     stm: x1235, None
                     stm: x1889, None
                     stm: x1890, None
                     stm: x1891, None
                     stm: x1892, None
                     stm: x1893, None
                     stm: x1894, None
                     stm: x1236, None
                     stm: x1237, None
                     stm: x1238, None
                     stm: x1239, None
                     stm: x1240, None
                     stm: x1241, None
                     stm: x1242, None
                     stm: x1243, None
                     stm: x1895, None
                     stm: x1896, None
                     stm: x1897, None
                     stm: x1898, None
                     stm: x1899, None
                     stm: x1900, None
                     stm: x1901, None
                     stm: x1244, None
                     stm: x1245, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                  x1269 = UnrolledForeach(Set(b925, b1006, b1187, b914, b1165),x1199,Block(Const(())),List(List(b1247)),List(List(b1248)),None)
                  Working on pipeLatencies of result Vector(Const(()), x1255, x1259, x1263, x1267, x1268), schedule Vector(x1251, x1252, x1253, x1254, x1902, x1903, x1904, x1905, x1906, x1907, x1908, x1255, x1256, x1257, x1258, x1909, x1910, x1911, x1912, x1913, x1914, x1259, x1260, x1261, x1262, x1263, x1264, x1265, x1266, x1915, x1916, x1917, x1918, x1919, x1920, x1921, x1267, x1268)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1255, x1268): Set()
                  NonConflictSets(x1255, x1268): Set()
                  Found Cycle: x1255, x1268
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1255,x1268)), Map(x1255 -> List(AccumTriple(x1018,x1255,x1268)), x1266 -> List(AccumTriple(x1018,x1255,x1268)), x1268 -> List(AccumTriple(x1018,x1255,x1268)), x1256 -> List(AccumTriple(x1018,x1255,x1268)))
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1255
                  Computing fullDFS: x1902
                  Computing fullDFS: x1254
                  Computing fullDFS: x1252
                  Computing fullDFS: x1251
                  cur: x1251, inReduce: false, latency: 0.2
                  Computing fullDFS: x1253
                  cur: x1253, inReduce: false, latency: 0.2
                  Computing fullDFS: x1903
                  cur: x1903, inReduce: false, latency: 0.0
                  Computing fullDFS: x1904
                  cur: x1904, inReduce: false, latency: 0.0
                  Computing fullDFS: x1905
                  cur: x1905, inReduce: false, latency: 0.0
                  Computing fullDFS: x1906
                  cur: x1906, inReduce: false, latency: 0.0
                  Computing fullDFS: x1907
                  cur: x1907, inReduce: false, latency: 0.0
                  Computing fullDFS: x1908
                  cur: x1908, inReduce: false, latency: 0.0
                  Computing fullDFS: x1259
                  Computing fullDFS: x1258
                  Computing fullDFS: x1257
                  Computing fullDFS: x1909
                  cur: x1909, inReduce: false, latency: 0.0
                  Computing fullDFS: x1910
                  cur: x1910, inReduce: false, latency: 0.0
                  Computing fullDFS: x1911
                  cur: x1911, inReduce: false, latency: 0.0
                  Computing fullDFS: x1912
                  cur: x1912, inReduce: false, latency: 0.0
                  Computing fullDFS: x1913
                  cur: x1913, inReduce: false, latency: 0.0
                  Computing fullDFS: x1914
                  cur: x1914, inReduce: false, latency: 0.0
                  Computing fullDFS: x1263
                  Computing fullDFS: x1262
                  Computing fullDFS: x1261
                  cur: x1261, inReduce: false, latency: 0.2
                  Computing fullDFS: x1267
                  Computing fullDFS: x1266
                  Computing fullDFS: x1256
                  Computing fullDFS: x1265
                  Computing fullDFS: x1260
                  Computing fullDFS: x1264
                  Computing fullDFS: x1915
                  Computing fullDFS: x1916
                  cur: x1916, inReduce: false, latency: 0.0
                  Computing fullDFS: x1917
                  cur: x1917, inReduce: false, latency: 0.0
                  Computing fullDFS: x1918
                  cur: x1918, inReduce: false, latency: 0.0
                  Computing fullDFS: x1919
                  cur: x1919, inReduce: false, latency: 0.0
                  Computing fullDFS: x1920
                  cur: x1920, inReduce: false, latency: 0.0
                  Computing fullDFS: x1921
                  cur: x1921, inReduce: false, latency: 0.0
                  Computing fullDFS: x1268
                  Cycle #0: write: x1268, cycle: x1255, x1255, x1256, x1266, x1268
                  Cycles: Map(x1255 -> List(x1255), x1267 -> Vector(x1255, x1256, x1266, x1267), x1266 -> Vector(x1255, x1256, x1266), x1268 -> Vector(x1255, x1255, x1256, x1266, x1268), x1256 -> Vector(x1255, x1256))
                  pseudo cycles for x1018:
                  Access: x1255 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,2,Vector(2),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,2,Vector(2),Vector(0)))
                  Pushing x1255 = SRAMBankedRead(x1018,Vector(List(Const(0), Const(2))),Vector(x1902),Vector(Set(x1904, x1907, x1906, x1905, x1903, x1908)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1268 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,2,Vector(2),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,2,Vector(2),Vector(0)))
                  Pushing x1268 = SRAMBankedWrite(x1018,Vector(x1266),Vector(List(Const(0), Const(2))),Vector(x1915),Vector(Set(x1919, x1921, x1920, x1916, x1918, x1917))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1255),x1018,1.0), AAACycle(Vector(x1268),x1018,1.0), WARCycle(x1255,x1268,x1018,Vector(x1255, x1255, x1256, x1266, x1268),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1251, None
                     stm: x1252, None
                     stm: x1253, None
                     stm: x1254, None
                     stm: x1902, None
                     stm: x1903, None
                     stm: x1904, None
                     stm: x1905, None
                     stm: x1906, None
                     stm: x1907, None
                     stm: x1908, None
                     stm: x1255, None
                     stm: x1256, None
                     stm: x1257, None
                     stm: x1258, None
                     stm: x1909, None
                     stm: x1910, None
                     stm: x1911, None
                     stm: x1912, None
                     stm: x1913, None
                     stm: x1914, None
                     stm: x1259, None
                     stm: x1260, None
                     stm: x1261, None
                     stm: x1262, None
                     stm: x1263, None
                     stm: x1264, None
                     stm: x1265, None
                     stm: x1266, None
                     stm: x1915, None
                     stm: x1916, None
                     stm: x1917, None
                     stm: x1918, None
                     stm: x1919, None
                     stm: x1920, None
                     stm: x1921, None
                     stm: x1267, None
                     stm: x1268, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                  x1292 = UnrolledForeach(Set(b925, b1006, b1188, b914, b1165),x1200,Block(Const(())),List(List(b1270)),List(List(b1271)),None)
                  Working on pipeLatencies of result Vector(Const(()), x1290, x1291, x1286, x1278, x1282), schedule Vector(x1274, x1275, x1276, x1277, x1922, x1923, x1924, x1925, x1926, x1927, x1928, x1278, x1279, x1280, x1281, x1929, x1930, x1931, x1932, x1933, x1934, x1282, x1283, x1284, x1285, x1286, x1287, x1288, x1289, x1935, x1936, x1937, x1938, x1939, x1940, x1941, x1290, x1291)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1278, x1291): Set()
                  NonConflictSets(x1278, x1291): Set()
                  Found Cycle: x1278, x1291
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1278,x1291)), Map(x1291 -> List(AccumTriple(x1018,x1278,x1291)), x1279 -> List(AccumTriple(x1018,x1278,x1291)), x1278 -> List(AccumTriple(x1018,x1278,x1291)), x1289 -> List(AccumTriple(x1018,x1278,x1291)))
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1290
                  Computing fullDFS: x1289
                  Computing fullDFS: x1279
                  Computing fullDFS: x1278
                  Computing fullDFS: x1922
                  cur: x1922, inReduce: false, latency: 0.0
                  Computing fullDFS: x1923
                  cur: x1923, inReduce: false, latency: 0.0
                  Computing fullDFS: x1924
                  cur: x1924, inReduce: false, latency: 0.0
                  Computing fullDFS: x1925
                  Computing fullDFS: x1277
                  Computing fullDFS: x1275
                  Computing fullDFS: x1274
                  cur: x1274, inReduce: false, latency: 0.2
                  Computing fullDFS: x1276
                  cur: x1276, inReduce: false, latency: 0.2
                  Computing fullDFS: x1926
                  cur: x1926, inReduce: false, latency: 0.0
                  Computing fullDFS: x1927
                  cur: x1927, inReduce: false, latency: 0.0
                  Computing fullDFS: x1928
                  cur: x1928, inReduce: false, latency: 0.0
                  Computing fullDFS: x1288
                  Computing fullDFS: x1283
                  Computing fullDFS: x1282
                  Computing fullDFS: x1281
                  Computing fullDFS: x1280
                  Computing fullDFS: x1929
                  cur: x1929, inReduce: false, latency: 0.0
                  Computing fullDFS: x1930
                  cur: x1930, inReduce: false, latency: 0.0
                  Computing fullDFS: x1931
                  cur: x1931, inReduce: false, latency: 0.0
                  Computing fullDFS: x1932
                  cur: x1932, inReduce: false, latency: 0.0
                  Computing fullDFS: x1933
                  cur: x1933, inReduce: false, latency: 0.0
                  Computing fullDFS: x1934
                  cur: x1934, inReduce: false, latency: 0.0
                  Computing fullDFS: x1287
                  Computing fullDFS: x1286
                  Computing fullDFS: x1285
                  Computing fullDFS: x1284
                  cur: x1284, inReduce: false, latency: 0.2
                  Computing fullDFS: x1935
                  cur: x1935, inReduce: false, latency: 0.0
                  Computing fullDFS: x1936
                  cur: x1936, inReduce: false, latency: 0.0
                  Computing fullDFS: x1937
                  cur: x1937, inReduce: false, latency: 0.0
                  Computing fullDFS: x1938
                  Computing fullDFS: x1939
                  cur: x1939, inReduce: false, latency: 0.0
                  Computing fullDFS: x1940
                  cur: x1940, inReduce: false, latency: 0.0
                  Computing fullDFS: x1941
                  cur: x1941, inReduce: false, latency: 0.0
                  Computing fullDFS: x1291
                  Cycle #0: write: x1291, cycle: x1278, x1278, x1279, x1289, x1291
                  Cycles: Map(x1291 -> Vector(x1278, x1278, x1279, x1289, x1291), x1279 -> Vector(x1278, x1279), x1278 -> List(x1278), x1290 -> Vector(x1278, x1279, x1289, x1290), x1289 -> Vector(x1278, x1279, x1289))
                  pseudo cycles for x1018:
                  Access: x1278 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,3,Vector(3),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,3,Vector(3),Vector(0)))
                  Pushing x1278 = SRAMBankedRead(x1018,Vector(List(Const(0), Const(3))),Vector(x1925),Vector(Set(x1924, x1922, x1928, x1927, x1926, x1923)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1291 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,3,Vector(3),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,3,Vector(3),Vector(0)))
                  Pushing x1291 = SRAMBankedWrite(x1018,Vector(x1289),Vector(List(Const(0), Const(3))),Vector(x1938),Vector(Set(x1939, x1935, x1936, x1937, x1941, x1940))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1278),x1018,1.0), AAACycle(Vector(x1291),x1018,1.0), WARCycle(x1278,x1291,x1018,Vector(x1278, x1278, x1279, x1289, x1291),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1274, None
                     stm: x1275, None
                     stm: x1276, None
                     stm: x1277, None
                     stm: x1922, None
                     stm: x1923, None
                     stm: x1924, None
                     stm: x1925, None
                     stm: x1926, None
                     stm: x1927, None
                     stm: x1928, None
                     stm: x1278, None
                     stm: x1279, None
                     stm: x1280, None
                     stm: x1281, None
                     stm: x1929, None
                     stm: x1930, None
                     stm: x1931, None
                     stm: x1932, None
                     stm: x1933, None
                     stm: x1934, None
                     stm: x1282, None
                     stm: x1283, None
                     stm: x1284, None
                     stm: x1285, None
                     stm: x1286, None
                     stm: x1287, None
                     stm: x1288, None
                     stm: x1289, None
                     stm: x1935, None
                     stm: x1936, None
                     stm: x1937, None
                     stm: x1938, None
                     stm: x1939, None
                     stm: x1940, None
                     stm: x1941, None
                     stm: x1290, None
                     stm: x1291, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                 - Interval: 4.0
               - Interval: 4.0
              x1408 = UnrolledForeach(Set(b1166, b1006, b925, b914),x1178,Block(Const(())),List(List(b1295, b1296, b1297, b1298)),List(List(b1299, b1300, b1301, b1302)),None)
                x1407 = ParallelPipe(Set(b1166, b1006, b925, b914),Block(Const(())))
                  x1337 = UnrolledForeach(Set(b925, b1006, b1166, b914, b1299),x1311,Block(Const(())),List(List(b1315)),List(List(b1316)),None)
                  Working on pipeLatencies of result Vector(Const(()), x1327, x1323, x1336, x1335, x1331), schedule Vector(x1319, x1320, x1321, x1322, x1942, x1943, x1944, x1945, x1946, x1947, x1948, x1323, x1324, x1325, x1326, x1949, x1950, x1951, x1952, x1953, x1954, x1327, x1328, x1329, x1330, x1331, x1332, x1333, x1334, x1955, x1956, x1957, x1958, x1959, x1960, x1961, x1335, x1336)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1323, x1336): Set()
                  NonConflictSets(x1323, x1336): Set()
                  Found Cycle: x1323, x1336
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1323,x1336)), Map(x1324 -> List(AccumTriple(x1018,x1323,x1336)), x1336 -> List(AccumTriple(x1018,x1323,x1336)), x1323 -> List(AccumTriple(x1018,x1323,x1336)), x1334 -> List(AccumTriple(x1018,x1323,x1336)))
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1327
                  Computing fullDFS: x1326
                  Computing fullDFS: x1325
                  Computing fullDFS: x1319
                  cur: x1319, inReduce: false, latency: 0.2
                  Computing fullDFS: x1949
                  cur: x1949, inReduce: false, latency: 0.0
                  Computing fullDFS: x1950
                  cur: x1950, inReduce: false, latency: 0.0
                  Computing fullDFS: x1951
                  cur: x1951, inReduce: false, latency: 0.0
                  Computing fullDFS: x1952
                  cur: x1952, inReduce: false, latency: 0.0
                  Computing fullDFS: x1953
                  cur: x1953, inReduce: false, latency: 0.0
                  Computing fullDFS: x1954
                  cur: x1954, inReduce: false, latency: 0.0
                  Computing fullDFS: x1323
                  Computing fullDFS: x1942
                  Computing fullDFS: x1322
                  Computing fullDFS: x1320
                  Computing fullDFS: x1321
                  cur: x1321, inReduce: false, latency: 0.2
                  Computing fullDFS: x1943
                  cur: x1943, inReduce: false, latency: 0.0
                  Computing fullDFS: x1944
                  cur: x1944, inReduce: false, latency: 0.0
                  Computing fullDFS: x1945
                  cur: x1945, inReduce: false, latency: 0.0
                  Computing fullDFS: x1946
                  cur: x1946, inReduce: false, latency: 0.0
                  Computing fullDFS: x1947
                  cur: x1947, inReduce: false, latency: 0.0
                  Computing fullDFS: x1948
                  cur: x1948, inReduce: false, latency: 0.0
                  Computing fullDFS: x1336
                  Computing fullDFS: x1334
                  Computing fullDFS: x1324
                  Computing fullDFS: x1333
                  Computing fullDFS: x1328
                  Computing fullDFS: x1332
                  Computing fullDFS: x1331
                  Computing fullDFS: x1330
                  Computing fullDFS: x1329
                  cur: x1329, inReduce: false, latency: 0.2
                  Computing fullDFS: x1955
                  Computing fullDFS: x1956
                  cur: x1956, inReduce: false, latency: 0.0
                  Computing fullDFS: x1957
                  cur: x1957, inReduce: false, latency: 0.0
                  Computing fullDFS: x1958
                  cur: x1958, inReduce: false, latency: 0.0
                  Computing fullDFS: x1959
                  cur: x1959, inReduce: false, latency: 0.0
                  Computing fullDFS: x1960
                  cur: x1960, inReduce: false, latency: 0.0
                  Computing fullDFS: x1961
                  cur: x1961, inReduce: false, latency: 0.0
                  Computing fullDFS: x1335
                  Cycle #0: write: x1336, cycle: x1323, x1323, x1324, x1334, x1336
                  Cycles: Map(x1324 -> Vector(x1323, x1324), x1336 -> Vector(x1323, x1323, x1324, x1334, x1336), x1323 -> List(x1323), x1335 -> Vector(x1323, x1324, x1334, x1335), x1334 -> Vector(x1323, x1324, x1334))
                  pseudo cycles for x1018:
                  Access: x1323 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,4,Vector(4),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,4,Vector(4),Vector(0)))
                  Pushing x1323 = SRAMBankedRead(x1018,Vector(List(Const(1), Const(0))),Vector(x1942),Vector(Set(x1946, x1943, x1947, x1948, x1944, x1945)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1336 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,4,Vector(4),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,4,Vector(4),Vector(0)))
                  Pushing x1336 = SRAMBankedWrite(x1018,Vector(x1334),Vector(List(Const(1), Const(0))),Vector(x1955),Vector(Set(x1956, x1960, x1959, x1958, x1961, x1957))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1323),x1018,1.0), AAACycle(Vector(x1336),x1018,1.0), WARCycle(x1323,x1336,x1018,Vector(x1323, x1323, x1324, x1334, x1336),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1319, None
                     stm: x1320, None
                     stm: x1321, None
                     stm: x1322, None
                     stm: x1942, None
                     stm: x1943, None
                     stm: x1944, None
                     stm: x1945, None
                     stm: x1946, None
                     stm: x1947, None
                     stm: x1948, None
                     stm: x1323, None
                     stm: x1324, None
                     stm: x1325, None
                     stm: x1326, None
                     stm: x1949, None
                     stm: x1950, None
                     stm: x1951, None
                     stm: x1952, None
                     stm: x1953, None
                     stm: x1954, None
                     stm: x1327, None
                     stm: x1328, None
                     stm: x1329, None
                     stm: x1330, None
                     stm: x1331, None
                     stm: x1332, None
                     stm: x1333, None
                     stm: x1334, None
                     stm: x1955, None
                     stm: x1956, None
                     stm: x1957, None
                     stm: x1958, None
                     stm: x1959, None
                     stm: x1960, None
                     stm: x1961, None
                     stm: x1335, None
                     stm: x1336, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                  x1360 = UnrolledForeach(Set(b925, b1006, b1166, b1300, b914),x1312,Block(Const(())),List(List(b1338)),List(List(b1339)),None)
                  Working on pipeLatencies of result Vector(Const(()), x1354, x1359, x1350, x1358, x1346), schedule Vector(x1342, x1343, x1344, x1345, x1962, x1963, x1964, x1965, x1966, x1967, x1968, x1346, x1347, x1348, x1349, x1969, x1970, x1971, x1972, x1973, x1974, x1350, x1351, x1352, x1353, x1354, x1355, x1356, x1357, x1975, x1976, x1977, x1978, x1979, x1980, x1981, x1358, x1359)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1346, x1359): Set()
                  NonConflictSets(x1346, x1359): Set()
                  Found Cycle: x1346, x1359
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1346,x1359)), Map(x1357 -> List(AccumTriple(x1018,x1346,x1359)), x1347 -> List(AccumTriple(x1018,x1346,x1359)), x1359 -> List(AccumTriple(x1018,x1346,x1359)), x1346 -> List(AccumTriple(x1018,x1346,x1359)))
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1354
                  Computing fullDFS: x1969
                  cur: x1969, inReduce: false, latency: 0.0
                  Computing fullDFS: x1970
                  cur: x1970, inReduce: false, latency: 0.0
                  Computing fullDFS: x1971
                  cur: x1971, inReduce: false, latency: 0.0
                  Computing fullDFS: x1972
                  cur: x1972, inReduce: false, latency: 0.0
                  Computing fullDFS: x1973
                  cur: x1973, inReduce: false, latency: 0.0
                  Computing fullDFS: x1974
                  cur: x1974, inReduce: false, latency: 0.0
                  Computing fullDFS: x1353
                  Computing fullDFS: x1344
                  cur: x1344, inReduce: false, latency: 0.2
                  Computing fullDFS: x1352
                  cur: x1352, inReduce: false, latency: 0.2
                  Computing fullDFS: x1359
                  Computing fullDFS: x1346
                  Computing fullDFS: x1962
                  Computing fullDFS: x1345
                  Computing fullDFS: x1343
                  Computing fullDFS: x1342
                  cur: x1342, inReduce: false, latency: 0.2
                  Computing fullDFS: x1963
                  cur: x1963, inReduce: false, latency: 0.0
                  Computing fullDFS: x1964
                  cur: x1964, inReduce: false, latency: 0.0
                  Computing fullDFS: x1965
                  cur: x1965, inReduce: false, latency: 0.0
                  Computing fullDFS: x1966
                  cur: x1966, inReduce: false, latency: 0.0
                  Computing fullDFS: x1967
                  cur: x1967, inReduce: false, latency: 0.0
                  Computing fullDFS: x1968
                  cur: x1968, inReduce: false, latency: 0.0
                  Computing fullDFS: x1357
                  Computing fullDFS: x1347
                  Computing fullDFS: x1356
                  Computing fullDFS: x1351
                  Computing fullDFS: x1350
                  Computing fullDFS: x1349
                  Computing fullDFS: x1348
                  Computing fullDFS: x1355
                  Computing fullDFS: x1975
                  Computing fullDFS: x1976
                  cur: x1976, inReduce: false, latency: 0.0
                  Computing fullDFS: x1977
                  cur: x1977, inReduce: false, latency: 0.0
                  Computing fullDFS: x1978
                  cur: x1978, inReduce: false, latency: 0.0
                  Computing fullDFS: x1979
                  cur: x1979, inReduce: false, latency: 0.0
                  Computing fullDFS: x1980
                  cur: x1980, inReduce: false, latency: 0.0
                  Computing fullDFS: x1981
                  cur: x1981, inReduce: false, latency: 0.0
                  Computing fullDFS: x1358
                  Cycle #0: write: x1359, cycle: x1346, x1346, x1347, x1357, x1359
                  Cycles: Map(x1357 -> Vector(x1346, x1347, x1357), x1347 -> Vector(x1346, x1347), x1359 -> Vector(x1346, x1346, x1347, x1357, x1359), x1346 -> List(x1346), x1358 -> Vector(x1346, x1347, x1357, x1358))
                  pseudo cycles for x1018:
                  Access: x1346 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,5,Vector(5),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,5,Vector(5),Vector(0)))
                  Pushing x1346 = SRAMBankedRead(x1018,Vector(List(Const(1), Const(1))),Vector(x1962),Vector(Set(x1967, x1963, x1968, x1964, x1965, x1966)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1359 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,5,Vector(5),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,5,Vector(5),Vector(0)))
                  Pushing x1359 = SRAMBankedWrite(x1018,Vector(x1357),Vector(List(Const(1), Const(1))),Vector(x1975),Vector(Set(x1978, x1979, x1980, x1981, x1977, x1976))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1346),x1018,1.0), AAACycle(Vector(x1359),x1018,1.0), WARCycle(x1346,x1359,x1018,Vector(x1346, x1346, x1347, x1357, x1359),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1342, None
                     stm: x1343, None
                     stm: x1344, None
                     stm: x1345, None
                     stm: x1962, None
                     stm: x1963, None
                     stm: x1964, None
                     stm: x1965, None
                     stm: x1966, None
                     stm: x1967, None
                     stm: x1968, None
                     stm: x1346, None
                     stm: x1347, None
                     stm: x1348, None
                     stm: x1349, None
                     stm: x1969, None
                     stm: x1970, None
                     stm: x1971, None
                     stm: x1972, None
                     stm: x1973, None
                     stm: x1974, None
                     stm: x1350, None
                     stm: x1351, None
                     stm: x1352, None
                     stm: x1353, None
                     stm: x1354, None
                     stm: x1355, None
                     stm: x1356, None
                     stm: x1357, None
                     stm: x1975, None
                     stm: x1976, None
                     stm: x1977, None
                     stm: x1978, None
                     stm: x1979, None
                     stm: x1980, None
                     stm: x1981, None
                     stm: x1358, None
                     stm: x1359, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                  x1383 = UnrolledForeach(Set(b925, b1006, b1301, b1166, b914),x1313,Block(Const(())),List(List(b1361)),List(List(b1362)),None)
                  Working on pipeLatencies of result Vector(x1369, Const(()), x1373, x1377, x1382, x1381), schedule Vector(x1365, x1366, x1367, x1368, x1982, x1983, x1984, x1985, x1986, x1987, x1988, x1369, x1370, x1371, x1372, x1989, x1990, x1991, x1992, x1993, x1994, x1373, x1374, x1375, x1376, x1377, x1378, x1379, x1380, x1995, x1996, x1997, x1998, x1999, x2000, x2001, x1381, x1382)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1369, x1382): Set()
                  NonConflictSets(x1369, x1382): Set()
                  Found Cycle: x1369, x1382
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1369,x1382)), Map(x1369 -> List(AccumTriple(x1018,x1369,x1382)), x1380 -> List(AccumTriple(x1018,x1369,x1382)), x1370 -> List(AccumTriple(x1018,x1369,x1382)), x1382 -> List(AccumTriple(x1018,x1369,x1382)))
                  Computing fullDFS: x1369
                  Computing fullDFS: x1982
                  cur: x1982, inReduce: false, latency: 0.0
                  Computing fullDFS: x1983
                  cur: x1983, inReduce: false, latency: 0.0
                  Computing fullDFS: x1984
                  cur: x1984, inReduce: false, latency: 0.0
                  Computing fullDFS: x1985
                  cur: x1985, inReduce: false, latency: 0.0
                  Computing fullDFS: x1986
                  cur: x1986, inReduce: false, latency: 0.0
                  Computing fullDFS: x1987
                  Computing fullDFS: x1368
                  Computing fullDFS: x1366
                  Computing fullDFS: x1365
                  cur: x1365, inReduce: false, latency: 0.2
                  Computing fullDFS: x1367
                  cur: x1367, inReduce: false, latency: 0.2
                  Computing fullDFS: x1988
                  cur: x1988, inReduce: false, latency: 0.0
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1373
                  Computing fullDFS: x1372
                  Computing fullDFS: x1371
                  Computing fullDFS: x1989
                  cur: x1989, inReduce: false, latency: 0.0
                  Computing fullDFS: x1990
                  cur: x1990, inReduce: false, latency: 0.0
                  Computing fullDFS: x1991
                  cur: x1991, inReduce: false, latency: 0.0
                  Computing fullDFS: x1992
                  cur: x1992, inReduce: false, latency: 0.0
                  Computing fullDFS: x1993
                  cur: x1993, inReduce: false, latency: 0.0
                  Computing fullDFS: x1994
                  cur: x1994, inReduce: false, latency: 0.0
                  Computing fullDFS: x1377
                  Computing fullDFS: x1376
                  Computing fullDFS: x1375
                  cur: x1375, inReduce: false, latency: 0.2
                  Computing fullDFS: x1382
                  Computing fullDFS: x1380
                  Computing fullDFS: x1370
                  Computing fullDFS: x1379
                  Computing fullDFS: x1374
                  Computing fullDFS: x1378
                  Computing fullDFS: x1995
                  cur: x1995, inReduce: false, latency: 0.0
                  Computing fullDFS: x1996
                  cur: x1996, inReduce: false, latency: 0.0
                  Computing fullDFS: x1997
                  cur: x1997, inReduce: false, latency: 0.0
                  Computing fullDFS: x1998
                  cur: x1998, inReduce: false, latency: 0.0
                  Computing fullDFS: x1999
                  cur: x1999, inReduce: false, latency: 0.0
                  Computing fullDFS: x2000
                  Computing fullDFS: x2001
                  cur: x2001, inReduce: false, latency: 0.0
                  Computing fullDFS: x1381
                  Cycle #0: write: x1382, cycle: x1369, x1369, x1370, x1380, x1382
                  Cycles: Map(x1369 -> List(x1369), x1381 -> Vector(x1369, x1370, x1380, x1381), x1380 -> Vector(x1369, x1370, x1380), x1370 -> Vector(x1369, x1370), x1382 -> Vector(x1369, x1369, x1370, x1380, x1382))
                  pseudo cycles for x1018:
                  Access: x1369 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,6,Vector(6),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,6,Vector(6),Vector(0)))
                  Pushing x1369 = SRAMBankedRead(x1018,Vector(List(Const(1), Const(2))),Vector(x1987),Vector(Set(x1982, x1988, x1985, x1983, x1984, x1986)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1382 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,6,Vector(6),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,6,Vector(6),Vector(0)))
                  Pushing x1382 = SRAMBankedWrite(x1018,Vector(x1380),Vector(List(Const(1), Const(2))),Vector(x2000),Vector(Set(x1995, x1999, x1996, x2001, x1997, x1998))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1369),x1018,1.0), AAACycle(Vector(x1382),x1018,1.0), WARCycle(x1369,x1382,x1018,Vector(x1369, x1369, x1370, x1380, x1382),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1365, None
                     stm: x1366, None
                     stm: x1367, None
                     stm: x1368, None
                     stm: x1982, None
                     stm: x1983, None
                     stm: x1984, None
                     stm: x1985, None
                     stm: x1986, None
                     stm: x1987, None
                     stm: x1988, None
                     stm: x1369, None
                     stm: x1370, None
                     stm: x1371, None
                     stm: x1372, None
                     stm: x1989, None
                     stm: x1990, None
                     stm: x1991, None
                     stm: x1992, None
                     stm: x1993, None
                     stm: x1994, None
                     stm: x1373, None
                     stm: x1374, None
                     stm: x1375, None
                     stm: x1376, None
                     stm: x1377, None
                     stm: x1378, None
                     stm: x1379, None
                     stm: x1380, None
                     stm: x1995, None
                     stm: x1996, None
                     stm: x1997, None
                     stm: x1998, None
                     stm: x1999, None
                     stm: x2000, None
                     stm: x2001, None
                     stm: x1381, None
                     stm: x1382, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                  x1406 = UnrolledForeach(Set(b1302, b925, b1006, b1166, b914),x1314,Block(Const(())),List(List(b1384)),List(List(b1385)),None)
                  Working on pipeLatencies of result Vector(Const(()), x1405, x1392, x1396, x1400, x1404), schedule Vector(x1388, x1389, x1390, x1391, x2002, x2003, x2004, x2005, x2006, x2007, x2008, x1392, x1393, x1394, x1395, x2009, x2010, x2011, x2012, x2013, x2014, x1396, x1397, x1398, x1399, x1400, x1401, x1402, x1403, x2015, x2016, x2017, x2018, x2019, x2020, x2021, x1404, x1405)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1392, x1405): Set()
                  NonConflictSets(x1392, x1405): Set()
                  Found Cycle: x1392, x1405
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1392,x1405)), Map(x1393 -> List(AccumTriple(x1018,x1392,x1405)), x1405 -> List(AccumTriple(x1018,x1392,x1405)), x1392 -> List(AccumTriple(x1018,x1392,x1405)), x1403 -> List(AccumTriple(x1018,x1392,x1405)))
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1405
                  Computing fullDFS: x1392
                  Computing fullDFS: x2002
                  Computing fullDFS: x1391
                  Computing fullDFS: x1389
                  Computing fullDFS: x1388
                  cur: x1388, inReduce: false, latency: 0.2
                  Computing fullDFS: x1390
                  cur: x1390, inReduce: false, latency: 0.2
                  Computing fullDFS: x2003
                  cur: x2003, inReduce: false, latency: 0.0
                  Computing fullDFS: x2004
                  cur: x2004, inReduce: false, latency: 0.0
                  Computing fullDFS: x2005
                  cur: x2005, inReduce: false, latency: 0.0
                  Computing fullDFS: x2006
                  cur: x2006, inReduce: false, latency: 0.0
                  Computing fullDFS: x2007
                  cur: x2007, inReduce: false, latency: 0.0
                  Computing fullDFS: x2008
                  cur: x2008, inReduce: false, latency: 0.0
                  Computing fullDFS: x1403
                  Computing fullDFS: x1393
                  Computing fullDFS: x1402
                  Computing fullDFS: x1397
                  Computing fullDFS: x1396
                  Computing fullDFS: x1395
                  Computing fullDFS: x1394
                  Computing fullDFS: x2009
                  cur: x2009, inReduce: false, latency: 0.0
                  Computing fullDFS: x2010
                  cur: x2010, inReduce: false, latency: 0.0
                  Computing fullDFS: x2011
                  cur: x2011, inReduce: false, latency: 0.0
                  Computing fullDFS: x2012
                  cur: x2012, inReduce: false, latency: 0.0
                  Computing fullDFS: x2013
                  cur: x2013, inReduce: false, latency: 0.0
                  Computing fullDFS: x2014
                  cur: x2014, inReduce: false, latency: 0.0
                  Computing fullDFS: x1401
                  Computing fullDFS: x1400
                  Computing fullDFS: x1399
                  Computing fullDFS: x1398
                  cur: x1398, inReduce: false, latency: 0.2
                  Computing fullDFS: x2015
                  Computing fullDFS: x2016
                  cur: x2016, inReduce: false, latency: 0.0
                  Computing fullDFS: x2017
                  cur: x2017, inReduce: false, latency: 0.0
                  Computing fullDFS: x2018
                  cur: x2018, inReduce: false, latency: 0.0
                  Computing fullDFS: x2019
                  cur: x2019, inReduce: false, latency: 0.0
                  Computing fullDFS: x2020
                  cur: x2020, inReduce: false, latency: 0.0
                  Computing fullDFS: x2021
                  cur: x2021, inReduce: false, latency: 0.0
                  Computing fullDFS: x1404
                  Cycle #0: write: x1405, cycle: x1392, x1392, x1393, x1403, x1405
                  Cycles: Map(x1393 -> Vector(x1392, x1393), x1405 -> Vector(x1392, x1392, x1393, x1403, x1405), x1392 -> List(x1392), x1404 -> Vector(x1392, x1393, x1403, x1404), x1403 -> Vector(x1392, x1393, x1403))
                  pseudo cycles for x1018:
                  Access: x1392 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,7,Vector(7),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,7,Vector(7),Vector(0)))
                  Pushing x1392 = SRAMBankedRead(x1018,Vector(List(Const(1), Const(3))),Vector(x2002),Vector(Set(x2007, x2006, x2005, x2004, x2003, x2008)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1405 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,7,Vector(7),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,7,Vector(7),Vector(0)))
                  Pushing x1405 = SRAMBankedWrite(x1018,Vector(x1403),Vector(List(Const(1), Const(3))),Vector(x2015),Vector(Set(x2020, x2017, x2016, x2019, x2021, x2018))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1392),x1018,1.0), AAACycle(Vector(x1405),x1018,1.0), WARCycle(x1392,x1405,x1018,Vector(x1392, x1392, x1393, x1403, x1405),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1388, None
                     stm: x1389, None
                     stm: x1390, None
                     stm: x1391, None
                     stm: x2002, None
                     stm: x2003, None
                     stm: x2004, None
                     stm: x2005, None
                     stm: x2006, None
                     stm: x2007, None
                     stm: x2008, None
                     stm: x1392, None
                     stm: x1393, None
                     stm: x1394, None
                     stm: x1395, None
                     stm: x2009, None
                     stm: x2010, None
                     stm: x2011, None
                     stm: x2012, None
                     stm: x2013, None
                     stm: x2014, None
                     stm: x1396, None
                     stm: x1397, None
                     stm: x1398, None
                     stm: x1399, None
                     stm: x1400, None
                     stm: x1401, None
                     stm: x1402, None
                     stm: x1403, None
                     stm: x2015, None
                     stm: x2016, None
                     stm: x2017, None
                     stm: x2018, None
                     stm: x2019, None
                     stm: x2020, None
                     stm: x2021, None
                     stm: x1404, None
                     stm: x1405, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                 - Interval: 4.0
               - Interval: 4.0
              x1522 = UnrolledForeach(Set(b1167, b1006, b925, b914),x1179,Block(Const(())),List(List(b1409, b1410, b1411, b1412)),List(List(b1413, b1414, b1415, b1416)),None)
                x1521 = ParallelPipe(Set(b1167, b1006, b925, b914),Block(Const(())))
                  x1451 = UnrolledForeach(Set(b925, b1006, b1167, b1413, b914),x1425,Block(Const(())),List(List(b1429)),List(List(b1430)),None)
                  Working on pipeLatencies of result Vector(Const(()), x1437, x1441, x1450, x1445, x1449), schedule Vector(x1433, x1434, x1435, x1436, x2022, x2023, x2024, x2025, x2026, x2027, x2028, x1437, x1438, x1439, x1440, x2029, x2030, x2031, x2032, x2033, x2034, x1441, x1442, x1443, x1444, x1445, x1446, x1447, x1448, x2035, x2036, x2037, x2038, x2039, x2040, x2041, x1449, x1450)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1437, x1450): Set()
                  NonConflictSets(x1437, x1450): Set()
                  Found Cycle: x1437, x1450
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1437,x1450)), Map(x1438 -> List(AccumTriple(x1018,x1437,x1450)), x1450 -> List(AccumTriple(x1018,x1437,x1450)), x1437 -> List(AccumTriple(x1018,x1437,x1450)), x1448 -> List(AccumTriple(x1018,x1437,x1450)))
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1437
                  Computing fullDFS: x2022
                  cur: x2022, inReduce: false, latency: 0.0
                  Computing fullDFS: x2023
                  cur: x2023, inReduce: false, latency: 0.0
                  Computing fullDFS: x2024
                  cur: x2024, inReduce: false, latency: 0.0
                  Computing fullDFS: x2025
                  cur: x2025, inReduce: false, latency: 0.0
                  Computing fullDFS: x2026
                  cur: x2026, inReduce: false, latency: 0.0
                  Computing fullDFS: x2027
                  cur: x2027, inReduce: false, latency: 0.0
                  Computing fullDFS: x2028
                  Computing fullDFS: x1436
                  Computing fullDFS: x1434
                  Computing fullDFS: x1433
                  cur: x1433, inReduce: false, latency: 0.2
                  Computing fullDFS: x1435
                  cur: x1435, inReduce: false, latency: 0.2
                  Computing fullDFS: x1441
                  Computing fullDFS: x1440
                  Computing fullDFS: x1439
                  Computing fullDFS: x2029
                  cur: x2029, inReduce: false, latency: 0.0
                  Computing fullDFS: x2030
                  cur: x2030, inReduce: false, latency: 0.0
                  Computing fullDFS: x2031
                  cur: x2031, inReduce: false, latency: 0.0
                  Computing fullDFS: x2032
                  cur: x2032, inReduce: false, latency: 0.0
                  Computing fullDFS: x2033
                  cur: x2033, inReduce: false, latency: 0.0
                  Computing fullDFS: x2034
                  cur: x2034, inReduce: false, latency: 0.0
                  Computing fullDFS: x1450
                  Computing fullDFS: x1448
                  Computing fullDFS: x1438
                  Computing fullDFS: x1447
                  Computing fullDFS: x1442
                  Computing fullDFS: x1446
                  Computing fullDFS: x1445
                  Computing fullDFS: x1444
                  Computing fullDFS: x1443
                  cur: x1443, inReduce: false, latency: 0.2
                  Computing fullDFS: x2035
                  cur: x2035, inReduce: false, latency: 0.0
                  Computing fullDFS: x2036
                  cur: x2036, inReduce: false, latency: 0.0
                  Computing fullDFS: x2037
                  cur: x2037, inReduce: false, latency: 0.0
                  Computing fullDFS: x2038
                  cur: x2038, inReduce: false, latency: 0.0
                  Computing fullDFS: x2039
                  cur: x2039, inReduce: false, latency: 0.0
                  Computing fullDFS: x2040
                  cur: x2040, inReduce: false, latency: 0.0
                  Computing fullDFS: x2041
                  Computing fullDFS: x1449
                  Cycle #0: write: x1450, cycle: x1437, x1437, x1438, x1448, x1450
                  Cycles: Map(x1438 -> Vector(x1437, x1438), x1450 -> Vector(x1437, x1437, x1438, x1448, x1450), x1449 -> Vector(x1437, x1438, x1448, x1449), x1437 -> List(x1437), x1448 -> Vector(x1437, x1438, x1448))
                  pseudo cycles for x1018:
                  Access: x1437 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,8,Vector(8),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,8,Vector(8),Vector(0)))
                  Pushing x1437 = SRAMBankedRead(x1018,Vector(List(Const(2), Const(0))),Vector(x2028),Vector(Set(x2024, x2027, x2023, x2025, x2022, x2026)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1450 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,8,Vector(8),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,8,Vector(8),Vector(0)))
                  Pushing x1450 = SRAMBankedWrite(x1018,Vector(x1448),Vector(List(Const(2), Const(0))),Vector(x2041),Vector(Set(x2035, x2039, x2038, x2037, x2036, x2040))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1437),x1018,1.0), AAACycle(Vector(x1450),x1018,1.0), WARCycle(x1437,x1450,x1018,Vector(x1437, x1437, x1438, x1448, x1450),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1433, None
                     stm: x1434, None
                     stm: x1435, None
                     stm: x1436, None
                     stm: x2022, None
                     stm: x2023, None
                     stm: x2024, None
                     stm: x2025, None
                     stm: x2026, None
                     stm: x2027, None
                     stm: x2028, None
                     stm: x1437, None
                     stm: x1438, None
                     stm: x1439, None
                     stm: x1440, None
                     stm: x2029, None
                     stm: x2030, None
                     stm: x2031, None
                     stm: x2032, None
                     stm: x2033, None
                     stm: x2034, None
                     stm: x1441, None
                     stm: x1442, None
                     stm: x1443, None
                     stm: x1444, None
                     stm: x1445, None
                     stm: x1446, None
                     stm: x1447, None
                     stm: x1448, None
                     stm: x2035, None
                     stm: x2036, None
                     stm: x2037, None
                     stm: x2038, None
                     stm: x2039, None
                     stm: x2040, None
                     stm: x2041, None
                     stm: x1449, None
                     stm: x1450, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                  x1474 = UnrolledForeach(Set(b925, b1006, b1414, b1167, b914),x1426,Block(Const(())),List(List(b1452)),List(List(b1453)),None)
                  Working on pipeLatencies of result Vector(Const(()), x1464, x1460, x1472, x1473, x1468), schedule Vector(x1456, x1457, x1458, x1459, x2042, x2043, x2044, x2045, x2046, x2047, x2048, x1460, x1461, x1462, x1463, x2049, x2050, x2051, x2052, x2053, x2054, x1464, x1465, x1466, x1467, x1468, x1469, x1470, x1471, x2055, x2056, x2057, x2058, x2059, x2060, x2061, x1472, x1473)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1460, x1473): Set()
                  NonConflictSets(x1460, x1473): Set()
                  Found Cycle: x1460, x1473
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1460,x1473)), Map(x1461 -> List(AccumTriple(x1018,x1460,x1473)), x1473 -> List(AccumTriple(x1018,x1460,x1473)), x1460 -> List(AccumTriple(x1018,x1460,x1473)), x1471 -> List(AccumTriple(x1018,x1460,x1473)))
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1464
                  Computing fullDFS: x1463
                  Computing fullDFS: x1462
                  Computing fullDFS: x1456
                  cur: x1456, inReduce: false, latency: 0.2
                  Computing fullDFS: x2049
                  cur: x2049, inReduce: false, latency: 0.0
                  Computing fullDFS: x2050
                  cur: x2050, inReduce: false, latency: 0.0
                  Computing fullDFS: x2051
                  cur: x2051, inReduce: false, latency: 0.0
                  Computing fullDFS: x2052
                  cur: x2052, inReduce: false, latency: 0.0
                  Computing fullDFS: x2053
                  cur: x2053, inReduce: false, latency: 0.0
                  Computing fullDFS: x2054
                  cur: x2054, inReduce: false, latency: 0.0
                  Computing fullDFS: x1460
                  Computing fullDFS: x2042
                  cur: x2042, inReduce: false, latency: 0.0
                  Computing fullDFS: x2043
                  cur: x2043, inReduce: false, latency: 0.0
                  Computing fullDFS: x2044
                  cur: x2044, inReduce: false, latency: 0.0
                  Computing fullDFS: x2045
                  cur: x2045, inReduce: false, latency: 0.0
                  Computing fullDFS: x2046
                  Computing fullDFS: x1459
                  Computing fullDFS: x1457
                  Computing fullDFS: x1458
                  cur: x1458, inReduce: false, latency: 0.2
                  Computing fullDFS: x2047
                  cur: x2047, inReduce: false, latency: 0.0
                  Computing fullDFS: x2048
                  cur: x2048, inReduce: false, latency: 0.0
                  Computing fullDFS: x1472
                  Computing fullDFS: x1471
                  Computing fullDFS: x1461
                  Computing fullDFS: x1470
                  Computing fullDFS: x1465
                  Computing fullDFS: x1469
                  Computing fullDFS: x1468
                  Computing fullDFS: x1467
                  Computing fullDFS: x1466
                  cur: x1466, inReduce: false, latency: 0.2
                  Computing fullDFS: x2055
                  cur: x2055, inReduce: false, latency: 0.0
                  Computing fullDFS: x2056
                  cur: x2056, inReduce: false, latency: 0.0
                  Computing fullDFS: x2057
                  cur: x2057, inReduce: false, latency: 0.0
                  Computing fullDFS: x2058
                  cur: x2058, inReduce: false, latency: 0.0
                  Computing fullDFS: x2059
                  Computing fullDFS: x2060
                  cur: x2060, inReduce: false, latency: 0.0
                  Computing fullDFS: x2061
                  cur: x2061, inReduce: false, latency: 0.0
                  Computing fullDFS: x1473
                  Cycle #0: write: x1473, cycle: x1460, x1460, x1461, x1471, x1473
                  Cycles: Map(x1461 -> Vector(x1460, x1461), x1473 -> Vector(x1460, x1460, x1461, x1471, x1473), x1472 -> Vector(x1460, x1461, x1471, x1472), x1460 -> List(x1460), x1471 -> Vector(x1460, x1461, x1471))
                  pseudo cycles for x1018:
                  Access: x1460 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,9,Vector(9),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,9,Vector(9),Vector(0)))
                  Pushing x1460 = SRAMBankedRead(x1018,Vector(List(Const(2), Const(1))),Vector(x2046),Vector(Set(x2042, x2047, x2043, x2048, x2044, x2045)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1473 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,9,Vector(9),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,9,Vector(9),Vector(0)))
                  Pushing x1473 = SRAMBankedWrite(x1018,Vector(x1471),Vector(List(Const(2), Const(1))),Vector(x2059),Vector(Set(x2058, x2061, x2057, x2055, x2060, x2056))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1460),x1018,1.0), AAACycle(Vector(x1473),x1018,1.0), WARCycle(x1460,x1473,x1018,Vector(x1460, x1460, x1461, x1471, x1473),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1456, None
                     stm: x1457, None
                     stm: x1458, None
                     stm: x1459, None
                     stm: x2042, None
                     stm: x2043, None
                     stm: x2044, None
                     stm: x2045, None
                     stm: x2046, None
                     stm: x2047, None
                     stm: x2048, None
                     stm: x1460, None
                     stm: x1461, None
                     stm: x1462, None
                     stm: x1463, None
                     stm: x2049, None
                     stm: x2050, None
                     stm: x2051, None
                     stm: x2052, None
                     stm: x2053, None
                     stm: x2054, None
                     stm: x1464, None
                     stm: x1465, None
                     stm: x1466, None
                     stm: x1467, None
                     stm: x1468, None
                     stm: x1469, None
                     stm: x1470, None
                     stm: x1471, None
                     stm: x2055, None
                     stm: x2056, None
                     stm: x2057, None
                     stm: x2058, None
                     stm: x2059, None
                     stm: x2060, None
                     stm: x2061, None
                     stm: x1472, None
                     stm: x1473, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                  x1497 = UnrolledForeach(Set(b1415, b925, b1006, b1167, b914),x1427,Block(Const(())),List(List(b1475)),List(List(b1476)),None)
                  Working on pipeLatencies of result Vector(Const(()), x1487, x1483, x1496, x1491, x1495), schedule Vector(x1479, x1480, x1481, x1482, x2062, x2063, x2064, x2065, x2066, x2067, x2068, x1483, x1484, x1485, x1486, x2069, x2070, x2071, x2072, x2073, x2074, x1487, x1488, x1489, x1490, x1491, x1492, x1493, x1494, x2075, x2076, x2077, x2078, x2079, x2080, x2081, x1495, x1496)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1483, x1496): Set()
                  NonConflictSets(x1483, x1496): Set()
                  Found Cycle: x1483, x1496
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1483,x1496)), Map(x1483 -> List(AccumTriple(x1018,x1483,x1496)), x1494 -> List(AccumTriple(x1018,x1483,x1496)), x1484 -> List(AccumTriple(x1018,x1483,x1496)), x1496 -> List(AccumTriple(x1018,x1483,x1496)))
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1487
                  Computing fullDFS: x1486
                  Computing fullDFS: x1485
                  Computing fullDFS: x1479
                  cur: x1479, inReduce: false, latency: 0.2
                  Computing fullDFS: x2069
                  cur: x2069, inReduce: false, latency: 0.0
                  Computing fullDFS: x2070
                  cur: x2070, inReduce: false, latency: 0.0
                  Computing fullDFS: x2071
                  cur: x2071, inReduce: false, latency: 0.0
                  Computing fullDFS: x2072
                  cur: x2072, inReduce: false, latency: 0.0
                  Computing fullDFS: x2073
                  cur: x2073, inReduce: false, latency: 0.0
                  Computing fullDFS: x2074
                  cur: x2074, inReduce: false, latency: 0.0
                  Computing fullDFS: x1483
                  Computing fullDFS: x2062
                  Computing fullDFS: x1482
                  Computing fullDFS: x1480
                  Computing fullDFS: x1481
                  cur: x1481, inReduce: false, latency: 0.2
                  Computing fullDFS: x2063
                  cur: x2063, inReduce: false, latency: 0.0
                  Computing fullDFS: x2064
                  cur: x2064, inReduce: false, latency: 0.0
                  Computing fullDFS: x2065
                  cur: x2065, inReduce: false, latency: 0.0
                  Computing fullDFS: x2066
                  cur: x2066, inReduce: false, latency: 0.0
                  Computing fullDFS: x2067
                  cur: x2067, inReduce: false, latency: 0.0
                  Computing fullDFS: x2068
                  cur: x2068, inReduce: false, latency: 0.0
                  Computing fullDFS: x1496
                  Computing fullDFS: x1494
                  Computing fullDFS: x1484
                  Computing fullDFS: x1493
                  Computing fullDFS: x1488
                  Computing fullDFS: x1492
                  Computing fullDFS: x1491
                  Computing fullDFS: x1490
                  Computing fullDFS: x1489
                  cur: x1489, inReduce: false, latency: 0.2
                  Computing fullDFS: x2075
                  Computing fullDFS: x2076
                  cur: x2076, inReduce: false, latency: 0.0
                  Computing fullDFS: x2077
                  cur: x2077, inReduce: false, latency: 0.0
                  Computing fullDFS: x2078
                  cur: x2078, inReduce: false, latency: 0.0
                  Computing fullDFS: x2079
                  cur: x2079, inReduce: false, latency: 0.0
                  Computing fullDFS: x2080
                  cur: x2080, inReduce: false, latency: 0.0
                  Computing fullDFS: x2081
                  cur: x2081, inReduce: false, latency: 0.0
                  Computing fullDFS: x1495
                  Cycle #0: write: x1496, cycle: x1483, x1483, x1484, x1494, x1496
                  Cycles: Map(x1483 -> List(x1483), x1494 -> Vector(x1483, x1484, x1494), x1484 -> Vector(x1483, x1484), x1496 -> Vector(x1483, x1483, x1484, x1494, x1496), x1495 -> Vector(x1483, x1484, x1494, x1495))
                  pseudo cycles for x1018:
                  Access: x1483 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,10,Vector(10),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,10,Vector(10),Vector(0)))
                  Pushing x1483 = SRAMBankedRead(x1018,Vector(List(Const(2), Const(2))),Vector(x2062),Vector(Set(x2067, x2068, x2065, x2064, x2066, x2063)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1496 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,10,Vector(10),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,10,Vector(10),Vector(0)))
                  Pushing x1496 = SRAMBankedWrite(x1018,Vector(x1494),Vector(List(Const(2), Const(2))),Vector(x2075),Vector(Set(x2077, x2080, x2076, x2079, x2078, x2081))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1483),x1018,1.0), AAACycle(Vector(x1496),x1018,1.0), WARCycle(x1483,x1496,x1018,Vector(x1483, x1483, x1484, x1494, x1496),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1479, None
                     stm: x1480, None
                     stm: x1481, None
                     stm: x1482, None
                     stm: x2062, None
                     stm: x2063, None
                     stm: x2064, None
                     stm: x2065, None
                     stm: x2066, None
                     stm: x2067, None
                     stm: x2068, None
                     stm: x1483, None
                     stm: x1484, None
                     stm: x1485, None
                     stm: x1486, None
                     stm: x2069, None
                     stm: x2070, None
                     stm: x2071, None
                     stm: x2072, None
                     stm: x2073, None
                     stm: x2074, None
                     stm: x1487, None
                     stm: x1488, None
                     stm: x1489, None
                     stm: x1490, None
                     stm: x1491, None
                     stm: x1492, None
                     stm: x1493, None
                     stm: x1494, None
                     stm: x2075, None
                     stm: x2076, None
                     stm: x2077, None
                     stm: x2078, None
                     stm: x2079, None
                     stm: x2080, None
                     stm: x2081, None
                     stm: x1495, None
                     stm: x1496, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                  x1520 = UnrolledForeach(Set(b925, b1006, b1167, b914, b1416),x1428,Block(Const(())),List(List(b1498)),List(List(b1499)),None)
                  Working on pipeLatencies of result Vector(Const(()), x1518, x1514, x1519, x1510, x1506), schedule Vector(x1502, x1503, x1504, x1505, x2082, x2083, x2084, x2085, x2086, x2087, x2088, x1506, x1507, x1508, x1509, x2089, x2090, x2091, x2092, x2093, x2094, x1510, x1511, x1512, x1513, x1514, x1515, x1516, x1517, x2095, x2096, x2097, x2098, x2099, x2100, x2101, x1518, x1519)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1506, x1519): Set()
                  NonConflictSets(x1506, x1519): Set()
                  Found Cycle: x1506, x1519
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1506,x1519)), Map(x1519 -> List(AccumTriple(x1018,x1506,x1519)), x1506 -> List(AccumTriple(x1018,x1506,x1519)), x1517 -> List(AccumTriple(x1018,x1506,x1519)), x1507 -> List(AccumTriple(x1018,x1506,x1519)))
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1518
                  Computing fullDFS: x1517
                  Computing fullDFS: x1507
                  Computing fullDFS: x1506
                  Computing fullDFS: x2082
                  cur: x2082, inReduce: false, latency: 0.0
                  Computing fullDFS: x2083
                  cur: x2083, inReduce: false, latency: 0.0
                  Computing fullDFS: x2084
                  cur: x2084, inReduce: false, latency: 0.0
                  Computing fullDFS: x2085
                  cur: x2085, inReduce: false, latency: 0.0
                  Computing fullDFS: x2086
                  cur: x2086, inReduce: false, latency: 0.0
                  Computing fullDFS: x2087
                  Computing fullDFS: x1505
                  Computing fullDFS: x1503
                  Computing fullDFS: x1502
                  cur: x1502, inReduce: false, latency: 0.2
                  Computing fullDFS: x1504
                  cur: x1504, inReduce: false, latency: 0.2
                  Computing fullDFS: x2088
                  cur: x2088, inReduce: false, latency: 0.0
                  Computing fullDFS: x1516
                  Computing fullDFS: x1511
                  Computing fullDFS: x1510
                  Computing fullDFS: x1509
                  Computing fullDFS: x1508
                  Computing fullDFS: x2089
                  cur: x2089, inReduce: false, latency: 0.0
                  Computing fullDFS: x2090
                  cur: x2090, inReduce: false, latency: 0.0
                  Computing fullDFS: x2091
                  cur: x2091, inReduce: false, latency: 0.0
                  Computing fullDFS: x2092
                  cur: x2092, inReduce: false, latency: 0.0
                  Computing fullDFS: x2093
                  cur: x2093, inReduce: false, latency: 0.0
                  Computing fullDFS: x2094
                  cur: x2094, inReduce: false, latency: 0.0
                  Computing fullDFS: x1515
                  Computing fullDFS: x1514
                  Computing fullDFS: x1513
                  Computing fullDFS: x1512
                  cur: x1512, inReduce: false, latency: 0.2
                  Computing fullDFS: x2095
                  cur: x2095, inReduce: false, latency: 0.0
                  Computing fullDFS: x2096
                  cur: x2096, inReduce: false, latency: 0.0
                  Computing fullDFS: x2097
                  cur: x2097, inReduce: false, latency: 0.0
                  Computing fullDFS: x2098
                  cur: x2098, inReduce: false, latency: 0.0
                  Computing fullDFS: x2099
                  cur: x2099, inReduce: false, latency: 0.0
                  Computing fullDFS: x2100
                  Computing fullDFS: x2101
                  cur: x2101, inReduce: false, latency: 0.0
                  Computing fullDFS: x1519
                  Cycle #0: write: x1519, cycle: x1506, x1506, x1507, x1517, x1519
                  Cycles: Map(x1519 -> Vector(x1506, x1506, x1507, x1517, x1519), x1518 -> Vector(x1506, x1507, x1517, x1518), x1506 -> List(x1506), x1517 -> Vector(x1506, x1507, x1517), x1507 -> Vector(x1506, x1507))
                  pseudo cycles for x1018:
                  Access: x1506 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,11,Vector(11),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,11,Vector(11),Vector(0)))
                  Pushing x1506 = SRAMBankedRead(x1018,Vector(List(Const(2), Const(3))),Vector(x2087),Vector(Set(x2082, x2083, x2085, x2084, x2086, x2088)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1519 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,11,Vector(11),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,11,Vector(11),Vector(0)))
                  Pushing x1519 = SRAMBankedWrite(x1018,Vector(x1517),Vector(List(Const(2), Const(3))),Vector(x2100),Vector(Set(x2099, x2097, x2101, x2096, x2098, x2095))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1506),x1018,1.0), AAACycle(Vector(x1519),x1018,1.0), WARCycle(x1506,x1519,x1018,Vector(x1506, x1506, x1507, x1517, x1519),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1502, None
                     stm: x1503, None
                     stm: x1504, None
                     stm: x1505, None
                     stm: x2082, None
                     stm: x2083, None
                     stm: x2084, None
                     stm: x2085, None
                     stm: x2086, None
                     stm: x2087, None
                     stm: x2088, None
                     stm: x1506, None
                     stm: x1507, None
                     stm: x1508, None
                     stm: x1509, None
                     stm: x2089, None
                     stm: x2090, None
                     stm: x2091, None
                     stm: x2092, None
                     stm: x2093, None
                     stm: x2094, None
                     stm: x1510, None
                     stm: x1511, None
                     stm: x1512, None
                     stm: x1513, None
                     stm: x1514, None
                     stm: x1515, None
                     stm: x1516, None
                     stm: x1517, None
                     stm: x2095, None
                     stm: x2096, None
                     stm: x2097, None
                     stm: x2098, None
                     stm: x2099, None
                     stm: x2100, None
                     stm: x2101, None
                     stm: x1518, None
                     stm: x1519, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                 - Interval: 4.0
               - Interval: 4.0
              x1636 = UnrolledForeach(Set(b1168, b1006, b925, b914),x1180,Block(Const(())),List(List(b1523, b1524, b1525, b1526)),List(List(b1527, b1528, b1529, b1530)),None)
                x1635 = ParallelPipe(Set(b1168, b1006, b925, b914),Block(Const(())))
                  x1565 = UnrolledForeach(Set(b1168, b925, b1006, b914, b1527),x1539,Block(Const(())),List(List(b1543)),List(List(b1544)),None)
                  Working on pipeLatencies of result Vector(x1559, Const(()), x1564, x1555, x1563, x1551), schedule Vector(x1547, x1548, x1549, x1550, x2102, x2103, x2104, x2105, x2106, x2107, x2108, x1551, x1552, x1553, x1554, x2109, x2110, x2111, x2112, x2113, x2114, x1555, x1556, x1557, x1558, x1559, x1560, x1561, x1562, x2115, x2116, x2117, x2118, x2119, x2120, x2121, x1563, x1564)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1551, x1564): Set()
                  NonConflictSets(x1551, x1564): Set()
                  Found Cycle: x1551, x1564
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1551,x1564)), Map(x1551 -> List(AccumTriple(x1018,x1551,x1564)), x1562 -> List(AccumTriple(x1018,x1551,x1564)), x1564 -> List(AccumTriple(x1018,x1551,x1564)), x1552 -> List(AccumTriple(x1018,x1551,x1564)))
                  Computing fullDFS: x1559
                  Computing fullDFS: x2109
                  cur: x2109, inReduce: false, latency: 0.0
                  Computing fullDFS: x2110
                  cur: x2110, inReduce: false, latency: 0.0
                  Computing fullDFS: x2111
                  cur: x2111, inReduce: false, latency: 0.0
                  Computing fullDFS: x2112
                  cur: x2112, inReduce: false, latency: 0.0
                  Computing fullDFS: x2113
                  cur: x2113, inReduce: false, latency: 0.0
                  Computing fullDFS: x2114
                  cur: x2114, inReduce: false, latency: 0.0
                  Computing fullDFS: x1558
                  Computing fullDFS: x1549
                  cur: x1549, inReduce: false, latency: 0.2
                  Computing fullDFS: x1557
                  cur: x1557, inReduce: false, latency: 0.2
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1564
                  Computing fullDFS: x1551
                  Computing fullDFS: x2102
                  cur: x2102, inReduce: false, latency: 0.0
                  Computing fullDFS: x2103
                  cur: x2103, inReduce: false, latency: 0.0
                  Computing fullDFS: x2104
                  cur: x2104, inReduce: false, latency: 0.0
                  Computing fullDFS: x2105
                  cur: x2105, inReduce: false, latency: 0.0
                  Computing fullDFS: x2106
                  cur: x2106, inReduce: false, latency: 0.0
                  Computing fullDFS: x2107
                  cur: x2107, inReduce: false, latency: 0.0
                  Computing fullDFS: x2108
                  Computing fullDFS: x1550
                  Computing fullDFS: x1548
                  Computing fullDFS: x1547
                  cur: x1547, inReduce: false, latency: 0.2
                  Computing fullDFS: x1562
                  Computing fullDFS: x1552
                  Computing fullDFS: x1561
                  Computing fullDFS: x1556
                  Computing fullDFS: x1555
                  Computing fullDFS: x1554
                  Computing fullDFS: x1553
                  Computing fullDFS: x1560
                  Computing fullDFS: x2115
                  cur: x2115, inReduce: false, latency: 0.0
                  Computing fullDFS: x2116
                  cur: x2116, inReduce: false, latency: 0.0
                  Computing fullDFS: x2117
                  cur: x2117, inReduce: false, latency: 0.0
                  Computing fullDFS: x2118
                  cur: x2118, inReduce: false, latency: 0.0
                  Computing fullDFS: x2119
                  cur: x2119, inReduce: false, latency: 0.0
                  Computing fullDFS: x2120
                  cur: x2120, inReduce: false, latency: 0.0
                  Computing fullDFS: x2121
                  Computing fullDFS: x1563
                  Cycle #0: write: x1564, cycle: x1551, x1551, x1552, x1562, x1564
                  Cycles: Map(x1563 -> Vector(x1551, x1552, x1562, x1563), x1551 -> List(x1551), x1562 -> Vector(x1551, x1552, x1562), x1564 -> Vector(x1551, x1551, x1552, x1562, x1564), x1552 -> Vector(x1551, x1552))
                  pseudo cycles for x1018:
                  Access: x1551 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,12,Vector(12),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,12,Vector(12),Vector(0)))
                  Pushing x1551 = SRAMBankedRead(x1018,Vector(List(Const(3), Const(0))),Vector(x2108),Vector(Set(x2104, x2105, x2103, x2107, x2102, x2106)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1564 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,12,Vector(12),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,12,Vector(12),Vector(0)))
                  Pushing x1564 = SRAMBankedWrite(x1018,Vector(x1562),Vector(List(Const(3), Const(0))),Vector(x2121),Vector(Set(x2117, x2118, x2115, x2119, x2116, x2120))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1551),x1018,1.0), AAACycle(Vector(x1564),x1018,1.0), WARCycle(x1551,x1564,x1018,Vector(x1551, x1551, x1552, x1562, x1564),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1547, None
                     stm: x1548, None
                     stm: x1549, None
                     stm: x1550, None
                     stm: x2102, None
                     stm: x2103, None
                     stm: x2104, None
                     stm: x2105, None
                     stm: x2106, None
                     stm: x2107, None
                     stm: x2108, None
                     stm: x1551, None
                     stm: x1552, None
                     stm: x1553, None
                     stm: x1554, None
                     stm: x2109, None
                     stm: x2110, None
                     stm: x2111, None
                     stm: x2112, None
                     stm: x2113, None
                     stm: x2114, None
                     stm: x1555, None
                     stm: x1556, None
                     stm: x1557, None
                     stm: x1558, None
                     stm: x1559, None
                     stm: x1560, None
                     stm: x1561, None
                     stm: x1562, None
                     stm: x2115, None
                     stm: x2116, None
                     stm: x2117, None
                     stm: x2118, None
                     stm: x2119, None
                     stm: x2120, None
                     stm: x2121, None
                     stm: x1563, None
                     stm: x1564, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                  x1588 = UnrolledForeach(Set(b1168, b925, b1006, b1528, b914),x1540,Block(Const(())),List(List(b1566)),List(List(b1567)),None)
                  Working on pipeLatencies of result Vector(x1586, Const(()), x1587, x1574, x1578, x1582), schedule Vector(x1570, x1571, x1572, x1573, x2122, x2123, x2124, x2125, x2126, x2127, x2128, x1574, x1575, x1576, x1577, x2129, x2130, x2131, x2132, x2133, x2134, x1578, x1579, x1580, x1581, x1582, x1583, x1584, x1585, x2135, x2136, x2137, x2138, x2139, x2140, x2141, x1586, x1587)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1574, x1587): Set()
                  NonConflictSets(x1574, x1587): Set()
                  Found Cycle: x1574, x1587
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1574,x1587)), Map(x1587 -> List(AccumTriple(x1018,x1574,x1587)), x1575 -> List(AccumTriple(x1018,x1574,x1587)), x1574 -> List(AccumTriple(x1018,x1574,x1587)), x1585 -> List(AccumTriple(x1018,x1574,x1587)))
                  Computing fullDFS: x1586
                  Computing fullDFS: x1585
                  Computing fullDFS: x1575
                  Computing fullDFS: x1574
                  Computing fullDFS: x2122
                  cur: x2122, inReduce: false, latency: 0.0
                  Computing fullDFS: x2123
                  cur: x2123, inReduce: false, latency: 0.0
                  Computing fullDFS: x2124
                  Computing fullDFS: x1573
                  Computing fullDFS: x1571
                  Computing fullDFS: x1570
                  cur: x1570, inReduce: false, latency: 0.2
                  Computing fullDFS: x1572
                  cur: x1572, inReduce: false, latency: 0.2
                  Computing fullDFS: x2125
                  cur: x2125, inReduce: false, latency: 0.0
                  Computing fullDFS: x2126
                  cur: x2126, inReduce: false, latency: 0.0
                  Computing fullDFS: x2127
                  cur: x2127, inReduce: false, latency: 0.0
                  Computing fullDFS: x2128
                  cur: x2128, inReduce: false, latency: 0.0
                  Computing fullDFS: x1584
                  Computing fullDFS: x1579
                  Computing fullDFS: x1578
                  Computing fullDFS: x1577
                  Computing fullDFS: x1576
                  Computing fullDFS: x2129
                  cur: x2129, inReduce: false, latency: 0.0
                  Computing fullDFS: x2130
                  cur: x2130, inReduce: false, latency: 0.0
                  Computing fullDFS: x2131
                  cur: x2131, inReduce: false, latency: 0.0
                  Computing fullDFS: x2132
                  cur: x2132, inReduce: false, latency: 0.0
                  Computing fullDFS: x2133
                  cur: x2133, inReduce: false, latency: 0.0
                  Computing fullDFS: x2134
                  cur: x2134, inReduce: false, latency: 0.0
                  Computing fullDFS: x1583
                  Computing fullDFS: x1582
                  Computing fullDFS: x1581
                  Computing fullDFS: x1580
                  cur: x1580, inReduce: false, latency: 0.2
                  Computing fullDFS: x2135
                  cur: x2135, inReduce: false, latency: 0.0
                  Computing fullDFS: x2136
                  cur: x2136, inReduce: false, latency: 0.0
                  Computing fullDFS: x2137
                  Computing fullDFS: x2138
                  cur: x2138, inReduce: false, latency: 0.0
                  Computing fullDFS: x2139
                  cur: x2139, inReduce: false, latency: 0.0
                  Computing fullDFS: x2140
                  cur: x2140, inReduce: false, latency: 0.0
                  Computing fullDFS: x2141
                  cur: x2141, inReduce: false, latency: 0.0
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1587
                  Cycle #0: write: x1587, cycle: x1574, x1574, x1575, x1585, x1587
                  Cycles: Map(x1587 -> Vector(x1574, x1574, x1575, x1585, x1587), x1575 -> Vector(x1574, x1575), x1574 -> List(x1574), x1586 -> Vector(x1574, x1575, x1585, x1586), x1585 -> Vector(x1574, x1575, x1585))
                  pseudo cycles for x1018:
                  Access: x1574 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,13,Vector(13),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,13,Vector(13),Vector(0)))
                  Pushing x1574 = SRAMBankedRead(x1018,Vector(List(Const(3), Const(1))),Vector(x2124),Vector(Set(x2126, x2122, x2125, x2128, x2123, x2127)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1587 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,13,Vector(13),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,13,Vector(13),Vector(0)))
                  Pushing x1587 = SRAMBankedWrite(x1018,Vector(x1585),Vector(List(Const(3), Const(1))),Vector(x2137),Vector(Set(x2141, x2136, x2140, x2139, x2135, x2138))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1574),x1018,1.0), AAACycle(Vector(x1587),x1018,1.0), WARCycle(x1574,x1587,x1018,Vector(x1574, x1574, x1575, x1585, x1587),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1570, None
                     stm: x1571, None
                     stm: x1572, None
                     stm: x1573, None
                     stm: x2122, None
                     stm: x2123, None
                     stm: x2124, None
                     stm: x2125, None
                     stm: x2126, None
                     stm: x2127, None
                     stm: x2128, None
                     stm: x1574, None
                     stm: x1575, None
                     stm: x1576, None
                     stm: x1577, None
                     stm: x2129, None
                     stm: x2130, None
                     stm: x2131, None
                     stm: x2132, None
                     stm: x2133, None
                     stm: x2134, None
                     stm: x1578, None
                     stm: x1579, None
                     stm: x1580, None
                     stm: x1581, None
                     stm: x1582, None
                     stm: x1583, None
                     stm: x1584, None
                     stm: x1585, None
                     stm: x2135, None
                     stm: x2136, None
                     stm: x2137, None
                     stm: x2138, None
                     stm: x2139, None
                     stm: x2140, None
                     stm: x2141, None
                     stm: x1586, None
                     stm: x1587, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                  x1611 = UnrolledForeach(Set(b1168, b1529, b925, b1006, b914),x1541,Block(Const(())),List(List(b1589)),List(List(b1590)),None)
                  Working on pipeLatencies of result Vector(Const(()), x1601, x1609, x1605, x1610, x1597), schedule Vector(x1593, x1594, x1595, x1596, x2142, x2143, x2144, x2145, x2146, x2147, x2148, x1597, x1598, x1599, x1600, x2149, x2150, x2151, x2152, x2153, x2154, x1601, x1602, x1603, x1604, x1605, x1606, x1607, x1608, x2155, x2156, x2157, x2158, x2159, x2160, x2161, x1609, x1610)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1597, x1610): Set()
                  NonConflictSets(x1597, x1610): Set()
                  Found Cycle: x1597, x1610
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1597,x1610)), Map(x1608 -> List(AccumTriple(x1018,x1597,x1610)), x1610 -> List(AccumTriple(x1018,x1597,x1610)), x1598 -> List(AccumTriple(x1018,x1597,x1610)), x1597 -> List(AccumTriple(x1018,x1597,x1610)))
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1601
                  Computing fullDFS: x1600
                  Computing fullDFS: x1599
                  Computing fullDFS: x1593
                  cur: x1593, inReduce: false, latency: 0.2
                  Computing fullDFS: x2149
                  cur: x2149, inReduce: false, latency: 0.0
                  Computing fullDFS: x2150
                  cur: x2150, inReduce: false, latency: 0.0
                  Computing fullDFS: x2151
                  cur: x2151, inReduce: false, latency: 0.0
                  Computing fullDFS: x2152
                  cur: x2152, inReduce: false, latency: 0.0
                  Computing fullDFS: x2153
                  cur: x2153, inReduce: false, latency: 0.0
                  Computing fullDFS: x2154
                  cur: x2154, inReduce: false, latency: 0.0
                  Computing fullDFS: x1609
                  Computing fullDFS: x1608
                  Computing fullDFS: x1598
                  Computing fullDFS: x1597
                  Computing fullDFS: x2142
                  cur: x2142, inReduce: false, latency: 0.0
                  Computing fullDFS: x2143
                  Computing fullDFS: x1596
                  Computing fullDFS: x1594
                  Computing fullDFS: x1595
                  cur: x1595, inReduce: false, latency: 0.2
                  Computing fullDFS: x2144
                  cur: x2144, inReduce: false, latency: 0.0
                  Computing fullDFS: x2145
                  cur: x2145, inReduce: false, latency: 0.0
                  Computing fullDFS: x2146
                  cur: x2146, inReduce: false, latency: 0.0
                  Computing fullDFS: x2147
                  cur: x2147, inReduce: false, latency: 0.0
                  Computing fullDFS: x2148
                  cur: x2148, inReduce: false, latency: 0.0
                  Computing fullDFS: x1607
                  Computing fullDFS: x1602
                  Computing fullDFS: x1606
                  Computing fullDFS: x1605
                  Computing fullDFS: x1604
                  Computing fullDFS: x1603
                  cur: x1603, inReduce: false, latency: 0.2
                  Computing fullDFS: x2155
                  cur: x2155, inReduce: false, latency: 0.0
                  Computing fullDFS: x2156
                  Computing fullDFS: x2157
                  cur: x2157, inReduce: false, latency: 0.0
                  Computing fullDFS: x2158
                  cur: x2158, inReduce: false, latency: 0.0
                  Computing fullDFS: x2159
                  cur: x2159, inReduce: false, latency: 0.0
                  Computing fullDFS: x2160
                  cur: x2160, inReduce: false, latency: 0.0
                  Computing fullDFS: x2161
                  cur: x2161, inReduce: false, latency: 0.0
                  Computing fullDFS: x1610
                  Cycle #0: write: x1610, cycle: x1597, x1597, x1598, x1608, x1610
                  Cycles: Map(x1608 -> Vector(x1597, x1598, x1608), x1610 -> Vector(x1597, x1597, x1598, x1608, x1610), x1598 -> Vector(x1597, x1598), x1597 -> List(x1597), x1609 -> Vector(x1597, x1598, x1608, x1609))
                  pseudo cycles for x1018:
                  Access: x1597 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,14,Vector(14),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,14,Vector(14),Vector(0)))
                  Pushing x1597 = SRAMBankedRead(x1018,Vector(List(Const(3), Const(2))),Vector(x2143),Vector(Set(x2146, x2147, x2144, x2148, x2145, x2142)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1610 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,14,Vector(14),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,14,Vector(14),Vector(0)))
                  Pushing x1610 = SRAMBankedWrite(x1018,Vector(x1608),Vector(List(Const(3), Const(2))),Vector(x2156),Vector(Set(x2158, x2157, x2161, x2160, x2155, x2159))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1597),x1018,1.0), AAACycle(Vector(x1610),x1018,1.0), WARCycle(x1597,x1610,x1018,Vector(x1597, x1597, x1598, x1608, x1610),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1593, None
                     stm: x1594, None
                     stm: x1595, None
                     stm: x1596, None
                     stm: x2142, None
                     stm: x2143, None
                     stm: x2144, None
                     stm: x2145, None
                     stm: x2146, None
                     stm: x2147, None
                     stm: x2148, None
                     stm: x1597, None
                     stm: x1598, None
                     stm: x1599, None
                     stm: x1600, None
                     stm: x2149, None
                     stm: x2150, None
                     stm: x2151, None
                     stm: x2152, None
                     stm: x2153, None
                     stm: x2154, None
                     stm: x1601, None
                     stm: x1602, None
                     stm: x1603, None
                     stm: x1604, None
                     stm: x1605, None
                     stm: x1606, None
                     stm: x1607, None
                     stm: x1608, None
                     stm: x2155, None
                     stm: x2156, None
                     stm: x2157, None
                     stm: x2158, None
                     stm: x2159, None
                     stm: x2160, None
                     stm: x2161, None
                     stm: x1609, None
                     stm: x1610, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                  x1634 = UnrolledForeach(Set(b1168, b925, b1006, b1530, b914),x1542,Block(Const(())),List(List(b1612)),List(List(b1613)),None)
                  Working on pipeLatencies of result Vector(x1633, Const(()), x1628, x1632, x1624, x1620), schedule Vector(x1616, x1617, x1618, x1619, x2162, x2163, x2164, x2165, x2166, x2167, x2168, x1620, x1621, x1622, x1623, x2169, x2170, x2171, x2172, x2173, x2174, x1624, x1625, x1626, x1627, x1628, x1629, x1630, x1631, x2175, x2176, x2177, x2178, x2179, x2180, x2181, x1632, x1633)
                  Memories with both reads and writes in this scope: Set(x1018)
                  NonConflictSets(x1620, x1633): Set()
                  NonConflictSets(x1620, x1633): Set()
                  Found Cycle: x1620, x1633
                  Exclusions: Set() Set() 
                  Done finding cycles: Vector(AccumTriple(x1018,x1620,x1633)), Map(x1620 -> List(AccumTriple(x1018,x1620,x1633)), x1631 -> List(AccumTriple(x1018,x1620,x1633)), x1633 -> List(AccumTriple(x1018,x1620,x1633)), x1621 -> List(AccumTriple(x1018,x1620,x1633)))
                  Computing fullDFS: x1633
                  Computing fullDFS: x1620
                  Computing fullDFS: x2162
                  cur: x2162, inReduce: false, latency: 0.0
                  Computing fullDFS: x2163
                  cur: x2163, inReduce: false, latency: 0.0
                  Computing fullDFS: x2164
                  cur: x2164, inReduce: false, latency: 0.0
                  Computing fullDFS: x2165
                  Computing fullDFS: x1619
                  Computing fullDFS: x1617
                  Computing fullDFS: x1616
                  cur: x1616, inReduce: false, latency: 0.2
                  Computing fullDFS: x1618
                  cur: x1618, inReduce: false, latency: 0.2
                  Computing fullDFS: x2166
                  cur: x2166, inReduce: false, latency: 0.0
                  Computing fullDFS: x2167
                  cur: x2167, inReduce: false, latency: 0.0
                  Computing fullDFS: x2168
                  cur: x2168, inReduce: false, latency: 0.0
                  Computing fullDFS: x1631
                  Computing fullDFS: x1621
                  Computing fullDFS: x1630
                  Computing fullDFS: x1625
                  Computing fullDFS: x1624
                  Computing fullDFS: x1623
                  Computing fullDFS: x1622
                  Computing fullDFS: x2169
                  cur: x2169, inReduce: false, latency: 0.0
                  Computing fullDFS: x2170
                  cur: x2170, inReduce: false, latency: 0.0
                  Computing fullDFS: x2171
                  cur: x2171, inReduce: false, latency: 0.0
                  Computing fullDFS: x2172
                  cur: x2172, inReduce: false, latency: 0.0
                  Computing fullDFS: x2173
                  cur: x2173, inReduce: false, latency: 0.0
                  Computing fullDFS: x2174
                  cur: x2174, inReduce: false, latency: 0.0
                  Computing fullDFS: x1629
                  Computing fullDFS: x1628
                  Computing fullDFS: x1627
                  Computing fullDFS: x1626
                  cur: x1626, inReduce: false, latency: 0.2
                  Computing fullDFS: x2175
                  cur: x2175, inReduce: false, latency: 0.0
                  Computing fullDFS: x2176
                  cur: x2176, inReduce: false, latency: 0.0
                  Computing fullDFS: x2177
                  cur: x2177, inReduce: false, latency: 0.0
                  Computing fullDFS: x2178
                  Computing fullDFS: x2179
                  cur: x2179, inReduce: false, latency: 0.0
                  Computing fullDFS: x2180
                  cur: x2180, inReduce: false, latency: 0.0
                  Computing fullDFS: x2181
                  cur: x2181, inReduce: false, latency: 0.0
                  Computing fullDFS: Const(())
                  Computing fullDFS: x1632
                  Cycle #0: write: x1633, cycle: x1620, x1620, x1621, x1631, x1633
                  Cycles: Map(x1620 -> List(x1620), x1632 -> Vector(x1620, x1621, x1631, x1632), x1631 -> Vector(x1620, x1621, x1631), x1633 -> Vector(x1620, x1620, x1621, x1631, x1633), x1621 -> Vector(x1620, x1621))
                  pseudo cycles for x1018:
                  Access: x1620 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,15,Vector(15),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,15,Vector(15),Vector(0)))
                  Pushing x1620 = SRAMBankedRead(x1018,Vector(List(Const(3), Const(3))),Vector(x2165),Vector(Set(x2163, x2168, x2164, x2166, x2167, x2162)),Vec[Fix[TRUE,_24,_8]]) by 0.0 to 9.4 due to muxing.
                  Access: x1633 -> Ports: Some(Map(0 -> Map(List() -> Port(Some(1),0,15,Vector(15),Vector(0)))))
                  First Port: Map(List() -> Port(Some(1),0,15,Vector(15),Vector(0)))
                  Pushing x1633 = SRAMBankedWrite(x1018,Vector(x1631),Vector(List(Const(3), Const(3))),Vector(x2178),Vector(Set(x2179, x2181, x2176, x2180, x2175, x2177))) by 0.0 to 11.4 due to muxing.
                  cycles are Vector(AAACycle(Vector(x1620),x1018,1.0), AAACycle(Vector(x1633),x1018,1.0), WARCycle(x1620,x1633,x1018,Vector(x1620, x1620, x1621, x1631, x1633),4.0,spatial.node.AccumMarker$Unknown$@4bff6160,-1))
                     stm: x1616, None
                     stm: x1617, None
                     stm: x1618, None
                     stm: x1619, None
                     stm: x2162, None
                     stm: x2163, None
                     stm: x2164, None
                     stm: x2165, None
                     stm: x2166, None
                     stm: x2167, None
                     stm: x2168, None
                     stm: x1620, None
                     stm: x1621, None
                     stm: x1622, None
                     stm: x1623, None
                     stm: x2169, None
                     stm: x2170, None
                     stm: x2171, None
                     stm: x2172, None
                     stm: x2173, None
                     stm: x2174, None
                     stm: x1624, None
                     stm: x1625, None
                     stm: x1626, None
                     stm: x1627, None
                     stm: x1628, None
                     stm: x1629, None
                     stm: x1630, None
                     stm: x1631, None
                     stm: x2175, None
                     stm: x2176, None
                     stm: x2177, None
                     stm: x2178, None
                     stm: x2179, None
                     stm: x2180, None
                     stm: x2181, None
                     stm: x1632, None
                     stm: x1633, None
                   - Latency:  11.4
                   - Interval: 4.0 (1.0 bbox)
                   - Iter Diff: None (from ArrayBuffer())
                 - Interval: 4.0
               - Interval: 4.0
             - Interval: 4.0
           - Interval: 4.0
          x1701 = UnitPipe(Set(b1006, b925, b914),Block(Const(())),None)
            x1700 = UnrolledForeach(Set(),x1643,Block(Const(())),List(List(b1644)),List(List(b1645)),None)
              x1695 = UnitPipe(Set(b1645),Block(Const(())),None)
                x1672 = UnitPipe(Set(),Block(Const(())),None)
                Working on pipeLatencies of result Vector(Const(()), x1671, x1650, x1664, x1668, x1669, x1667, x1670, x1657), schedule Vector(x1649, x1650, x2182, x2183, x1806, x1653, x1654, x1807, x1656, x1657, x2184, x1658, x1659, x1660, x1661, x1808, x1663, x1664, x2185, x1665, x2186, x1666, x1667, x2187, x1668, x1669, x1670, x1671)
                Memories with both reads and writes in this scope: Set()
                Done finding cycles: Vector(), Map()
                Computing fullDFS: Const(())
                Computing fullDFS: x1671
                Computing fullDFS: x1661
                Computing fullDFS: x1660
                Computing fullDFS: x1659
                Computing fullDFS: x1658
                Computing fullDFS: x1656
                Computing fullDFS: x1806
                Computing fullDFS: x1649
                cur: x1649, inReduce: false, latency: 1.0
                Computing fullDFS: x2182
                Computing fullDFS: x1650
                cur: x1650, inReduce: false, latency: 0.0
                Computing fullDFS: x2183
                cur: x2183, inReduce: false, latency: 0.0
                Computing fullDFS: x1654
                Computing fullDFS: x1653
                Computing fullDFS: x2184
                Computing fullDFS: x1657
                cur: x1657, inReduce: false, latency: 0.0
                Computing fullDFS: x1664
                cur: x1664, inReduce: false, latency: 0.0
                Computing fullDFS: x1668
                Computing fullDFS: x1666
                Computing fullDFS: x1808
                Computing fullDFS: x2186
                Computing fullDFS: x1665
                Computing fullDFS: x1663
                Computing fullDFS: x1807
                Computing fullDFS: x2185
                Computing fullDFS: x2187
                Computing fullDFS: x1667
                cur: x1667, inReduce: false, latency: 0.0
                Computing fullDFS: x1669
                Computing fullDFS: x1670
                Cycles: Map()
                cycles are Vector()
                   stm: x1649, None
                   stm: x1650, None
                   stm: x2182, None
                   stm: x2183, None
                   stm: x1806, None
                   stm: x1653, None
                   stm: x1654, None
                   stm: x1807, None
                   stm: x1656, None
                   stm: x1657, None
                   stm: x2184, None
                   stm: x1658, None
                   stm: x1659, None
                   stm: x1660, None
                   stm: x1661, None
                   stm: x1808, None
                   stm: x1663, None
                   stm: x1664, None
                   stm: x2185, None
                   stm: x1665, None
                   stm: x2186, None
                   stm: x1666, None
                   stm: x1667, None
                   stm: x2187, None
                   stm: x1668, None
                   stm: x1669, None
                   stm: x1670, None
                   stm: x1671, None
                 - Latency:  11.8
                 - Interval: 1.0 (1.0 bbox)
                 - Iter Diff: None (from ArrayBuffer())
                x1694 = UnrolledForeach(Set(),x1675,Block(Const(())),List(List(b1676)),List(List(b1677)),None)
                Working on pipeLatencies of result Vector(Const(()), x1680, x1690, x1678, x1693), schedule Vector(x1678, x1679, x1680, x1681, x1682, x1683, x1809, x1810, x1686, x1687, x1688, x2188, x1689, x2189, x2190, x2191, x2192, x1690, x1691, x2193, x1692, x2194, x1693)
                Memories with both reads and writes in this scope: Set()
                Done finding cycles: Vector(), Map()
                Computing fullDFS: Const(())
                Computing fullDFS: x1680
                cur: x1680, inReduce: false, latency: 0.0
                Computing fullDFS: x1690
                Computing fullDFS: x1689
                Computing fullDFS: x1688
                Computing fullDFS: x1683
                Computing fullDFS: x1678
                cur: x1678, inReduce: false, latency: 0.0
                Computing fullDFS: x2188
                Computing fullDFS: x1687
                Computing fullDFS: x1686
                cur: x1686, inReduce: false, latency: 0.2
                Computing fullDFS: x2189
                Computing fullDFS: x1809
                cur: x1809, inReduce: false, latency: 0.2
                Computing fullDFS: x2190
                Computing fullDFS: x1810
                Computing fullDFS: x2191
                cur: x2191, inReduce: false, latency: 0.0
                Computing fullDFS: x2192
                Computing fullDFS: x1682
                Computing fullDFS: x1679
                Computing fullDFS: x1681
                Computing fullDFS: x1693
                Computing fullDFS: x1692
                Computing fullDFS: x1691
                Computing fullDFS: x2193
                Computing fullDFS: x2194
                cur: x2194, inReduce: false, latency: 0.0
                Cycles: Map()
                cycles are Vector()
                   stm: x1678, None
                   stm: x1679, None
                   stm: x1680, None
                   stm: x1681, None
                   stm: x1682, None
                   stm: x1683, None
                   stm: x1809, None
                   stm: x1810, None
                   stm: x1686, None
                   stm: x1687, None
                   stm: x1688, None
                   stm: x2188, None
                   stm: x1689, None
                   stm: x2189, None
                   stm: x2190, None
                   stm: x2191, None
                   stm: x2192, None
                   stm: x1690, None
                   stm: x1691, None
                   stm: x2193, None
                   stm: x1692, None
                   stm: x2194, None
                   stm: x1693, None
                 - Latency:  4.2
                 - Interval: 1.0 (1.0 bbox)
                 - Iter Diff: None (from ArrayBuffer())
               - Interval: 1.0
              x1699 = UnitPipe(Set(b1645),Block(Const(())),None)
              Working on pipeLatencies of result Vector(Const(()), x1697), schedule Vector(x1697)
              Memories with both reads and writes in this scope: Set()
              Done finding cycles: Vector(), Map()
              Computing fullDFS: Const(())
              Computing fullDFS: x1697
              cur: x1697, inReduce: false, latency: 1.0
              Cycles: Map()
              cycles are Vector()
                 stm: x1697, None
               - Latency:  1.0
               - Interval: 1.0 (1.0 bbox)
               - Iter Diff: None (from ArrayBuffer())
             - Interval: 1.0
           - Interval: 1.0
         - Interval: 11.8
       - Interval: 11.8
     - Interval: 11.8
   - Interval: 11.8
