x83 = InputArguments()
 - Type: Array[Text]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x84 = ArrayApply(x83,Const(0))
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x85 = TextToFix(x84,TRUE,_32,_0)
 - Name: N
 - Type: Fix[TRUE,_32,_0]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x86 = ArrayApply(x83,Const(1))
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x87 = TextToFix(x86,TRUE,_32,_0)
 - Name: M
 - Type: Fix[TRUE,_32,_0]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x88 = ArrayApply(x83,Const(2))
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x89 = TextToFix(x88,TRUE,_32,_0)
 - Name: K
 - Type: Fix[TRUE,_32,_0]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x90 = ArgInNew(Const(0))
 - Name: argRegIn0
 - Type: Reg[Fix[TRUE,_32,_0]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x91 = ArgInNew(Const(0))
 - Name: argRegIn1
 - Type: Reg[Fix[TRUE,_32,_0]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x92 = ArgInNew(Const(0))
 - Name: argRegIn2
 - Type: Reg[Fix[TRUE,_32,_0]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x93 = SetReg(x90,x85)
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x94 = SetReg(x91,x87)
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x95 = SetReg(x92,x89)
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x96 = ArgOutNew(Const(0))
 - Name: argRegOut
 - Type: Reg[Fix[TRUE,_32,_0]]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x59 = AccelScope(Block(Const(()))) {
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
  block 0: Block(Const(())) {
    x97 = RegRead(x90)
     - Type: Fix[TRUE,_32,_0]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x98 = RegRead(x91)
     - Type: Fix[TRUE,_32,_0]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x99 = RegRead(x92)
     - Type: Fix[TRUE,_32,_0]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x100 = FixAdd(x97,x98)
     - Type: Fix[TRUE,_32,_0]
     - Cycle: <no cycle>
     - Latency:          1.0
     - Reduce Latency:   1.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x120 = DelayLine(1,x99)
     - Type: Fix[TRUE,_32,_0]
     - Cycle: <no cycle>
     - Latency:          0.0
     - Reduce Latency:   0.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x101 = FixAdd(x100,x120)
     - Type: Fix[TRUE,_32,_0]
     - Cycle: <no cycle>
     - Latency:          1.0
     - Reduce Latency:   1.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
    x102 = RegWrite(x96,x101,Set())
     - Type: Void
     - Cycle: <no cycle>
     - Latency:          1.0
     - Reduce Latency:   1.0
     - Requires Regs:    false
     - Built-In Latency: 0.0
     - Delays: <none>
  } // End of x59 block #0
} // End of x59
x103 = GetReg(x96)
 - Type: Fix[TRUE,_32,_0]
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x104 = FixToText(x103,None)
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x105 = TextConcat(List(Const("Result = "), x104))
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x106 = TextConcat(List(x105, Const("\n")))
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x107 = PrintIf(Set(),x106)
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x108 = FixAdd(x87,x85)
 - Type: Fix[TRUE,_32,_0]
 - Cycle: <no cycle>
 - Latency:          1.0
 - Reduce Latency:   1.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x109 = FixAdd(x108,x89)
 - Name: gold
 - Type: Fix[TRUE,_32,_0]
 - Cycle: <no cycle>
 - Latency:          1.0
 - Reduce Latency:   1.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x110 = FixToText(x109,None)
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x111 = TextConcat(List(Const("Gold = "), x110))
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x112 = TextConcat(List(x111, Const("\n")))
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x113 = PrintIf(Set(),x112)
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x114 = FixEql(x109,x103)
 - Name: cksum
 - Type: Bit
 - Cycle: <no cycle>
 - Latency:          0.2
 - Reduce Latency:   0.2
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x115 = BitToText(x114)
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x116 = TextConcat(List(Const("PASS = "), x115))
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x117 = TextConcat(List(x116, Const("\n")))
 - Type: Text
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x118 = PrintIf(Set(),x117)
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
x119 = AssertIf(Set(),x114,Some(Const("Lab1.scala:62:15: Assertion failure")))
 - Type: Void
 - Cycle: <no cycle>
 - Latency:          0.0
 - Reduce Latency:   0.0
 - Requires Regs:    false
 - Built-In Latency: 0.0
 - Delays: <none>
